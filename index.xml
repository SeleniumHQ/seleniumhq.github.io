<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Selenium</title><link>https://www.selenium.dev/</link><description>Recent content on Selenium</description><generator>Hugo</generator><language>en</language><atom:link href="https://www.selenium.dev/index.xml" rel="self" type="application/rss+xml"/><item><title>Browsing Context</title><link>https://www.selenium.dev/documentation/webdriver/bidi/w3c/browsing_context/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/documentation/webdriver/bidi/w3c/browsing_context/</guid><description>Commands This section contains the APIs related to browsing context commands.
Open a new window Creates a new browsing context in a new window.
Java Ruby JavaScript Kotlin Selenium v4.8
void testCreateAWindow() { BrowsingContext browsingContext = new BrowsingContext(driver, WindowType.WINDOW); Assertions.assertNotNull(browsingContext.getId()); } View full example on GitHub Add Example
Selenium v4.8
const browsingContext = await BrowsingContext(driver, { type: &amp;#39;window&amp;#39;, }) View full example on GitHub Add Example
Open a new tab Creates a new browsing context in a new tab.</description></item><item><title>Captchas</title><link>https://www.selenium.dev/documentation/test_practices/discouraged/captchas/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/documentation/test_practices/discouraged/captchas/</guid><description>CAPTCHA, short for Completely Automated Public Turing test to tell Computers and Humans Apart, is explicitly designed to prevent automation, so do not try! There are two primary strategies to get around CAPTCHA checks:
Disable CAPTCHAs in your test environment Add a hook to allow tests to bypass the CAPTCHA</description></item><item><title>Selenium components</title><link>https://www.selenium.dev/documentation/overview/components/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/documentation/overview/components/</guid><description>Building a test suite using WebDriver will require you to understand and effectively use several components. As with everything in software, different people use different terms for the same idea. Below is a breakdown of how terms are used in this description.
Terminology API: Application Programming Interface. This is the set of &amp;ldquo;commands&amp;rdquo; you use to manipulate WebDriver. Library: A code module that contains the APIs and the code necessary to implement them.</description></item><item><title>Copyright and attributions</title><link>https://www.selenium.dev/documentation/about/copyright/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/documentation/about/copyright/</guid><description>The Documentation of Selenium Every effort has been made to make this documentation as complete and as accurate as possible, but no warranty or fitness is implied. The information provided is on an “as-is” basis. The authors and the publisher shall have neither liability nor responsibility to any person or entity with respect to any loss or damages arising from the information contained herein. No patent liability is assumed with respect to the use of the information contained herein.</description></item><item><title>Design patterns and development strategies</title><link>https://www.selenium.dev/documentation/test_practices/design_strategies/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/documentation/test_practices/design_strategies/</guid><description>(previously located: https://github.com/SeleniumHQ/selenium/wiki/Bot-Style-Tests)
Overview Over time, projects tend to accumulate large numbers of tests. As the total number of tests increases, it becomes harder to make changes to the codebase &amp;mdash; a single &amp;ldquo;simple&amp;rdquo; change may cause numerous tests to fail, even though the application still works properly. Sometimes these problems are unavoidable, but when they do occur you want to be up and running again as quickly as possible. The following design patterns and strategies have been used before with WebDriver to help make tests easier to write and maintain.</description></item><item><title>Waiting with Expected Conditions</title><link>https://www.selenium.dev/documentation/webdriver/support_features/expected_conditions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/documentation/webdriver/support_features/expected_conditions/</guid><description>Expected Conditions are used with Explicit Waits. Instead of defining the block of code to be executed with a lambda, an expected conditions method can be created to represent common things that get waited on. Some methods take locators as arguments, others take elements as arguments.
These methods can include conditions such as:
element exists element is stale element is visible text is visible title contains specified value Java Python CSharp Ruby JavaScript Kotlin Expected Conditions Documentation</description></item><item><title>File Upload</title><link>https://www.selenium.dev/documentation/webdriver/elements/file_upload/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/documentation/webdriver/elements/file_upload/</guid><description>Because Selenium cannot interact with the file upload dialog, it provides a way to upload files without opening the dialog. If the element is an input element with type file, you can use the send keys method to send the full path to the file that will be uploaded.
Java Python CSharp Ruby JavaScript Kotlin WebElement fileInput = driver.findElement(By.cssSelector(&amp;#34;input[type=file]&amp;#34;)); fileInput.sendKeys(uploadFile.getAbsolutePath()); driver.findElement(By.id(&amp;#34;file-submit&amp;#34;)).click(); View full example on GitHub file_input = driver.find_element(By.CSS_SELECTOR, &amp;#34;input[type=&amp;#39;file&amp;#39;]&amp;#34;) file_input.</description></item><item><title>Configuration help</title><link>https://www.selenium.dev/documentation/grid/configuration/help/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/documentation/grid/configuration/help/</guid><description>The help commands display information based on the current code implementation. Hence, it will provide accurate information in case the documentation is not updated. It is the easiest way to learn about Grid 4 configuration for any new version.
Info Command The info command provides detailed docs on the following topics:
Configuring Selenium Security Session Map setup Tracing Config help Quick config help and overview is provided by running:</description></item><item><title>Input</title><link>https://www.selenium.dev/documentation/webdriver/bidi/w3c/input/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/documentation/webdriver/bidi/w3c/input/</guid><description>This section contains the APIs related to input commands.
Perform Actions Java Ruby JavaScript Kotlin Selenium v4.17
Actions selectThreeOptions = actions.click(options.get(1)).keyDown(Keys.SHIFT).click(options.get(3)).keyUp(Keys.SHIFT); input.perform(windowHandle, selectThreeOptions.getSequences()); View full example on GitHub Add Example
Selenium v4.17
const actions = driver.actions().click(options[1]).keyDown(Key.SHIFT).click(options[3]).keyUp(Key.SHIFT).getSequences() await input.perform(browsingContextId, actions) View full example on GitHub Add Example
Release Actions Java Ruby JavaScript Kotlin Selenium v4.17
Actions sendLowercase = new Actions(driver).keyDown(inputTextBox, &amp;#34;a&amp;#34;).keyDown(inputTextBox, &amp;#34;b&amp;#34;); input.perform(windowHandle, sendLowercase.getSequences()); ((JavascriptExecutor) driver).executeScript(&amp;#34;resetEvents()&amp;#34;); input.release(windowHandle); View full example on GitHub Add Example</description></item><item><title>Locator strategies</title><link>https://www.selenium.dev/documentation/webdriver/elements/locators/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/documentation/webdriver/elements/locators/</guid><description>A locator is a way to identify elements on a page. It is the argument passed to the Finding element methods.
Check out our encouraged test practices for tips on locators, including which to use when and why to declare locators separately from the finding methods.
Traditional Locators Selenium provides support for these 8 traditional location strategies in WebDriver:
Locator Description class name Locates elements whose class name contains the search value (compound class names are not permitted) css selector Locates elements matching a CSS selector id Locates elements whose ID attribute matches the search value name Locates elements whose NAME attribute matches the search value link text Locates anchor elements whose visible text matches the search value partial link text Locates anchor elements whose visible text contains the search value.</description></item><item><title>Log</title><link>https://www.selenium.dev/documentation/webdriver/bidi/w3c/log/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/documentation/webdriver/bidi/w3c/log/</guid><description>This section contains the APIs related to logging.
Console logs Listen to the console.log events and register callbacks to process the event.
Java Ruby JavaScript Kotlin Selenium v4.8
public void jsErrors() { CopyOnWriteArrayList&amp;lt;ConsoleLogEntry&amp;gt; logs = new CopyOnWriteArrayList&amp;lt;&amp;gt;(); try (LogInspector logInspector = new LogInspector(driver)) { logInspector.onConsoleEntry(logs::add); } driver.get(&amp;#34;https://www.selenium.dev/selenium/web/bidi/logEntryAdded.html&amp;#34;); View full example on GitHub Add Example
const inspector = await LogInspector(driver) await inspector.onConsoleEntry(function (log) { logEntry = log }) await driver.get(&amp;#39;https://www.selenium.dev/selenium/web/bidi/logEntryAdded.html&amp;#39;) await driver.</description></item><item><title>WebDriver BiDi Logging Features</title><link>https://www.selenium.dev/documentation/webdriver/bidi/logging/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/documentation/webdriver/bidi/logging/</guid><description>Remember that to use WebDriver BiDi, you must enable it in Options. For more details, see Enabling BiDi
Console Message Handlers Record or take actions on console.log events.
Add Handler Java Python CSharp Ruby JavaScript Kotlin Implementation Missing
driver.script.add_console_message_handler(log_entries.append) View full example on GitHub Implementation Missing
driver.script.add_console_message_handler { |log| log_entries &amp;lt;&amp;lt; log } View full example on GitHub Implementation Missing
Implementation Missing
Remove Handler You need to store the ID returned when adding the handler to delete it.</description></item><item><title>Browser navigation</title><link>https://www.selenium.dev/documentation/webdriver/interactions/navigation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/documentation/webdriver/interactions/navigation/</guid><description>Navigate to The first thing you will want to do after launching a browser is to open your website. This can be achieved in a single line:
Java Python CSharp Ruby JavaScript Kotlin //Convenient driver.get(&amp;#34;https://selenium.dev&amp;#34;); //Longer way driver.navigate().to(&amp;#34;https://selenium.dev&amp;#34;); View full example on GitHub driver.get(&amp;#34;https://www.selenium.dev/selenium/web/index.html&amp;#34;) View full example on GitHub //Convenient driver.Url = &amp;#34;https://selenium.dev&amp;#34;; //Longer driver.Navigate().GoToUrl(&amp;#34;https://selenium.dev&amp;#34;); View full example on GitHub driver.navigate.to &amp;#39;https://www.selenium.dev/&amp;#39; driver.get &amp;#39;https://www.selenium.dev/&amp;#39; expect(driver.current_url).to eq &amp;#39;https://www.selenium.dev/&amp;#39; View full example on GitHub //Convenient await driver.</description></item><item><title>WebDriver BiDi Network Features</title><link>https://www.selenium.dev/documentation/webdriver/bidi/network/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/documentation/webdriver/bidi/network/</guid><description>The implementation of these features is being tracked here: #13993
Remember that to use WebDriver BiDi, you must enable it in Options. For more details, see Enabling BiDi
Authentication Handlers Request Handlers Response Handlers</description></item><item><title>Network</title><link>https://www.selenium.dev/documentation/webdriver/bidi/w3c/network/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/documentation/webdriver/bidi/w3c/network/</guid><description>Commands This section contains the APIs related to network commands.
Add network intercept Java Ruby JavaScript Kotlin Selenium v4.18
try (Network network = new Network(driver)) { String intercept = network.addIntercept(new AddInterceptParameters(InterceptPhase.BEFORE_REQUEST_SENT)); View full example on GitHub Add Example
Selenium v4.18
const intercept = await network.addIntercept(new AddInterceptParameters(InterceptPhase.BEFORE_REQUEST_SENT)) View full example on GitHub Add Example
Remove network intercept Java Ruby JavaScript Kotlin Selenium v4.18
try (Network network = new Network(driver)) { String intercept = network.</description></item><item><title>Observability in Selenium Grid</title><link>https://www.selenium.dev/documentation/grid/advanced_features/observability/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/documentation/grid/advanced_features/observability/</guid><description>Table of Contents Selenium Grid Observability Distributed tracing Event logging Grid Observability Visualizing Traces Leveraging event logs References Selenium Grid Grid aids in scaling and distributing tests by executing tests on various browser and operating system combinations.
Observability Observability has three pillars: traces, metrics and logs. Since Selenium Grid 4 is designed to be fully distributed, observability will make it easier to understand and debug the internals.
Distributed tracing A single request or transaction spans multiple services and components.</description></item><item><title>Overview of Test Automation</title><link>https://www.selenium.dev/documentation/test_practices/overview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/documentation/test_practices/overview/</guid><description>First, start by asking yourself whether or not you really need to use a browser. Odds are that, at some point, if you are working on a complex web application, you will need to open a browser and actually test it.
Functional end-user tests such as Selenium tests are expensive to run, however. Furthermore, they typically require substantial infrastructure to be in place to be run effectively. It is a good rule to always ask yourself if what you want to test can be done using more lightweight test approaches such as unit tests or with a lower-level approach.</description></item><item><title>WebDriver BiDi Script Features</title><link>https://www.selenium.dev/documentation/webdriver/bidi/script/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/documentation/webdriver/bidi/script/</guid><description>The implementation of these features is being tracked here: #13992
Remember that to use WebDriver BiDi, you must enable it in Options. For more details, see Enabling BiDi
Script Pinning Execute Script DOM Mutation Handlers</description></item><item><title>Script</title><link>https://www.selenium.dev/documentation/webdriver/bidi/w3c/script/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/documentation/webdriver/bidi/w3c/script/</guid><description>Commands This section contains the APIs related to script commands.
Call function in a browsing context Java Ruby JavaScript Kotlin Selenium v4.15
try (Script script = new Script(id, driver)) { List&amp;lt;LocalValue&amp;gt; arguments = new ArrayList&amp;lt;&amp;gt;(); arguments.add(PrimitiveProtocolValue.numberValue(22)); Map&amp;lt;Object, LocalValue&amp;gt; value = new HashMap&amp;lt;&amp;gt;(); value.put(&amp;#34;some_property&amp;#34;, LocalValue.numberValue(42)); LocalValue thisParameter = LocalValue.objectValue(value); arguments.add(thisParameter); EvaluateResult result = script.callFunctionInBrowsingContext( id, &amp;#34;function processWithPromise(argument) {\n&amp;#34; + &amp;#34; return new Promise((resolve, reject) =&amp;gt; {\n&amp;#34; + &amp;#34; setTimeout(() =&amp;gt; {\n&amp;#34; + &amp;#34; resolve(argument + this.</description></item><item><title>JavaScript alerts, prompts and confirmations</title><link>https://www.selenium.dev/documentation/webdriver/interactions/alerts/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/documentation/webdriver/interactions/alerts/</guid><description>WebDriver provides an API for working with the three types of native popup messages offered by JavaScript. These popups are styled by the browser and offer limited customisation.
Alerts The simplest of these is referred to as an alert, which shows a custom message, and a single button which dismisses the alert, labelled in most browsers as OK. It can also be dismissed in most browsers by pressing the close button, but this will always do the same thing as the OK button.</description></item><item><title>CLI options in the Selenium Grid</title><link>https://www.selenium.dev/documentation/grid/configuration/cli_options/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/documentation/grid/configuration/cli_options/</guid><description>Different sections are available to configure a Grid. Each section has options can be configured through command line arguments.
A complete description of the component to section mapping can be seen below.
Note that this documentation could be outdated if an option was modified or added but has not been documented yet. In case you bump into this situation, please check the &amp;ldquo;Config help&amp;rdquo; section and feel free to send us a pull request updating this page.</description></item><item><title>Contributing to the Selenium site &amp; documentation</title><link>https://www.selenium.dev/documentation/about/contributing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/documentation/about/contributing/</guid><description>Selenium is a big software project, its site and documentation are key to understanding how things work and learning effective ways to exploit its potential.
This project contains both Selenium&amp;rsquo;s site and documentation. This is an ongoing effort (not targeted at any specific release) to provide updated information on how to use Selenium effectively, how to get involved and how to contribute to Selenium.
Contributions toward the site and docs follow the process described in the below section about contributions.</description></item><item><title>Crazy Fun Build Tool</title><link>https://www.selenium.dev/documentation/legacy/developers/crazy_fun_build/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/documentation/legacy/developers/crazy_fun_build/</guid><description>This documentation previously located on the wiki
WebDriver is a large project: if we tried to push everything into a single monolithic build file it eventually becomes unmanageable. We know this. We&amp;rsquo;ve tried it. So we broke the single Rakefile into a series of build.desc files. Each of these describe a part of the build.
Let&amp;rsquo;s take a look at a build.desc file. This is part of the main test build.</description></item><item><title>A deeper look at Selenium</title><link>https://www.selenium.dev/documentation/overview/details/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/documentation/overview/details/</guid><description>Selenium controls web browsers Selenium is many things but at its core, it is a toolset for web browser automation that uses the best techniques available to remotely control browser instances and emulate a user&amp;rsquo;s interaction with the browser.
Selenium allows users to simulate common activities performed by end-users; entering text into fields, selecting drop-down values and checking boxes, and clicking links in documents. It also provides many other controls such as mouse movement, arbitrary JavaScript execution, and much more.</description></item><item><title>File downloads</title><link>https://www.selenium.dev/documentation/test_practices/discouraged/file_downloads/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/documentation/test_practices/discouraged/file_downloads/</guid><description>Whilst it is possible to start a download by clicking a link with a browser under Selenium&amp;rsquo;s control, the API does not expose download progress, making it less than ideal for testing downloaded files. This is because downloading files is not considered an important aspect of emulating user interaction with the web platform. Instead, find the link using Selenium (and any required cookies) and pass it to a HTTP request library like libcurl.</description></item><item><title>Finding web elements</title><link>https://www.selenium.dev/documentation/webdriver/elements/finders/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/documentation/webdriver/elements/finders/</guid><description>One of the most fundamental aspects of using Selenium is obtaining element references to work with. Selenium offers a number of built-in locator strategies to uniquely identify an element. There are many ways to use the locators in very advanced scenarios. For the purposes of this documentation, let&amp;rsquo;s consider this HTML snippet:
&amp;lt;ol id=&amp;#34;vegetables&amp;#34;&amp;gt; &amp;lt;li class=&amp;#34;potatoes&amp;#34;&amp;gt;… &amp;lt;li class=&amp;#34;onions&amp;#34;&amp;gt;… &amp;lt;li class=&amp;#34;tomatoes&amp;#34;&amp;gt;&amp;lt;span&amp;gt;Tomato is a Vegetable&amp;lt;/span&amp;gt;… &amp;lt;/ol&amp;gt; &amp;lt;ul id=&amp;#34;fruits&amp;#34;&amp;gt; &amp;lt;li class=&amp;#34;bananas&amp;#34;&amp;gt;… &amp;lt;li class=&amp;#34;apples&amp;#34;&amp;gt;… &amp;lt;li class=&amp;#34;tomatoes&amp;#34;&amp;gt;&amp;lt;span&amp;gt;Tomato is a Fruit&amp;lt;/span&amp;gt;… &amp;lt;/ul&amp;gt; First matching element Many locators will match multiple elements on the page.</description></item><item><title>Getting started with Selenium Grid</title><link>https://www.selenium.dev/documentation/grid/getting_started/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/documentation/grid/getting_started/</guid><description>Quick start Prerequisites Java 11 or higher installed Browser(s) installed Browser driver(s) Selenium Manager will configure the drivers automatically if you add --selenium-manager true. Installed and on the PATH Download the Selenium Server jar file from the latest release Start the Grid java -jar selenium-server-&amp;lt;version&amp;gt;.jar standalone Point* your WebDriver tests to http://localhost:4444 (Optional) Check running tests and available capabilities by opening your browser at http://localhost:4444 *Wondering how to point your tests to http://localhost:4444?</description></item><item><title>GraphQL query support</title><link>https://www.selenium.dev/documentation/grid/advanced_features/graphql_support/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/documentation/grid/advanced_features/graphql_support/</guid><description>GraphQL is a query language for APIs and a runtime for fulfilling those queries with your existing data. It gives users the power to ask for exactly what they need and nothing more.
Enums Enums represent possible sets of values for a field.
For example, the Node object has a field called status. The state is an enum (specifically, of type Status) because it may be UP , DRAINING or UNAVAILABLE.</description></item><item><title>Grid 3</title><link>https://www.selenium.dev/documentation/legacy/selenium_3/grid_3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/documentation/legacy/selenium_3/grid_3/</guid><description>You can read our documentation for more information about Grid 4
Selenium Grid is a smart proxy server that allows Selenium tests to route commands to remote web browser instances. Its aim is to provide an easy way to run tests in parallel on multiple machines.
With Selenium Grid, one server acts as the hub that routes JSON formatted test commands to one or more registered Grid nodes. Tests contact the hub to obtain access to remote browser instances.</description></item><item><title>HTML runner</title><link>https://www.selenium.dev/documentation/legacy/selenium_ide/html_runner/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/documentation/legacy/selenium_ide/html_runner/</guid><description>Selenium HTML-runner allows you to run Test Suites from a command line. Test Suites are HTML exports from Selenium IDE or compatible tools.
Common information Combination of releases of geckodriver / firefox / selenium-html-runner matters. There might be a software compatibility matrix somewhere. selenium-html-runner runs only Test Suite (not Test Case - for example an export from Monitis Transaction Monitor). Be sure you comply with this. For Linux users with no DISPLAY - you need to start html-runner with Virtual display (search for xvfb) Example Linux environment Install / download following software packages:</description></item><item><title>Install a Selenium library</title><link>https://www.selenium.dev/documentation/webdriver/getting_started/install_library/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/documentation/webdriver/getting_started/install_library/</guid><description>First you need to install the Selenium bindings for your automation project. The installation process for libraries depends on the language you choose to use. Make sure you check the Selenium downloads page to make sure you are using the latest version.
Requirements by language Java Python CSharp Ruby JavaScript Kotlin View the minimum supported Java version here.
Installation of Selenium libraries for Java is accomplished using a build tool.</description></item><item><title>Interacting with web elements</title><link>https://www.selenium.dev/documentation/webdriver/elements/interactions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/documentation/webdriver/elements/interactions/</guid><description>There are only 5 basic commands that can be executed on an element:
click (applies to any element) send keys (only applies to text fields and content editable elements) clear (only applies to text fields and content editable elements) submit (only applies to form elements) select (see Select List Elements) Additional validations These methods are designed to closely emulate a user&amp;rsquo;s experience, so, unlike the Actions API, it attempts to perform two things before attempting the specified action.</description></item><item><title>Internet Explorer Driver Internals</title><link>https://www.selenium.dev/documentation/ie_driver_server/internals/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/documentation/ie_driver_server/internals/</guid><description>Client Code Into the Driver We use the W3C WebDriver protocol to communicate with a local instance of an HTTP server. This greatly simplifies the implementation of the language-specific code, and minimzes the number of entry points into the C++ DLL that must be called using a native-code interop technology such as JNA, ctypes, pinvoke or DL.
Memory Management The IE driver utilizes the Active Template Library (ATL) to take advantage of its implementation of smart pointers to COM objects.</description></item><item><title>Keyboard actions</title><link>https://www.selenium.dev/documentation/webdriver/actions_api/keyboard/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/documentation/webdriver/actions_api/keyboard/</guid><description>There are only 2 actions that can be accomplished with a keyboard: pressing down on a key, and releasing a pressed key. In addition to supporting ASCII characters, each keyboard key has a representation that can be pressed or released in designated sequences.
Keys In addition to the keys represented by regular unicode, unicode values have been assigned to other keyboard keys for use with Selenium. Each language has its own way to reference these keys; the full list can be found here.</description></item><item><title>Command Listeners</title><link>https://www.selenium.dev/documentation/webdriver/support_features/listeners/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/documentation/webdriver/support_features/listeners/</guid><description>These allow you to execute custom actions in every time specific Selenium commands are sent
Java Python CSharp Ruby JavaScript Kotlin Add Example
Add Example
Add Example
Add Example
Add Example
Add Example</description></item><item><title>Chrome DevTools Logging Features</title><link>https://www.selenium.dev/documentation/webdriver/bidi/cdp/logging/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/documentation/webdriver/bidi/cdp/logging/</guid><description>While Selenium 4 provides direct access to the Chrome DevTools Protocol, these methods will eventually be removed when WebDriver BiDi implemented.
Console Logs Java Python CSharp Ruby JavaScript Kotlin ((HasLogEvents) driver).onLogEvent(consoleEvent(e -&amp;gt; messages.add(e.getMessages().get(0)))); View full example on GitHub async with driver.bidi_connection() as session: async with Log(driver, session).add_listener(Console.ALL) as messages: View full example on GitHub using IJavaScriptEngine monitor = new JavaScriptEngine(driver); var messages = new List&amp;lt;string&amp;gt;(); monitor.JavaScriptConsoleApiCalled += (_, e) =&amp;gt; { messages.</description></item><item><title>Browser Options</title><link>https://www.selenium.dev/documentation/webdriver/drivers/options/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/documentation/webdriver/drivers/options/</guid><description>In Selenium 3, capabilities were defined in a session by using Desired Capabilities classes. As of Selenium 4, you must use the browser options classes. For remote driver sessions, a browser options instance is required as it determines which browser will be used.
These options are described in the w3c specification for Capabilities.
Each browser has custom options that may be defined in addition to the ones defined in the specification.</description></item><item><title>Selenium RC (Selenium 1)</title><link>https://www.selenium.dev/documentation/legacy/selenium_1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/documentation/legacy/selenium_1/</guid><description>Introduction Selenium RC was the main Selenium project for a long time, before the WebDriver/Selenium merge brought up Selenium 2, a more powerful tool. It is worth to highlight that Selenium 1 is not supported anymore.
How Selenium RC Works First, we will describe how the components of Selenium RC operate and the role each plays in running your test scripts.
RC Components Selenium RC components are:
The Selenium Server which launches and kills browsers, interprets and runs the Selenese commands passed from the test program, and acts as an HTTP proxy, intercepting and verifying HTTP messages passed between the browser and the AUT.</description></item><item><title>Types of Testing</title><link>https://www.selenium.dev/documentation/test_practices/testing_types/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/documentation/test_practices/testing_types/</guid><description>Acceptance testing This type of testing is done to determine if a feature or system meets the customer expectations and requirements. This type of testing generally involves the customer&amp;rsquo;s cooperation or feedback, being a validation activity that answers the question:
Are we building the right product?
For web applications, the automation of this testing can be done directly with Selenium by simulating user expected behaviour. This simulation could be done by record/playback or through the different supported languages as explained in this documentation.</description></item><item><title>Migrating from RC to WebDriver</title><link>https://www.selenium.dev/documentation/legacy/selenium_2/upgrading/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/documentation/legacy/selenium_2/upgrading/</guid><description>How to Migrate to Selenium WebDriver A common question when adopting Selenium 2 is what&amp;rsquo;s the correct thing to do when adding new tests to an existing set of tests? Users who are new to the framework can begin by using the new WebDriver APIs for writing their tests. But what of users who already have suites of existing tests? This guide is designed to demonstrate how to migrate your existing tests to the new APIs, allowing all new tests to be written using the new features offered by WebDriver.</description></item><item><title>Working With Colors</title><link>https://www.selenium.dev/documentation/webdriver/support_features/colors/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/documentation/webdriver/support_features/colors/</guid><description>You will occasionally want to validate the colour of something as part of your tests; the problem is that colour definitions on the web are not constant. Would it not be nice if there was an easy way to compare a HEX representation of a colour with a RGB representation of a colour, or a RGBA representation of a colour with a HSLA representation of a colour?
Worry not. There is a solution: the Color class!</description></item><item><title>Backing Selenium with WebDriver</title><link>https://www.selenium.dev/documentation/legacy/selenium_2/emulation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/documentation/legacy/selenium_2/emulation/</guid><description>(Previously located: https://github.com/SeleniumHQ/selenium/wiki/Selenium-Emulation)
Backing Selenium with WebDriver The Java and .NET versions of WebDriver provide implementations of the existing Selenium API. In Java, it is used like so:
// You may use any WebDriver implementation. Firefox is used here as an example WebDriver driver = new FirefoxDriver(); // A &amp;#34;base url&amp;#34;, used by selenium to resolve relative URLs String baseUrl = &amp;#34;http://www.google.com&amp;#34;; // Create the Selenium implementation Selenium selenium = new WebDriverBackedSelenium(driver, baseUrl); // Perform actions with selenium selenium.</description></item><item><title>Grid endpoints</title><link>https://www.selenium.dev/documentation/grid/advanced_features/endpoints/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/documentation/grid/advanced_features/endpoints/</guid><description>Grid Grid Status Grid status provides the current state of the Grid. It consists of details about every registered Node. For every Node, the status includes information regarding Node availability, sessions, and slots.
cURL GET &amp;#39;http://localhost:4444/status&amp;#39; Delete session Deleting the session terminates the WebDriver session, quits the driver and removes it from the active sessions map. Any request using the removed session-id or reusing the driver instance will throw an error.</description></item><item><title>HTTP Client Configuration</title><link>https://www.selenium.dev/documentation/webdriver/drivers/http_client/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/documentation/webdriver/drivers/http_client/</guid><description>These allow you to set various parameters for the HTTP library
Java Python CSharp Ruby JavaScript Kotlin Add Example
Add Example
Add Example
client = Selenium::WebDriver::Remote::Http::Default.new(open_timeout: 30, read_timeout: 30) expect(client.open_timeout).to eq 30 View full example on GitHub Add Example
Add Example</description></item><item><title>HTTP response codes</title><link>https://www.selenium.dev/documentation/test_practices/discouraged/http_response_codes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/documentation/test_practices/discouraged/http_response_codes/</guid><description>For some browser configurations in Selenium RC, Selenium acted as a proxy between the browser and the site being automated. This meant that all browser traffic passed through Selenium could be captured or manipulated. The captureNetworkTraffic() method purported to capture all of the network traffic between the browser and the site being automated, including HTTP response codes.
Selenium WebDriver is a completely different approach to browser automation, preferring to act more like a user.</description></item><item><title>Page object models</title><link>https://www.selenium.dev/documentation/test_practices/encouraged/page_object_models/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/documentation/test_practices/encouraged/page_object_models/</guid><description>Note: this page has merged contents from multiple sources, including the Selenium wiki
Overview Within your web app&amp;rsquo;s UI, there are areas where your tests interact with. A Page Object only models these as objects within the test code. This reduces the amount of duplicated code and means that if the UI changes, the fix needs only to be applied in one place.
Page Object is a Design Pattern that has become popular in test automation for enhancing test maintenance and reducing code duplication.</description></item><item><title>Selenium Manager (Beta)</title><link>https://www.selenium.dev/documentation/selenium_manager/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/documentation/selenium_manager/</guid><description>Motivation TL;DR: Selenium Manager is the official driver manager of the Selenium project, and it is shipped out of the box with every Selenium release.
Selenium uses the native support implemented by each browser to carry out the automation process. For this reason, Selenium users need to place a component called driver (chromedriver, geckodriver, msedgedriver, etc.) between the script using the Selenium API and the browser. For many years, managing these drivers was a manual process for Selenium users.</description></item><item><title>Driver Service Class</title><link>https://www.selenium.dev/documentation/webdriver/drivers/service/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/documentation/webdriver/drivers/service/</guid><description>The Service classes are for managing the starting and stopping of local drivers. They cannot be used with a Remote WebDriver session.
Service classes allow you to specify information about the driver, like location and which port to use. They also let you specify what arguments get passed to the command line. Most of the useful arguments are related to logging.
Default Service instance To start a driver with a default service instance:</description></item><item><title>TOML configuration options</title><link>https://www.selenium.dev/documentation/grid/configuration/toml_options/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/documentation/grid/configuration/toml_options/</guid><description>All the options shown in CLI options can be configured through a TOML file. This page shows configuration examples for the different Grid components.
Note that this documentation could be outdated if an option was modified or added but has not been documented yet. In case you bump into this situation, please check the &amp;ldquo;Config help&amp;rdquo; section and feel free to send us a pull request updating this page.
Overview Selenium Grid uses TOML format for config files.</description></item><item><title>Buck Build Tool</title><link>https://www.selenium.dev/documentation/legacy/developers/buck/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/documentation/legacy/developers/buck/</guid><description>This documentation previously located on the wiki You can read the documentation for the legacy Crazy Fun Build tool.
Building Selenium with Buck The easiest thing to do is to just run &amp;ldquo;./go&amp;rdquo;. The build process will download the right version of Buck for you so long as there&amp;rsquo;s no .nobuckcheck file in the root of the project. The download ends up in buck-out/crazy-fun/HASH/buck.pex where HASH is the value of the current buck version (given in the .</description></item><item><title>Chrome specific functionality</title><link>https://www.selenium.dev/documentation/webdriver/browsers/chrome/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/documentation/webdriver/browsers/chrome/</guid><description>By default, Selenium 4 is compatible with Chrome v75 and greater. Note that the version of the Chrome browser and the version of chromedriver must match the major version.
Options Capabilities common to all browsers are described on the Options page.
Capabilities unique to Chrome and Chromium are documented at Google&amp;rsquo;s page for Capabilities &amp;amp; ChromeOptions
Starting a Chrome session with basic defined options looks like this:
Java Python CSharp Ruby JavaScript Kotlin ChromeOptions options = new ChromeOptions(); driver = new ChromeDriver(options); View full example on GitHub options = webdriver.</description></item><item><title>Working with cookies</title><link>https://www.selenium.dev/documentation/webdriver/interactions/cookies/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/documentation/webdriver/interactions/cookies/</guid><description>A cookie is a small piece of data that is sent from a website and stored in your computer. Cookies are mostly used to recognise the user and load the stored information.
WebDriver API provides a way to interact with cookies with built-in methods:
Add Cookie It is used to add a cookie to the current browsing context. Add Cookie only accepts a set of defined serializable JSON object. Here is the link to the list of accepted JSON key values</description></item><item><title>Customizing a Node</title><link>https://www.selenium.dev/documentation/grid/advanced_features/customize_node/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/documentation/grid/advanced_features/customize_node/</guid><description>How to customize a Node There are times when we would like a Node to be customized to our needs.
For e.g., we may like to do some additional setup before a session begins execution and some clean-up after a session runs to completion.
Following steps can be followed for this:
Create a class that extends org.openqa.selenium.grid.node.Node
Add a static method (this will be our factory method) to the newly created class whose signature looks like this:</description></item><item><title>Domain specific language</title><link>https://www.selenium.dev/documentation/test_practices/encouraged/domain_specific_language/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/documentation/test_practices/encouraged/domain_specific_language/</guid><description>A domain specific language (DSL) is a system which provides the user with an expressive means of solving a problem. It allows a user to interact with the system on their terms – not just programmer-speak.
Your users, in general, do not care how your site looks. They do not care about the decoration, animations, or graphics. They want to use your system to push their new employees through the process with minimal difficulty; they want to book travel to Alaska; they want to configure and buy unicorns at a discount.</description></item><item><title>Unable to Locate Driver Error</title><link>https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/documentation/webdriver/troubleshooting/errors/driver_location/</guid><description>Historically, this is the most common error beginning Selenium users get when trying to run code for the first time:
Java Python CSharp Ruby The path to the driver executable must be set by the webdriver.chrome.driver system property; for more information, see https://chromedriver.chromium.org/. The latest version can be downloaded from https://chromedriver.chromium.org/downloads The executable chromedriver needs to be available in the path. The file geckodriver does not exist. The driver can be downloaded at https://github.</description></item><item><title>Adding new drivers to Selenium 2 code</title><link>https://www.selenium.dev/documentation/legacy/developers/drivers/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/documentation/legacy/developers/drivers/</guid><description>This documentation previously located on the wiki \
Introduction WebDriver has a comprehensive suite of tests that describe the expected behavior of a new implementation. We&amp;rsquo;ll assume that you&amp;rsquo;re implementing the driver in Java for the sake of simplicity, but you can take a look at any of the existing implementations for how we handle more complex builds or other languages once you&amp;rsquo;ve read this.
Writing a New WebDriver Implementation Create New Top-Level Directories Create a new top-level folder, parallel to &amp;ldquo;common&amp;rdquo; and &amp;ldquo;firefox&amp;rdquo;, named after your browser.</description></item><item><title>Legacy Firefox Driver</title><link>https://www.selenium.dev/documentation/legacy/selenium_2/firefox_driver/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/documentation/legacy/selenium_2/firefox_driver/</guid><description>This documentation previously located on the wiki You can read more about geckodriver.
About Firefox driver is included in the selenium-server-stanalone.jar available in the downloads. The driver comes in the form of an xpi (firefox extension) which is added to the firefox profile when you start a new instance of FirefoxDriver.
Pros Runs in a real browser and supports Javascript Faster than the InternetExplorerDriver Cons Slower than the HtmlUnitDriver Important System Properties The following system properties (read using System.</description></item><item><title>Gmail, email and Facebook logins</title><link>https://www.selenium.dev/documentation/test_practices/discouraged/gmail_email_and_facebook_logins/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/documentation/test_practices/discouraged/gmail_email_and_facebook_logins/</guid><description>For multiple reasons, logging into sites like Gmail and Facebook using WebDriver is not recommended. Aside from being against the usage terms for these sites (where you risk having the account shut down), it is slow and unreliable.
The ideal practice is to use the APIs that email providers offer, or in the case of Facebook the developer tools service which exposes an API for creating test accounts, friends and so forth.</description></item><item><title>Setting up your own Grid 3</title><link>https://www.selenium.dev/documentation/legacy/selenium_3/grid_setup/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/documentation/legacy/selenium_3/grid_setup/</guid><description>To use Selenium Grid, you need to maintain your own infrastructure for the nodes. As this can be a cumbersome and time intense effort, many organizations use IaaS providers such as Amazon EC2 and Google Compute to provide this infrastructure.
Other options include using providers such as Sauce Labs or Testing Bot who provide a Selenium Grid as a service in the cloud. It is certainly possible to also run nodes on your own hardware.</description></item><item><title>Information about web elements</title><link>https://www.selenium.dev/documentation/webdriver/elements/information/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/documentation/webdriver/elements/information/</guid><description>There are a number of details you can query about a specific element.
Is Displayed This method is used to check if the connected Element is displayed on a webpage. Returns a Boolean value, True if the connected element is displayed in the current browsing context else returns false.
This functionality is mentioned in, but not defined by the w3c specification due to the impossibility of covering all potential conditions. As such, Selenium cannot expect drivers to implement this functionality directly, and now relies on executing a large JavaScript function directly.</description></item><item><title>Logging Selenium commands</title><link>https://www.selenium.dev/documentation/webdriver/troubleshooting/logging/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/documentation/webdriver/troubleshooting/logging/</guid><description>Turning on logging is a valuable way to get extra information that might help you determine why you might be having a problem.
Getting a logger Java Python CSharp Ruby JavaScript Kotlin Java logs are typically created per class. You can work with the default logger to work with all loggers. To filter out specific classes, see Filtering
Get the root logger:
Logger logger = Logger.getLogger(&amp;#34;&amp;#34;); View full example on GitHub Java Logging is not exactly straightforward, and if you are just looking for an easy way to look at the important Selenium logs, take a look at the Selenium Logger project</description></item><item><title>Mouse actions</title><link>https://www.selenium.dev/documentation/webdriver/actions_api/mouse/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/documentation/webdriver/actions_api/mouse/</guid><description>There are only 3 actions that can be accomplished with a mouse: pressing down on a button, releasing a pressed button, and moving the mouse. Selenium provides convenience methods that combine these actions in the most common ways.
Click and hold This method combines moving the mouse to the center of an element with pressing the left mouse button. This is useful for focusing a specific element:
Java Python CSharp Ruby JavaScript Kotlin WebElement clickable = driver.</description></item><item><title>Chrome DevTools Network Features</title><link>https://www.selenium.dev/documentation/webdriver/bidi/cdp/network/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/documentation/webdriver/bidi/cdp/network/</guid><description>While Selenium 4 provides direct access to the Chrome DevTools Protocol, these methods will eventually be removed when WebDriver BiDi implemented.
Basic authentication Some applications make use of browser authentication to secure pages. It used to be common to handle them in the URL, but browsers stopped supporting this. With this code you can insert the credentials into the header when necessary
Java Python CSharp Ruby JavaScript Kotlin Predicate&amp;lt;URI&amp;gt; uriPredicate = uri -&amp;gt; uri.</description></item><item><title>Legacy Selenium IDE Release Notes</title><link>https://www.selenium.dev/documentation/legacy/selenium_ide/releases/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/documentation/legacy/selenium_ide/releases/</guid><description>This documentation previously located on the wiki
2.9.1 - to be released Fix - Fixes https://github.com/SeleniumHQ/selenium/issues/396 Fix - Changed Google code links to GitHub. Enh - Merged official language plugins into the main xpi eliminating the need for multi-xpi with the main xpi and multiple language plugin xpis. Fix - Fixes https://github.com/SeleniumHQ/selenium/issues/570 2.9.0 Enh - Schedule tests for automatic playback at a certain time or periodic intervals. (http://blog.reallysimplethoughts.com/2015/03/09/selenium-ide-scheduler-has-arrived-part-1/) Enh - Allow submission of diagnostic information via a gist.</description></item><item><title>When to Use Grid</title><link>https://www.selenium.dev/documentation/grid/applicability/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/documentation/grid/applicability/</guid><description>When would you use a Selenium Grid?
To run your tests in parallel, against different browser types, browser versions, operating systems To reduce the time needed to execute a test suite Selenium Grid runs test suites in parallel against multiple machines (called Nodes). For large and long-running test suites, this can save minutes, hours, or perhaps days. This shortens the turnaround time for test results as your application under test (AUT) changes.</description></item><item><title>Edge specific functionality</title><link>https://www.selenium.dev/documentation/webdriver/browsers/edge/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/documentation/webdriver/browsers/edge/</guid><description>Microsoft Edge is implemented with Chromium, with the earliest supported version of v79. Similar to Chrome, the major version number of edgedriver must match the major version of the Edge browser.
Options Capabilities common to all browsers are described on the Options page.
Capabilities unique to Chromium are documented at Google&amp;rsquo;s page for Capabilities &amp;amp; ChromeOptions
Starting an Edge session with basic defined options looks like this:
Java Python CSharp Ruby JavaScript Kotlin EdgeOptions options = new EdgeOptions(); driver = new EdgeDriver(options); View full example on GitHub options = webdriver.</description></item><item><title>External datastore</title><link>https://www.selenium.dev/documentation/grid/advanced_features/external_datastore/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/documentation/grid/advanced_features/external_datastore/</guid><description>Table of Contents Introduction Setup Database backed Session Map Steps Redis backed Session Map Steps Introduction Selenium Grid allows you to persist information related to currently running sessions into an external data store. The external data store could be backed by your favourite database (or) Redis Cache system.
Setup Coursier - As a dependency resolver, so that we can download maven artifacts on the fly and make them available in our classpath Docker - To manage our PostGreSQL/Redis docker containers.</description></item><item><title>Generating application state</title><link>https://www.selenium.dev/documentation/test_practices/encouraged/generating_application_state/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/documentation/test_practices/encouraged/generating_application_state/</guid><description>Selenium should not be used to prepare a test case. All repetitive actions and preparations for a test case, should be done through other methods. For example, most web UIs have authentication (e.g. a login form). Eliminating logging in via web browser before every test will improve both the speed and stability of the test. A method should be created to gain access to the AUT* (e.g. using an API to login and set a cookie).</description></item><item><title>Pen actions</title><link>https://www.selenium.dev/documentation/webdriver/actions_api/pen/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/documentation/webdriver/actions_api/pen/</guid><description>Chromium Only
A Pen is a type of pointer input that has most of the same behavior as a mouse, but can also have event properties unique to a stylus. Additionally, while a mouse has 5 buttons, a pen has 3 equivalent button states:
0 — Touch Contact (the default; equivalent to a left click) 2 — Barrel Button (equivalent to a right click) 5 — Eraser Button (currently unsupported by drivers) Using a Pen Java Python CSharp Ruby JavaScript Kotlin Selenium v4.</description></item><item><title>Working with select list elements</title><link>https://www.selenium.dev/documentation/webdriver/support_features/select_lists/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/documentation/webdriver/support_features/select_lists/</guid><description>The Select object will now give you a series of commands that allow you to interact with a &amp;lt;select&amp;gt; element.
If you are using Java or .NET make sure that you&amp;rsquo;ve properly required the support package in your code. See the full code from GitHub in any of the examples below.
Note that this class only works for HTML elements select and option. It is possible to design drop-downs with JavaScript overlays using div or li, and this class will not work for those.</description></item><item><title>Test dependency</title><link>https://www.selenium.dev/documentation/test_practices/discouraged/test_dependency/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/documentation/test_practices/discouraged/test_dependency/</guid><description>A common idea and misconception about automated testing is regarding a specific test order. Your tests should be able to run in any order, and not rely on other tests to complete in order to be successful.</description></item><item><title>Selenium's Continuous Integration Implementation</title><link>https://www.selenium.dev/documentation/legacy/developers/ci_tool/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/documentation/legacy/developers/ci_tool/</guid><description>This documentation previously located on the wiki
General architecture We have a number of Google Compute Engine virtual machines running Ubuntu, currently hosted at {0..29}.ci.seleniumhq.org - they have publicly addressable DNS set up to point ab.{0..29}.ci.seleniumhq.org pointing at them as well, so that cookie tests can do subdomain lookups.
One of these machines, ci.seleniumhq.org, is running jenkins. If you want a login on jenkins, get in touch with juangj. The Build All Java job polls SCM for changes, and does the following:</description></item><item><title>Selenium Grid Components</title><link>https://www.selenium.dev/documentation/grid/components/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/documentation/grid/components/</guid><description>Selenium Grid 4 is a ground-up rewrite from previous versions. In addition to a comprehensive set of improvements to performance and standards compliance, the different functions of the grid were broken out to reflect a more modern age of computing and software development. Purpose-build for containerization and cloud-distributed scalability, Selenium Grid 4 is a wholly new solution for the modern era.
Router The Router is the entry point of the Grid, receiving all external requests, and forwards them to the correct component.</description></item><item><title>Firefox specific functionality</title><link>https://www.selenium.dev/documentation/webdriver/browsers/firefox/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/documentation/webdriver/browsers/firefox/</guid><description>Selenium 4 requires Firefox 78 or greater. It is recommended to always use the latest version of geckodriver.
Options Capabilities common to all browsers are described on the Options page.
Capabilities unique to Firefox can be found at Mozilla&amp;rsquo;s page for firefoxOptions
Starting a Firefox session with basic defined options looks like this:
Java Python CSharp Ruby JavaScript Kotlin FirefoxOptions options = new FirefoxOptions(); driver = new FirefoxDriver(options); View full example on GitHub options = webdriver.</description></item><item><title>Working with IFrames and frames</title><link>https://www.selenium.dev/documentation/webdriver/interactions/frames/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/documentation/webdriver/interactions/frames/</guid><description>Frames are a now deprecated means of building a site layout from multiple documents on the same domain. You are unlikely to work with them unless you are working with an pre HTML5 webapp. Iframes allow the insertion of a document from an entirely different domain, and are still commonly used.
If you need to work with frames or iframes, WebDriver allows you to work with them in the same way.</description></item><item><title>Components of Grid 3</title><link>https://www.selenium.dev/documentation/legacy/selenium_3/grid_components/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/documentation/legacy/selenium_3/grid_components/</guid><description>Hub Intermediary and manager Accepts requests to run tests Takes instructions from client and executes them remotely on the nodes Manages threads A Hub is a central point where all your tests are sent. Each Selenium Grid consists of exactly one hub. The hub needs to be reachable from the respective clients (i.e. CI server, Developer machine etc.) The hub will connect one or more nodes that tests will be delegated to.</description></item><item><title>Mock external services</title><link>https://www.selenium.dev/documentation/test_practices/encouraged/mock_external_services/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/documentation/test_practices/encouraged/mock_external_services/</guid><description>Eliminating the dependencies on external services will greatly improve the speed and stability of your tests.</description></item><item><title>Performance testing</title><link>https://www.selenium.dev/documentation/test_practices/discouraged/performance_testing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/documentation/test_practices/discouraged/performance_testing/</guid><description>Performance testing using Selenium and WebDriver is generally not advised. Not because it is incapable, but because it is not optimised for the job and you are unlikely to get good results.
It may seem ideal to performance test in the context of the user but a suite of WebDriver tests are subjected to many points of external and internal fragility which are beyond your control; for example browser startup speed, speed of HTTP servers, response of third party servers that host JavaScript or CSS, and the instrumentation penalty of the WebDriver implementation itself.</description></item><item><title>Chrome DevTools Script Features</title><link>https://www.selenium.dev/documentation/webdriver/bidi/cdp/script/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/documentation/webdriver/bidi/cdp/script/</guid><description>While Selenium 4 provides direct access to the Chrome DevTools Protocol, these methods will eventually be removed when WebDriver BiDi implemented.
Script Pinning Java Python CSharp Ruby JavaScript Kotlin ScriptKey key = ((JavascriptExecutor) driver).pin(&amp;#34;return arguments;&amp;#34;); List&amp;lt;Object&amp;gt; arguments = (List&amp;lt;Object&amp;gt;) ((JavascriptExecutor) driver).executeScript(key, 1, true, element); View full example on GitHub Implementation Missing
var key = await new JavaScriptEngine(driver).PinScript(&amp;#34;return arguments;&amp;#34;); var arguments = ((WebDriver)driver).ExecuteScript(key, 1, true, element); View full example on GitHub key = driver.</description></item><item><title>Style guide for Selenium documentation</title><link>https://www.selenium.dev/documentation/about/style/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/documentation/about/style/</guid><description>Read our contributing documentation for complete instructions on how to add content to this documentation.
Alerts Alerts have been added to direct potential contributors to where specific content is missing.
{{&amp;lt; alert-content /&amp;gt;}} or
{{&amp;lt; alert-content &amp;gt;}} Additional information about what specific content is needed {{&amp;lt; /alert-content &amp;gt;}} Which gets displayed like this: Content Help Note: This section needs additional and/or updated content Additional information about what specific content is needed Check our contribution guidelines if you&amp;rsquo;d like to help.</description></item><item><title>ThreadGuard</title><link>https://www.selenium.dev/documentation/webdriver/support_features/thread_guard/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/documentation/webdriver/support_features/thread_guard/</guid><description>This class is only available in the Java Binding ThreadGuard checks that a driver is called only from the same thread that created it. Threading issues especially when running tests in Parallel may have mysterious and hard to diagnose errors. Using this wrapper prevents this category of errors and will raise an exception when it happens.
The following example simulate a clash of threads:
public class DriverClash { //thread main (id 1) created this driver private WebDriver protectedDriver = ThreadGuard.</description></item><item><title>Waiting Strategies</title><link>https://www.selenium.dev/documentation/webdriver/waits/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/documentation/webdriver/waits/</guid><description>Perhaps the most common challenge for browser automation is ensuring that the web application is in a state to execute a particular Selenium command as desired. The processes often end up in a race condition where sometimes the browser gets into the right state first (things work as intended) and sometimes the Selenium code executes first (things do not work as intended). This is one of the primary causes of flaky tests.</description></item><item><title>Scroll wheel actions</title><link>https://www.selenium.dev/documentation/webdriver/actions_api/wheel/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/documentation/webdriver/actions_api/wheel/</guid><description>Selenium v4.2
Chromium Only
There are 5 scenarios for scrolling on a page.
Scroll to element This is the most common scenario. Unlike traditional click and send keys methods, the actions class does not automatically scroll the target element into view, so this method will need to be used if elements are not already inside the viewport.
This method takes a web element as the sole argument.
Regardless of whether the element is above or below the current viewscreen, the viewport will be scrolled so the bottom of the element is at the bottom of the screen.</description></item><item><title>Improved reporting</title><link>https://www.selenium.dev/documentation/test_practices/encouraged/improved_reporting/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/documentation/test_practices/encouraged/improved_reporting/</guid><description>Selenium is not designed to report on the status of test cases run. Taking advantage of the built-in reporting capabilities of unit test frameworks is a good start. Most unit test frameworks have reports that can generate xUnit or HTML formatted reports. xUnit reports are popular for importing results to a Continuous Integration (CI) server like Jenkins, Travis, Bamboo, etc. Here are some links for more information regarding report outputs for several languages.</description></item><item><title>Link spidering</title><link>https://www.selenium.dev/documentation/test_practices/discouraged/link_spidering/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/documentation/test_practices/discouraged/link_spidering/</guid><description>Using WebDriver to spider through links is not a recommended practice. Not because it cannot be done, but because WebDriver is definitely not the most ideal tool for this. WebDriver needs time to start up, and can take several seconds, up to a minute depending on how your test is written, just to get to the page and traverse through the DOM.
Instead of using WebDriver for this, you could save a ton of time by executing a curl command, or using a library such as BeautifulSoup since these methods do not rely on creating a browser and navigating to a page.</description></item><item><title>Print Page</title><link>https://www.selenium.dev/documentation/webdriver/interactions/print_page/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/documentation/webdriver/interactions/print_page/</guid><description>Printing a webpage is a common task, whether for sharing information or maintaining archives. Selenium simplifies this process through its PrintOptions, PrintsPage, and browsingContext classes, which provide a flexible and intuitive interface for automating the printing of web pages. These classes enable you to configure printing preferences, such as page layout, margins, and scaling, ensuring that the output meets your specific requirements.
Configuring Orientation Using the getOrientation() and setOrientation() methods, you can get/set the page orientation &amp;mdash; either PORTRAIT or LANDSCAPE.</description></item><item><title>Avoid sharing state</title><link>https://www.selenium.dev/documentation/test_practices/encouraged/avoid_sharing_state/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/documentation/test_practices/encouraged/avoid_sharing_state/</guid><description>Although mentioned in several places, it is worth mentioning again. We must ensure that the tests are isolated from one another.
Do not share test data. Imagine several tests that each query the database for valid orders before picking one to perform an action on. Should two tests pick up the same order you are likely to get unexpected behavior.
Clean up stale data in the application that might be picked up by another test e.</description></item><item><title>Write your first Selenium script</title><link>https://www.selenium.dev/documentation/webdriver/getting_started/first_script/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/documentation/webdriver/getting_started/first_script/</guid><description>Once you have Selenium installed, you&amp;rsquo;re ready to write Selenium code.
Eight Basic Components Everything Selenium does is send the browser commands to do something or send requests for information. Most of what you&amp;rsquo;ll do with Selenium is a combination of these basic commands
Click on the link to &amp;ldquo;View full example on GitHub&amp;rdquo; to see the code in context.
1. Start the session For more details on starting a session read our documentation on driver sessions</description></item><item><title>Selenium grid 2</title><link>https://www.selenium.dev/documentation/legacy/selenium_2/grid_2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/documentation/legacy/selenium_2/grid_2/</guid><description>This documentation previously located on the wiki You can read our documentation for more information about Grid 4
Introduction Grid allows you to :
scale by distributing tests on several machines ( parallel execution ) manage multiple environments from a central point, making it easy to run the tests against a vast combination of browsers / OS. minimize the maintenance time for the grid by allowing you to implement custom hooks to leverage virtual infrastructure for instance.</description></item><item><title>IE specific functionality</title><link>https://www.selenium.dev/documentation/webdriver/browsers/internet_explorer/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/documentation/webdriver/browsers/internet_explorer/</guid><description>As of June 2022, Selenium officially no longer supports standalone Internet Explorer. The Internet Explorer driver still supports running Microsoft Edge in &amp;ldquo;IE Compatibility Mode.&amp;rdquo;
Special considerations The IE Driver is the only driver maintained by the Selenium Project directly. While binaries for both the 32-bit and 64-bit versions of Internet Explorer are available, there are some known limitations with the 64-bit driver. As such it is recommended to use the 32-bit driver.</description></item><item><title>Tips on working with locators</title><link>https://www.selenium.dev/documentation/test_practices/encouraged/locators/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/documentation/test_practices/encouraged/locators/</guid><description>Take a look at examples of the supported locator strategies.
In general, if HTML IDs are available, unique, and consistently predictable, they are the preferred method for locating an element on a page. They tend to work very quickly, and forego much processing that comes with complicated DOM traversals.
If unique IDs are unavailable, a well-written CSS selector is the preferred method of locating an element. XPath works as well as CSS selectors, but the syntax is complicated and frequently difficult to debug.</description></item><item><title>Google Summer of Code 2011</title><link>https://www.selenium.dev/documentation/legacy/developers/summer_of_code/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/documentation/legacy/developers/summer_of_code/</guid><description>This documentation previously located on the wiki
What is Google Summer of Code? Since 2005, Google has administered Google Summer of Code Program to encourage student participation in open source development. The program has several goals:
Inspire young developers to begin participating in open source development Provide students in Computer Science and related fields the opportunity to do work related to their academic pursuits during the summer Give students more exposure to real-world software development scenarios (e.</description></item><item><title>Two Factor Authentication</title><link>https://www.selenium.dev/documentation/test_practices/discouraged/two_factor_authentication/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/documentation/test_practices/discouraged/two_factor_authentication/</guid><description>Two Factor Authentication (2FA) is an authorization mechanism where a One Time Password (OTP) is generated using &amp;ldquo;Authenticator&amp;rdquo; mobile apps such as &amp;ldquo;Google Authenticator&amp;rdquo;, &amp;ldquo;Microsoft Authenticator&amp;rdquo; etc., or by SMS, e-mail to authenticate. Automating this seamlessly and consistently is a big challenge in Selenium. There are some ways to automate this process. But that will be another layer on top of our Selenium tests and not as secure. So, you should avoid automating 2FA.</description></item><item><title>Working with windows and tabs</title><link>https://www.selenium.dev/documentation/webdriver/interactions/windows/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/documentation/webdriver/interactions/windows/</guid><description>Windows and tabs Get window handle WebDriver does not make the distinction between windows and tabs. If your site opens a new tab or window, Selenium will let you work with it using a window handle. Each window has a unique identifier which remains persistent in a single session. You can get the window handle of the current window by using:
Move Code
Java Python CSharp Ruby JavaScript Kotlin // Navigate to Url driver.</description></item><item><title>Test independency</title><link>https://www.selenium.dev/documentation/test_practices/encouraged/test_independency/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/documentation/test_practices/encouraged/test_independency/</guid><description>Write each test as its own unit. Write the tests in a way that will not be reliant on other tests to complete:
Let us say there is a content management system with which you can create some custom content which then appears on your website as a module after publishing, and it may take some time to sync between the CMS and the application.
A wrong way of testing your module is that the content is created and published in one test, and then checking the module in another test.</description></item><item><title>Grid architecture</title><link>https://www.selenium.dev/documentation/grid/architecture/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/documentation/grid/architecture/</guid><description>The Grid is designed as a set of components that all fulfill a role in maintaining the Grid. It can seem quite complicated, but hopefully this document can help clear up any confusion.
The Key Components The main components of the Grid are:
Event Bus Used for sending messages which may be received asynchronously between the other components. New Session Queue Maintains a list of incoming sessions which have yet to be assigned to a Node by the Distributor.</description></item><item><title>Consider using a fluent API</title><link>https://www.selenium.dev/documentation/test_practices/encouraged/consider_using_a_fluent_api/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/documentation/test_practices/encouraged/consider_using_a_fluent_api/</guid><description>Martin Fowler coined the term &amp;ldquo;Fluent API&amp;rdquo;. Selenium already implements something like this in their FluentWait class, which is meant as an alternative to the standard Wait class. You could enable the Fluent API design pattern in your page object and then query the Google search page with a code snippet like this one:
driver.get( &amp;#34;http://www.google.com/webhp?hl=en&amp;amp;amp;tab=ww&amp;#34; ); GoogleSearchPage gsp = new GoogleSearchPage(driver); gsp.setSearchString().clickSearchButton(); The Google page object class with this fluent behavior might look like this:</description></item><item><title>History of Grid Platforms</title><link>https://www.selenium.dev/documentation/legacy/selenium_2/grid_platforms/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/documentation/legacy/selenium_2/grid_platforms/</guid><description>This documentation previously located on the wiki You can read more about Grid 2
Selenium Grid Platforms This section describes the PLATFORM option used in configuring Selenium Grid Nodes and [DesiredCapabilities] object.
History of Platforms When requesting a new WebDriver session from the Grid, user can specify the [DesiredCapabilities] of the remote browser. Things such as the browser name, version, and platform are among the list of options that can be specified by the test.</description></item><item><title>Selenium IDE</title><link>https://www.selenium.dev/documentation/ide/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/documentation/ide/</guid><description>Selenium&amp;rsquo;s Integrated Development Environment (Selenium IDE) is an easy-to-use browser extension that records a user&amp;rsquo;s actions in the browser using existing Selenium commands, with parameters defined by the context of each element. It provides an excellent way to learn Selenium syntax. It&amp;rsquo;s available for Google Chrome, Mozilla Firefox, and Microsoft Edge.
For more information, visit the complete Selenium IDE Documentation</description></item><item><title>JSON Wire Protocol Specification</title><link>https://www.selenium.dev/documentation/legacy/json_wire_protocol/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/documentation/legacy/json_wire_protocol/</guid><description>This documentation previously located on the wiki
All implementations of WebDriver that communicate with the browser, or a RemoteWebDriver server shall use a common wire protocol. This wire protocol defines a RESTful web service using JSON over HTTP.
The protocol will assume that the WebDriver API has been &amp;ldquo;flattened&amp;rdquo;, but there is an expectation that client implementations will take a more Object-Oriented approach, as demonstrated in the existing Java API. The wire protocol is implemented in request/response pairs of &amp;ldquo;commands&amp;rdquo; and &amp;ldquo;responses&amp;rdquo;.</description></item><item><title>Remote WebDriver standalone server</title><link>https://www.selenium.dev/documentation/legacy/selenium_2/remote_server/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/documentation/legacy/selenium_2/remote_server/</guid><description>This documentation previously located on the wiki
The server will always run on the machine with the browser you want to test. The server can be used either from the command line or through code configuration.
Starting the server from the command line Once you have downloaded selenium-server-standalone-{VERSION}.jar, place it on the computer with the browser you want to test. Then, from the directory with the jar, run the following:</description></item><item><title>Remote WebDriver</title><link>https://www.selenium.dev/documentation/webdriver/drivers/remote_webdriver/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/documentation/webdriver/drivers/remote_webdriver/</guid><description>Selenium lets you automate browsers on remote computers if there is a Selenium Grid running on them. The computer that executes the code is referred to as the client computer, and the computer with the browser and driver is referred to as the remote computer or sometimes as an end-node. To direct Selenium tests to the remote computer, you need to use a Remote WebDriver class and pass the URL including the port of the grid on that machine.</description></item><item><title>Safari specific functionality</title><link>https://www.selenium.dev/documentation/webdriver/browsers/safari/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/documentation/webdriver/browsers/safari/</guid><description>Unlike Chromium and Firefox drivers, the safaridriver is installed with the Operating System. To enable automation on Safari, run the following command from the terminal:
safaridriver --enable Options Capabilities common to all browsers are described on the Options page.
Capabilities unique to Safari can be found at Apple&amp;rsquo;s page About WebDriver for Safari
Starting a Safari session with basic defined options looks like this:
Move Code
Java Python CSharp Ruby JavaScript Kotlin SafariOptions options = new SafariOptions(); driver = new SafariDriver(options); View full example on GitHub options = webdriver.</description></item><item><title>Developer Tips</title><link>https://www.selenium.dev/documentation/legacy/developers/tips/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/documentation/legacy/developers/tips/</guid><description>This documentation previously located on the wiki
Running an Individual Test When developing WebDriver, it is common to want to run a single test rather than the entire test suite for a particular driver.
You can run all the tests in a given test class this way:
./go test_firefox onlyRun=CombinedInputActionsTest You can also run a single test directly from the command line by typing:
./go test_firefox method=foo Not Halting On Errors Or Failures The test suite will halt on errors and failures by default.</description></item><item><title>Upgrade to Selenium 4</title><link>https://www.selenium.dev/documentation/webdriver/troubleshooting/upgrade_to_selenium_4/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/documentation/webdriver/troubleshooting/upgrade_to_selenium_4/</guid><description>Upgrading to Selenium 4 should be a painless process if you are using one of the officially supported languages (Ruby, JavaScript, C#, Python, and Java). There might be some cases where a few issues can happen, and this guide will help you to sort them out. We will go through the steps to upgrade your project dependencies and understand the major deprecations and changes the version upgrade brings.
These are the steps we will follow to upgrade to Selenium 4:</description></item><item><title>Organizing and Executing Selenium Code</title><link>https://www.selenium.dev/documentation/webdriver/getting_started/using_selenium/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/documentation/webdriver/getting_started/using_selenium/</guid><description>Content Help Note: This section needs additional and/or updated content This page is very incomplete and has placeholders for things that need to be added or expounded on. Check our contribution guidelines if you&amp;rsquo;d like to help. If you want to run more than a handful of one-off scripts, you need to be able to organize and work with your code. This page should give you ideas for how to actually do productive things with your Selenium code.</description></item><item><title>Fresh browser per test</title><link>https://www.selenium.dev/documentation/test_practices/encouraged/fresh_browser_per_test/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/documentation/test_practices/encouraged/fresh_browser_per_test/</guid><description>Start each test from a clean, known state. Ideally, spin up a new virtual machine for each test. If spinning up a new virtual machine is not practical, at least start a new WebDriver for each test. Most browser drivers like GeckoDriver and ChromeDriver will start with a clean known state with a new user profile, by default.
WebDriver driver = new FirefoxDriver();</description></item><item><title>Limitations of scaling up tests in Selenium 2</title><link>https://www.selenium.dev/documentation/legacy/selenium_2/parallel_execution/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/documentation/legacy/selenium_2/parallel_execution/</guid><description>This documentation previously located on the wiki
Running parallel Selenium2 This page tries to summarize additional constraints that arise when running Selenium2 in parallel.
WebDriver instantiation While an individual WebDriver instance cannot be shared among threads, it is easy to create multiple WebDriver instances.
Ephemeral sockets There is a general problem of TCP/IP v4, where the TCP/IP stack uses ephemeral ports when making a connection between two sockets. The typical symptom of this is that connection failures start appearing after a short time of running, often a minute or two.</description></item><item><title>Legacy Selenium Desired Capabilities</title><link>https://www.selenium.dev/documentation/legacy/desired_capabilities/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/documentation/legacy/desired_capabilities/</guid><description>This documentation previously located on the wiki See JSON Wire Protocol for common capabilities.
Remote Driver Specific Key Type Description webdriver.remote.sessionid string WebDriver session ID for the session. Readonly and only returned if the server implements a server-side webdriver-backed selenium. webdriver.remote.quietExceptions boolean Disable automatic screnshot capture on exceptions. This is False by default. Grid Specific Key Type Description path string Path to route request to, or maybe listen on. seleniumProtocol string Which protocol to use.</description></item><item><title>Stealing focus from Firefox in Linux</title><link>https://www.selenium.dev/documentation/legacy/selenium_2/focus_stealing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/documentation/legacy/selenium_2/focus_stealing/</guid><description>This documentation previously located on the wiki
This page describes an essential component of the native events implementation on Linux - focus maintaining. In order for native events to be processed in Firefox, it must always retain focus. In case the user decides to switch to another window (a thing which could be understood), Firefox must not know it lost focus.
Solution overview Basic idea The basic idea is to get between the XLib (X-Windows client library) layer and the application.</description></item><item><title>Untrusted SSL Certificates</title><link>https://www.selenium.dev/documentation/legacy/selenium_2/ssl_certs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/documentation/legacy/selenium_2/ssl_certs/</guid><description>This documentation previously located on the wiki
Introduction This page details how WebDriver is able to accept untrusted SSL certificates, allowing users to test trusted sites in a testing environment, where valid certificates usually do not exist. This feature is turned on by default for all supported browsers (Currently Firefox).
Firefox Outline of solution Firefox has an interface for overriding invalid certificates, called nsICertOverrideService. Implement this interface as a proxy to the original service - unless untrusted certificates are allowed.</description></item><item><title>WebDriver For Mobile Browsers</title><link>https://www.selenium.dev/documentation/legacy/selenium_2/mobile/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/documentation/legacy/selenium_2/mobile/</guid><description>This documentation previously located on the wiki
Introduction We provide mobile drivers for two major mobile platforms: Android and iOS (iPhone &amp;amp; iPad).
They can be run on real devices and in an Android emulator or in the iOS Simulator, as appropriate. They are packaged as an app. The app needs to be installed on the emulator or device. The app embeds a RemoteWebDriver server and a light-weight HTTP server which receive, and respond to, requests from WebDriver Clients i.</description></item><item><title>Frequently Asked Questions for Selenium 2</title><link>https://www.selenium.dev/documentation/legacy/selenium_2/faq/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/documentation/legacy/selenium_2/faq/</guid><description>This documentation previously located on the wiki \
Q: What is WebDriver? A: WebDriver is a tool for writing automated tests of websites. It aims to mimic the behaviour of a real user, and as such interacts with the HTML of the application.
Q: So, is it like Selenium? Or Sahi? A: The aim is the same (to allow you to test your webapp), but the implementation is different. Rather than running as a Javascript application within the browser (with the limitations this brings, such as the &amp;ldquo;same origin&amp;rdquo; problem), WebDriver controls the browser itself.</description></item><item><title>Musings about how things came to be</title><link>https://www.selenium.dev/documentation/about/history/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/documentation/about/history/</guid><description>This documentation previously located on the wiki
Introduction This is a work in progress. Feel free to add things you know or remember.
How did the Automation Atoms come about? On 2012-04-04, jimevans asked on the #selenium IRC channel:
&amp;ldquo;What I wanted to ask you about was the history of the automation atoms. I seem to remember them springing fully formed, as if from the head of Zeus, and I&amp;rsquo;m sure that wasn&amp;rsquo;t the case.</description></item><item><title>Snapshot of Roadmaps for Selenium Releases</title><link>https://www.selenium.dev/documentation/legacy/developers/roadmap/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/documentation/legacy/developers/roadmap/</guid><description>Preparation for Selenium 2 Date unknown This documentation previously located on the wiki
The following issues need to be resolved before the final release:
Issue Summary HtmlUnitDriver Progress FirefoxDriver Progress InternetExplorerDriver Progress ChromeDriver Progress 27 Handle alerts in Javascript-enabled browsers n/a Started Started Not Started 32 User guide Started 34 Support HTTP Basic and Digest Authentication Not Started 35 Selenium emulation Done for Java and C# 36 Support for drag and drop behaviour n/a Done Done Started none Example tests Not Started A final release will be made once these are implemented in Firefox, IE and at least one webkit-based browser.</description></item><item><title>Selenium 2.0 Team</title><link>https://www.selenium.dev/documentation/legacy/selenium_2/team/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/documentation/legacy/selenium_2/team/</guid><description>(Previously located: https://github.com/SeleniumHQ/selenium/wiki/The-Team)
If you&amp;rsquo;ve ever wondered who to thank (or blame!) for Selenium, then you&amp;rsquo;ve come to the right place. This page introduces you to the contributors and shows you what they&amp;rsquo;re working on.
SimonStewart: Original WebDriver developer and leading the Selenium 2 effort. He works mainly with Java and can be seen all over the code base, patching holes and adding features. By day he works as a Software Engineer in Test at Google.</description></item><item><title>Virtual Authenticator</title><link>https://www.selenium.dev/documentation/webdriver/interactions/virtual_authenticator/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/documentation/webdriver/interactions/virtual_authenticator/</guid><description>Web applications can enable a public key-based authentication mechanism known as Web Authentication to authenticate users in a passwordless manner. Web Authentication defines APIs that allows a user to create a public-key credential and register it with an authenticator. An authenticator can be a hardware device or a software entity that stores user&amp;rsquo;s public-key credentials and retrieves them on request.
As the name suggests, Virtual Authenticator emulates such authenticators for testing.</description></item><item><title>Celebrating 20 Years of Selenium: A Journey of Innovation in Browser Automation</title><link>https://www.selenium.dev/blog/2024/selenium-milestone-20yrs-blog/</link><pubDate>Fri, 18 Oct 2024 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2024/selenium-milestone-20yrs-blog/</guid><description>This year marks a monumental milestone—20 remarkable years of Selenium, the tool that revolutionized browser automation! We’re thrilled to invite you to a special event to commemorate this incredible journey: Celebrating 20 Years of Selenium
Two Decades of Selenium: Revolutionizing Open Source Browser Automation and Testing Over the past two decades, Selenium has reshaped the automation landscape, evolving from a simple tool into the backbone of browser automation across the globe.</description></item><item><title>Announcing SeleniumConf &amp; AppiumConf 2025</title><link>https://www.selenium.dev/blog/2024/seleniumconf-appiumconf-valencia-2025/</link><pubDate>Fri, 11 Oct 2024 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2024/seleniumconf-appiumconf-valencia-2025/</guid><description>We&amp;rsquo;re thrilled to announce that SeleniumConf &amp;amp; AppiumConf is returning for 2025, bringing together browser and mobile automation enthusiasts from around the world. This must-attend event will take place from March 26-28, 2025, in the vibrant city of Valencia, Spain!
This year, the conference will gather over 400 browser and mobile automation professionals, including developers, testers, quality managers, test architects, and others, to explore the latest trends in browser and mobile automation, including cutting-edge topics like AI in automation, game testing, accessibility automation, and much more.</description></item><item><title>Selenium 4.25 Released!</title><link>https://www.selenium.dev/blog/2024/selenium-4-25-released/</link><pubDate>Fri, 20 Sep 2024 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2024/selenium-4-25-released/</guid><description>We&amp;rsquo;re very happy to announce the release of Selenium 4.25 for Javascript, Ruby, Python, .NET, Java and the Grid! Links to everything can be found on our downloads page.
Selenium 4.25.0 introduces several important changes and improvements across multiple programming languages and build systems. Below are the key highlights from this release.
General Updates Chrome DevTools support is now: v129, v128, and v127 (Firefox still uses v85 for all versions)</description></item><item><title>Selenium 4.24 Released!</title><link>https://www.selenium.dev/blog/2024/selenium-4-24-released/</link><pubDate>Wed, 28 Aug 2024 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2024/selenium-4-24-released/</guid><description>We&amp;rsquo;re very happy to announce the release of Selenium 4.24.0 for Javascript, Ruby, Python, .NET, Java and the Grid! Links to everything can be found on our downloads page.
Noteworthy changes per language Java BiDi Prompt/Alert Test Fix: Fixed prompt/alert related tests if BiDi is enabled. Execute Script API: Added execute script high-level API for BiDi. JSpecify Annotations: Added JSpecify annotations for WebDriver, WebElement, SearchContext, and other interfaces. Dom Mutation Handler Support: Added DOM mutation handler support for BiDi.</description></item><item><title>HtmlUnit Remote: Acquiring Remote HtmlUnitDriver Session in Selenium 4 Grid</title><link>https://www.selenium.dev/blog/2024/htmlunit-remote-for-selenium-4-grid/</link><pubDate>Mon, 19 Aug 2024 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2024/htmlunit-remote-for-selenium-4-grid/</guid><description>HTMLUNIT REMOTE The HtmlUnit Remote project implements a W3C WebDriver protocol wrapper for HtmlUnitDriver, which enables Selenium 4 Grid to supply remote sessions of this headless browser.
Background To eliminate behavioral differences between local and remote configurations, the Selenium Foundation framework always acquires browser sessions from a Grid instance, managing its own local grid instance when not configured to use an existing grid. Selenium 3 Grid could be configured to supply HtmlUnitDriver sessions, supported by special-case handling within the Node server itself.</description></item><item><title>Two Chrome features you should disable</title><link>https://www.selenium.dev/blog/2024/chrome-browser-woes/</link><pubDate>Sun, 18 Aug 2024 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2024/chrome-browser-woes/</guid><description>Search engine selection screen Starting with version 127 of Chrome, the browser now asks which search engine you would like to use, which is great for regular users.
But for automation, it does so every single time.
To bypass this, use the argument below when specifying the browser options.
--disable-search-engine-choice-screen Chrome wastes over 60MB of your bandwidth downloading language plugins The second feature is something that has been with Chrome for quite a while now.</description></item><item><title>Welcoming Puppeteer to the WebDriver World</title><link>https://www.selenium.dev/blog/2024/welcoming-puppeteer-to-the-webdriver-world/</link><pubDate>Fri, 09 Aug 2024 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2024/welcoming-puppeteer-to-the-webdriver-world/</guid><description>The Selenium Project has always been fully supportive of creating a standard to improve the quality of the web that we use. We started with the WebDriver Specification and over the last couple of years have been working with the Safari, Edge, Chrome, and Firefox teams on the WebDriver-BiDi specification.
Today, we are celebrating that Puppeteer has moved over to using WebDriver-BiDi, the new WebDriver Specification that allows WebDriver clients to have event driven APIs instead of the synchronous way Selenium has done it before.</description></item><item><title>Protecting unsecured Selenium Grids against SeleniumGreed</title><link>https://www.selenium.dev/blog/2024/protecting-unsecured-selenium-grid/</link><pubDate>Wed, 31 Jul 2024 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2024/protecting-unsecured-selenium-grid/</guid><description>Over the last week there have been stories going around about crypto miners abusing unsecured Selenium Grids by injecting code in the session create to download and start up crypto miners. This came out thanks to the work from Wiz about an attack they have called SeleniumGreed. This issue can be abused on most versions of Selenium but there appears to be a lot of effort going into abusing Selenium Grid 3.</description></item><item><title>Selenium 4.23 Released!</title><link>https://www.selenium.dev/blog/2024/selenium-4-23-released/</link><pubDate>Fri, 26 Jul 2024 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2024/selenium-4-23-released/</guid><description>We&amp;rsquo;re very happy to announce the release of Selenium 4.23.0 for Javascript, Ruby, Python, .NET, Java and the Grid! Links to everything can be found on our downloads page.
Noteworthy changes per language Java Add custom duration for Actions constructor (#14085). Set session-request-timeout as client readTimeout in RemoteNewSessionQueue. Add high-level BiDi logging APIs. See all changes JavaScript Add source type to BiDi log entry. Add high-level script pinning BiDi APIs. See all changes .</description></item><item><title>Sauce Labs: A New Milestone with Selenium</title><link>https://www.selenium.dev/blog/2024/saucelabs-selenium-partnership/</link><pubDate>Tue, 02 Jul 2024 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2024/saucelabs-selenium-partnership/</guid><description>Selenium has witnessed an exceptional year filled with expansion and progress. The rising popularity of Selenium&amp;rsquo;s Python Bindings is prominently showcased through the engaging discussions at the Selenium Conference and on LinkedIn. Concurrently, the Java bindings have reached a significant landmark, surpassing 100 million downloads. In addition to this, the community has managed to garner over 2.5 million active Selenium users monthly.
We could not have achieved Selenium&amp;rsquo;s 20th anniversary without the collective efforts of numerous volunteers and the invaluable assistance of a company like Sauce Labs.</description></item><item><title>Celebrating a Milestone: BrowserStack Becomes Selenium's Development Partner</title><link>https://www.selenium.dev/blog/2024/browserstack-selenium-partnership/</link><pubDate>Mon, 01 Jul 2024 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2024/browserstack-selenium-partnership/</guid><description>It has been a great year for the Selenium community as it continues to grow. The popularity of Selenium’s Python Bindings is evident from the discussions at the Selenium Conference and on LinkedIn, while the Java bindings have impressively surpassed 100 million downloads.
This project, having reached 20 years old this year, would not be possible without the amazing contributions from our volunteer contributors and the Open Source Program Offices of companies like BrowserStack that allow us to work on this project as part of our day jobs.</description></item><item><title>Selenium 4.22 Released!</title><link>https://www.selenium.dev/blog/2024/selenium-4-22-released/</link><pubDate>Fri, 21 Jun 2024 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2024/selenium-4-22-released/</guid><description>We&amp;rsquo;re very happy to announce the release of Selenium 4.22.0 for Javascript, Ruby, Python, .NET, Java and the Grid! Links to everything can be found on our downloads page.
Highlights Selenium has at least 2.6 active users in the last 30 days. 200k more than last month! All information we collect is publicly available. The numbers only represent users who have Selenium Manager enabled and are using Selenium v4.17 or greater.</description></item><item><title>Multi-Arch Images via Docker Selenium</title><link>https://www.selenium.dev/blog/2024/multi-arch-images-via-docker-selenium/</link><pubDate>Thu, 23 May 2024 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2024/multi-arch-images-via-docker-selenium/</guid><description>We&amp;rsquo;re very happy to announce the landing of Multi-Arch Images for Selenium Grid Server on the Selenium Docker Hub registry!
Motivation For experimental Docker container images that are able to run on platforms such as the Apple M-series or Raspberry Pi, the community-driven repository initiative hosted at SeleniumHQ-Community/docker-seleniarm. These images are built for separate architectures: linux/arm64 (aarch64), linux/arm/v7 (armhf), and linux/amd64 and published on Seleniarm Docker Hub registry.
In order to bring more awareness to the existence of the Multi-Arch Docker container images, provide more insight and transparency on how the container images are built, as well as overcome challenges in building and maintaining them.</description></item><item><title>Selenium 4.21 Released!</title><link>https://www.selenium.dev/blog/2024/selenium-4-21-released/</link><pubDate>Thu, 16 May 2024 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2024/selenium-4-21-released/</guid><description>We&amp;rsquo;re very happy to announce the release of Selenium 4.21.0 for Javascript, Ruby, Python, .NET, Java and the Grid! Links to everything can be found on our downloads page.
Highlights Chrome DevTools support is now: v123, v124, and v125 (Firefox still uses v85 for all versions) Selenium has at least 2.4M active users in the last 30 days. 100k more than last month! India and United States are the top countries with the most users.</description></item><item><title>Selenium 4.20 Released!</title><link>https://www.selenium.dev/blog/2024/selenium-4-20-released/</link><pubDate>Thu, 25 Apr 2024 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2024/selenium-4-20-released/</guid><description>We&amp;rsquo;re very happy to announce the release of Selenium 4.20.0 for Javascript, Ruby, Python, .NET, Java and the Grid! Links to everything can be found on our downloads page.
Highlights Chrome DevTools support is now: v122, v123, and v124 (Firefox still uses v85 for all versions) Selenium has at least 2.3M active users in the last 30 days. 500k more than last month! Java and JavaScript keep adding more WebDriver BiDi features.</description></item><item><title>Selenium 4.19 Released!</title><link>https://www.selenium.dev/blog/2024/selenium-4-19-released/</link><pubDate>Wed, 27 Mar 2024 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2024/selenium-4-19-released/</guid><description>We&amp;rsquo;re very happy to announce the release of Selenium 4.19.0 for Javascript, Ruby, Python, .NET, Java and the Grid! Links to everything can be found on our downloads page.
Highlights Chrome DevTools support is now: v121, v122, and v123 (Firefox still uses v85 for all versions) Thanks to Selenium Manager&amp;rsquo;s records usage, we know Selenium has at least 1.8M active users in the last 30 days! Java and JavaScript keep adding more WebDriver BiDi features.</description></item><item><title>Update imports to use BiDi Java</title><link>https://www.selenium.dev/blog/2024/bidi-java-breaking-change/</link><pubDate>Thu, 14 Mar 2024 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2024/bidi-java-breaking-change/</guid><description>What part of the code base is impacted? Selenium WebDriver BiDi APIs in Java bindings are impacted.
What is impacted by the breaking change? The WebDriver BiDi APIs stay as they are, so you can continue to use them. However, the import statements need to be updated.
What is the breaking change? The import statements need to be updated when using the BiDi APIs.
Before Selenium 4.19: Java import org.openqa.selenium.bidi.LogInspector; import org.</description></item><item><title>Selenium 4.18 Released!</title><link>https://www.selenium.dev/blog/2024/selenium-4-18-released/</link><pubDate>Mon, 19 Feb 2024 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2024/selenium-4-18-released/</guid><description>We&amp;rsquo;re very happy to announce the release of Selenium 4.18.0 and 4.18.1 for Javascript, Ruby, Python, .NET, Java and the Grid! Links to everything can be found on our downloads page.
Highlights Chrome DevTools support is now: v120, v121, and v122 (Firefox still uses v85 for all versions) Selenium Manager records usage has been decreased to reduce impact on users. Chrome headless changed the name of the browser to reflect that it is not actually chrome; Selenium now handles this seamlessly, but you should still switch to --headless=new (see: Headless is going away) Noteworthy changes per language Java Enabling Grid to use self-signed certificate for debugging Added explicit target locator events to the listener support classes in WebDriverListener.</description></item><item><title>Selenium 4.17 Released!</title><link>https://www.selenium.dev/blog/2024/selenium-4-17-released/</link><pubDate>Tue, 23 Jan 2024 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2024/selenium-4-17-released/</guid><description>We&amp;rsquo;re very happy to announce the release of Selenium 4.17.0 for Javascript, Ruby, Python, .NET, Java and the Grid! Links to everything can be found on our downloads page.
Highlights Chrome DevTools support is now: v119, v120, and v121 (Firefox still uses v85 for all versions) Selenium Manager records usage set environment variable SE_AVOID_STATS to &amp;quot;true&amp;quot; to avoid sending information. Chrome headless changed the name of the browser to reflect that it is not actually chrome; Selenium now handles this seamlessly, but you should still switch to --headless=new (see: Headless is going away) Noteworthy changes per language Java Remove deprecated event listener classes; update to EventFiringDecorator and WebDriverListener classes Allow disabling Grid UI Deprecated FirefoxBinary class and legacy Error Codes Deprecated HTML5 features for offline storage, location, and network connection No longer accepting session requests with desiredCapabilities keyword See all changes JavaScript Remove deprecated headless methods and associated references Implemented remote file downloading See all changes .</description></item><item><title>Selenium Vs … blog posts</title><link>https://www.selenium.dev/blog/2024/selenium-vs-blog-posts/</link><pubDate>Tue, 09 Jan 2024 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2024/selenium-vs-blog-posts/</guid><description>The easiest way to clickbait a blog post about automated testing is to compare Selenium against another tool in the space with a catchy title especially when it talks down about the incumbent.
Unfortunately, this can lead to muddying the waters of which features are available in any of the products out there especially when we compare apples to apples.
Selenium has always been a great tool for browser automation. Fortunately for the project, it has become the tool of choice for testing web applications for nearly 2 decades.</description></item><item><title>Removal of AbstractEventListener + EventFiringWebDriver + WebDriverEventListener</title><link>https://www.selenium.dev/blog/2023/java-removal-of-deprecated-events-classes/</link><pubDate>Fri, 08 Dec 2023 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2023/java-removal-of-deprecated-events-classes/</guid><description>Upgrading to WebDriverListener and EventFiringDecorator Decorating the webdriver
new EventFiringWebDriver(driver); // Old approach new EventFiringDecorator().decorate(driver); // New approach Implementing method wrappers One may find the need to have their own custom implementations be used for underlying decorated method calls. An example may be wanting to use your own findElement implementation to store metadata from web elements. One can go down a deep rabbit hole of decorators ( extending WebDriverDecorator and such ), so to keep things simple we will extend EventFiringDecorator since we want a single decorator to handle all our listener events.</description></item><item><title>Selenium 4.16 Released!</title><link>https://www.selenium.dev/blog/2023/selenium-4-16-released/</link><pubDate>Wed, 06 Dec 2023 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2023/selenium-4-16-released/</guid><description>We&amp;rsquo;re very happy to announce the release of Selenium 4.16.0 for Javascript, Ruby, Python, and Selenium 4.16.1 for .NET, Java and the Grid. Links to everything can be found on our downloads page.
Highlights Chrome DevTools support is now: v118, v119, and v120 (Firefox still uses v85 for all versions) Users may now opt in to Selenium Manager by specifying a browserVersion that is different from what is found on the System All bindings now log Selenium information Noteworthy changes per language Java Improve Grid usage of Selenium Manager by always allowing browser version of &amp;ldquo;stable&amp;rdquo; Implement CDP script pinning for Chrome-based browsers Allow reusing devtools instance with JDK 11 client Moved org.</description></item><item><title>Novelties in Selenium Manager 0.4.15</title><link>https://www.selenium.dev/blog/2023/novelties_in_selenium_manager_0.4.15/</link><pubDate>Mon, 13 Nov 2023 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2023/novelties_in_selenium_manager_0.4.15/</guid><description>Support for Firefox ESR Selenium Manager 0.4.15 includes support for Firefox Extended Support Release (ESR). This way, Firefox ESR can be automatically managed with Selenium using the label esr in the browser version. Bindings languages set this browser version (like other accepted labels for browser versions, such as stable, beta, dev, canary, and nightly) using a browser option called browserVersion.
Support for Edge WebView2 Selenium Manager 0.4.15 allows automated driver management for Microsoft Edge WebView2.</description></item><item><title>Selenium 4.15 Released!</title><link>https://www.selenium.dev/blog/2023/selenium-4-15-released/</link><pubDate>Wed, 01 Nov 2023 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2023/selenium-4-15-released/</guid><description>We&amp;rsquo;re very happy to announce the release of Selenium 4.15.0 for Java, Javascript, Ruby, .NET and the Grid; 4.15.2 for Python. Links to everything can be found on our downloads page.
Highlights Chrome DevTools support is now: v117, v118, and v119 (Firefox still uses v85 for all versions) Implemented Remote File Downloads Selenium Manager supports webview2, Firefox ESR and Driver and Browser Mirrors Noteworthy changes per language Java Numerous BiDi implementations Remove CDP version dependencies in the server Selenium Manager now gets copied to cache directory instead of being used from temp directory See all changes JavaScript Replaced calls to console.</description></item><item><title>Selenium Open Space Conference Oct 28th</title><link>https://www.selenium.dev/blog/2023/selenium-open-space-conference/</link><pubDate>Tue, 17 Oct 2023 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2023/selenium-open-space-conference/</guid><description>In less than two weeks, Selenium project is holding space for free and online community meetup, the inaugural Selenium Open Space Conference. Open space conferences are ones where everyone is a speaker, and we co-create our agenda for conversations, questions or answers, workshops, sharing and learning.
We start our 24 hour event at time of 19 years from the tracked Selenium release announcement. We split the day into four segments to facilitate the global community.</description></item><item><title>Status of Selenium Manager in October 2023</title><link>https://www.selenium.dev/blog/2023/status_of_selenium_manager_in_october_2023/</link><pubDate>Tue, 17 Oct 2023 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2023/status_of_selenium_manager_in_october_2023/</guid><description>Selenium Manager continues its development plan. As usual, in the latest releases, i.e., 0.4.13 and 0.4.14 (shipped with Selenium 4.13 and 4.14, respectively), we have fixed the problems reported so far. In these releases, the issues were related to the extraction of the Firefox binary from the self-extracting archive (SFX) in Windows and the advanced configuration through the configuration file (se-config.toml) and environment variables (e.g., SE_BROWSER). Moreover, these recent releases include new features, as explained below.</description></item><item><title>TLC Meeting - September 28, 2023</title><link>https://www.selenium.dev/meetings/2023/tlc-09-28/</link><pubDate>Thu, 28 Sep 2023 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/meetings/2023/tlc-09-28/</guid><description>Meetings are happening on the #selenium-tlc channel on Selenium Slack. To add items to the agenda for the next meeting, please see our public Rolling Agenda
The next meeting will be Thursday, October 12 at 0700 Pacific / 1000 Eastern / 1500 UK / 1930 India.
Participation [diemol] harsha509 pujagani titusfortner Agenda Ticket Status CDP support CI Health Membership Updates Open items Proposals/Decisions Selenium 4.12.0 Selenium 5 Projects in Progress Backlog Ticket Status 190 open Issues; last meeting: 169 51 outstanding PRs; last meeting: 42 CDP support v117 Released with 4.</description></item><item><title>Selenium 4.13 Released!</title><link>https://www.selenium.dev/blog/2023/selenium-4-13-0-released/</link><pubDate>Mon, 25 Sep 2023 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2023/selenium-4-13-0-released/</guid><description>We&amp;rsquo;re very happy to announce the release of Selenium 4.13.0 for Java, Python, Javascript and the Grid; and 4.13.1 for .NET and Ruby. Links to everything can be found on our downloads page.
Highlights Chrome DevTools support is now: v115, v116, and v117 (Firefox still uses v85 for all versions) Reminder: this is the last version of Selenium with Java 8 support. Please upgrade to at least Java 11. The location of Selenium Manager can be set manually in all bindings with SE_MANAGER_PATH environment variable.</description></item><item><title>Selenium 4.14 Released!</title><link>https://www.selenium.dev/blog/2023/selenium-4-14-released/</link><pubDate>Mon, 25 Sep 2023 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2023/selenium-4-14-released/</guid><description>We&amp;rsquo;re very happy to announce the release of Selenium 4.14.0 for Java, Python, Javascript, Ruby, .NET and the Grid. Links to everything can be found on our downloads page.
Highlights Chrome DevTools support is now: v116, v117, and v118 (Firefox still uses v85 for all versions) If you are using Java, this release requires Java 11! (see post on Java 8 support) Selenium supports automatic downloading and management of the Microsoft Edge browser Relevant improvements per language Java Removed support for Async HTTP Client, the default is now the default Java library Allow setting SSL context in client config for HttpClient Several logging message improvements See all changes JavaScript See all changes .</description></item><item><title>Selenium 4.12.0 Released!</title><link>https://www.selenium.dev/blog/2023/selenium-4-12-0-released/</link><pubDate>Thu, 31 Aug 2023 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2023/selenium-4-12-0-released/</guid><description>We&amp;rsquo;re very happy to announce the release of Selenium 4.12.0 for Java, .NET, Ruby, Python, and Javascript as well as the Grid. Links to everything can be found on our downloads page.
Highlights Chrome DevTools support is now: v114, v115, and v116 (Firefox still uses v85 for all versions) Quite a few fixes for Selenium Manager, and now with Firefox browser management! Read about all the new Selenium Manager features .</description></item><item><title>TLC Meeting - August 31, 2023</title><link>https://www.selenium.dev/meetings/2023/tlc-08-31/</link><pubDate>Thu, 31 Aug 2023 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/meetings/2023/tlc-08-31/</guid><description>Meetings are happening on the #selenium-tlc channel on Selenium Slack. To add items to the agenda for the next meeting, please see our public Rolling Agenda
The next meeting will be Thursday, September 14 at 0700 Pacific / 1000 Eastern / 1500 UK / 1930 India.
Participation titusfortner harsha509 jimevans Agenda Ticket Status CDP support CI Health Membership Updates Open items Proposals/Decisions Selenium 4.12.0 Selenium 5 Projects in Progress Backlog Ticket Status 169 open Issues; last meeting: 170 42 outstanding PRs; last meeting: 44 CDP support v116 Early release 8/9; Full release 8/15; Planned Selenium 4.</description></item><item><title>What's new in Selenium Manager 0.4.12, shipped with Selenium 4.12.0</title><link>https://www.selenium.dev/blog/2023/whats_new_in_selenium_manager_0.4.12_shipped_with_selenium_4.12.0/</link><pubDate>Mon, 28 Aug 2023 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2023/whats_new_in_selenium_manager_0.4.12_shipped_with_selenium_4.12.0/</guid><description>A new release of Selenium Manager is out. For this release, we made a relevant decision concerning the Selenium Manager versioning format. From now on, Selenium Manager will follow the same version as Selenium. Nevertheless, since Selenium Manager is still in beta, its major version is 0. Thus, Selenium 4.12.0 is shipped with Selenium Manager 0.4.12.
First, we made a substantial effort to stabilize the already available features on Selenium Manager.</description></item><item><title>TLC Meeting - August 9, 2023</title><link>https://www.selenium.dev/meetings/2023/tlc-08-09/</link><pubDate>Wed, 09 Aug 2023 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/meetings/2023/tlc-08-09/</guid><description>Meetings are happening on the #selenium-tlc channel on Selenium Slack. To add items to the agenda for the next meeting, please see our public Rolling Agenda
The next meeting will be Wednesday, August 23 at 0700 Pacific / 1000 Eastern / 1500 UK / 1930 India.
Participation titusfortner harsha509 p0deje Agenda Ticket Status CDP support CI Health Membership Updates Open items Proposals/Decisions Selenium 4.12.0 Selenium 5 Projects in Progress Backlog Ticket Status 170 open Issues; last meeting: 165 44 outstanding PRs; last meeting: 33 CDP support v115 Supported in Selenium 4.</description></item><item><title>Selenium 4.11.0 Released!</title><link>https://www.selenium.dev/blog/2023/selenium-4-11-0-released/</link><pubDate>Mon, 31 Jul 2023 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2023/selenium-4-11-0-released/</guid><description>We&amp;rsquo;re very happy to announce the release of Selenium 4.11.0 for Java, .NET, Ruby, Python, and Javascript as well as the Grid and Internet Explorer Driver. Links to everything can be found on our downloads page.
Highlights Chrome DevTools support is now: v113, v114, and v115 (Firefox still uses v85 for all versions) Support for Chrome for Testing (CfT) through Selenium Manager. Read more at the new Selenium Manager features blog post.</description></item><item><title>What's new in Selenium Manager with Selenium 4.11.0</title><link>https://www.selenium.dev/blog/2023/whats-new-in-selenium-manager-with-selenium-4.11.0/</link><pubDate>Mon, 31 Jul 2023 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2023/whats-new-in-selenium-manager-with-selenium-4.11.0/</guid><description>As of version 4.6.0, all releases of Selenium (Java, JavaScript, Python, Ruby, and .Net) are shipped with Selenium Manager. Selenium Manager is a binary tool (implemented in Rust) that provides automated driver management for Selenium. Selenium Manager is still in beta, although it is becoming a relevant component of Selenium.
So far, the main feature of Selenium Manager is called automated driver management. I use the term management for this feature (and not just download) since this process is broader and implies different steps:</description></item><item><title>Building Selenium</title><link>https://www.selenium.dev/blog/2023/building-selenium/</link><pubDate>Mon, 12 Jun 2023 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2023/building-selenium/</guid><description>One of the things that we knew from the very beginning of the Selenium project was that people like to code in more than one language. Some people love a bit of JS, others Ruby, and still others prefer C# or Java.
To complicate matters, there’s plenty of pieces we want to share between the language bindings you’ll be using. Examples include the “atoms” (re-usable pieces of javascript that perform common functions – such as “isDisplayed” or “getAttribute” – that we want to work the same way no matter which language you prefer to write tests in), things like our CDP support, which uses shared files that describe all the available functions we can call, and the new Selenium Manager, which is written in Rust, but we bundle with each of the language bindings.</description></item><item><title>Java 8 support in Selenium</title><link>https://www.selenium.dev/blog/2023/java-8-support/</link><pubDate>Fri, 09 Jun 2023 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2023/java-8-support/</guid><description>“If it ain’t broke, don’t fix it” is a saying you may have heard, but sometimes it’s necessary to move on from our old favorites. That’s why we’re announcing that Selenium will stop supporting Java 8 on September 30, 2023. This applies for both the Java bindings and the Selenium Grid.
Selenium has long supported Java 8, but as technology evolves, so must we. One of the primary reasons for this change is that Java 8 reached the end of active support over a year ago.</description></item><item><title>TLC Meeting - June 8, 2023</title><link>https://www.selenium.dev/meetings/2023/tlc-06-08/</link><pubDate>Thu, 08 Jun 2023 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/meetings/2023/tlc-06-08/</guid><description>Meetings are happening on the #selenium-tlc channel on Selenium Slack. To add items to the agenda for the next meeting, please see our public Rolling Agenda
Due to the Selenium Conference, the next meeting will be Thursday, June 22 at 0700 Pacific / 1000 Eastern / 1500 UK / 1930 India.
Participation titusfortner diemol AutomatedTester harsha509 p0deje Agenda Ticket Status CDP support Membership Updates Open items Proposals/Decisions CI Health Selenium 4.</description></item><item><title>Selenium 4.10.0 Released!</title><link>https://www.selenium.dev/blog/2023/selenium-4-10-0-released/</link><pubDate>Wed, 07 Jun 2023 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2023/selenium-4-10-0-released/</guid><description>We&amp;rsquo;re very happy to announce the release of Selenium 4.10.0 for Java, .NET, Ruby, Python, and Javascript as well as the Grid and Internet Explorer Driver. Links to everything can be found on our downloads page.
Highlights Chrome DevTools support is now: v112, v113, and v114 (Firefox still uses v85 for all versions) Selenium Manager supports proxy usage by using the proxy information set in the browser options. Adding support for webview2 in Edge for Java, JavaScript, and Ruby Error messages across bindings now include links to the Selenium documentation.</description></item><item><title>TLC Meeting - May 25, 2023</title><link>https://www.selenium.dev/meetings/2023/tlc-05-25/</link><pubDate>Thu, 25 May 2023 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/meetings/2023/tlc-05-25/</guid><description>Meetings are happening on the #selenium-tlc channel on Selenium Slack. To add items to the agenda for the next meeting, please see our public Rolling Agenda
Due to the Selenium Conference, the next meeting will be Thursday, June 8 at 0700 Pacific / 1000 Eastern / 1500 UK / 1930 India.
Participation titusfortner diemol AutomatedTester harsha509 p0deje Agenda Ticket Status CDP support Membership Updates Proposals/Decisions CI Health Selenium 4.10.0 Ticket Status 164 open Issues; last meeting: 159 35 outstanding PRs; last meeting: 35 CDP support v114 will have early release on May 24, and production release May 30 Membership Updates No updates Proposals/Decisions List of Needs-Decision Issues</description></item><item><title>TLC Meeting - April 27, 2023</title><link>https://www.selenium.dev/meetings/2023/tlc-04-27/</link><pubDate>Thu, 27 Apr 2023 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/meetings/2023/tlc-04-27/</guid><description>Meetings are happening on the #selenium-tlc channel on Selenium Slack. To add items to the agenda for the next meeting, please see our public Rolling Agenda
Due to the Selenium Conference, the next meeting will be Thursday, May 11 at 0700 Pacific / 1000 Eastern / 1500 UK / 1930 India.
Participation titusfortner diemol AutomatedTester harsha509 p0deje Agenda Ticket Status CDP support Membership Updates Proposals/Decisions CI Health Selenium 4.10.0 Ticket Status 169 open Issues; last meeting: 147 28 outstanding PRs; last meeting: 26 CDP support v113 is available since April 26, needs to be added Membership Updates No updates Proposals/Decisions List of Needs-Decision Issues</description></item><item><title>InvalidSelectorException has changed</title><link>https://www.selenium.dev/blog/2023/invalid-selector-exception-has-changed/</link><pubDate>Fri, 21 Apr 2023 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2023/invalid-selector-exception-has-changed/</guid><description>Before Selenium 4.8.2 in Java and C#, when an invalid locator was used to identify an element, the resulting behavior would be inconsistent in our bindings.
For example, let&amp;rsquo;s check the following code:
ArrayList&amp;lt;Class&amp;lt;? extends Exception&amp;gt;&amp;gt; expectedExceptions = new ArrayList&amp;lt;&amp;gt;(); expectedExceptions.add(org.openqa.selenium.NoSuchElementException.class); expectedExceptions.add(org.openqa.selenium.StaleElementReferenceException.class); expectedExceptions.add(org.openqa.selenium.ElementNotInteractableException.class); expectedExceptions.add(org.openqa.selenium.InvalidElementStateException.class); return new FluentWait&amp;lt;&amp;gt;(driver) .withTimeout(Duration.ofMillis(ELEMENT_IDENTIFICATION_TIMEOUT)) .pollingEvery(Duration.ofMillis(ELEMENT_IDENTIFICATION_POLLING_DELAY)) .ignoreAll(expectedExceptions) .until(nestedDriver -&amp;gt; { nestedDriver.findElement(By.xpath(&amp;#34;invalid-xpath&amp;#34;)).click; }); The expected result before this change would be that the driver waits until the timeout expires and then throw an InvalidSelectorException.</description></item><item><title>Selenium 4.9.0 Released!</title><link>https://www.selenium.dev/blog/2023/selenium-4-9-0-released/</link><pubDate>Fri, 21 Apr 2023 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2023/selenium-4-9-0-released/</guid><description>We&amp;rsquo;re very happy to announce the release of Selenium 4.9.0 for Java, .NET, Ruby, Python, and Javascript as well as the Grid and Internet Explorer Driver. Links to everything can be found on our downloads page.
Highlights Chrome DevTools support is now: v110, v111, and v112 (Firefox still uses v85 for all versions) Maven BOM for the Java bindings. Remote file downloads are now possible through Selenium Grid. First steps taken to phase out CDP in Firefox and replace it with the BiDi implementation.</description></item><item><title>Joint Leadership Meeting - March 31, 2023</title><link>https://www.selenium.dev/meetings/2023/joint-03-31/</link><pubDate>Fri, 31 Mar 2023 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/meetings/2023/joint-03-31/</guid><description>In conjunction with the Selenium Conference, we had an in-person meeting of the Selenium Leadership Team (both Technical and Project Leadership Committees).
Participation People present included:
Alex Rodionov Bill McGee Corina Pip Daniel Pono Takamori David Burns Diego Molina Maaret Pyhäjärvi Manoj Kumar Marcus Merrell Simon Stewart Sri Harsha Titus Fortner Agenda Define a sustainable way of collaborating between TLC/PLC/SFC Possibility for a TLC seat on the PLC to better integrate groups Schedule for regular meetings Ideas for our current budget List of proposed ideas Collaboration / integration with Appium Define &amp;lsquo;roles&amp;rsquo; for PLC (e.</description></item><item><title>TLC Meeting - March 16, 2023</title><link>https://www.selenium.dev/meetings/2023/tlc-03-16/</link><pubDate>Thu, 16 Mar 2023 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/meetings/2023/tlc-03-16/</guid><description>Meetings are happening on the #selenium-tlc channel on Selenium Slack. To add items to the agenda for the next meeting, please see our public Rolling Agenda
Due to the Selenium Conference, the next meeting will be Thursday, April 13 at 0700 Pacific / 1000 Eastern / 1500 UK / 1930 India.
Participation TLC members present included:
diemol jimevans titusfortner Agenda Ticket Status CDP support Membership Updates Proposals/Decisions CI Health Selenium 4.</description></item><item><title>Let's meet at SeleniumConf, Once Again!</title><link>https://www.selenium.dev/blog/2023/lets-meet-in-person-at-seleniumconf-2023/</link><pubDate>Tue, 14 Feb 2023 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2023/lets-meet-in-person-at-seleniumconf-2023/</guid><description>This year is special, thanks to the decision to host an in-person conference after a long hiatus and several years of virtual-only events. We&amp;rsquo;ve gone out of our way to reflect this feeling at the conference. We have engrossing keynotes, well-researched talks, hands-on pre-conference workshops, hallway tracks, and whatnot!
Here&amp;rsquo;s a quick list of what to expect! What&amp;rsquo;s cooking in Keynotes? We have Diego Molina kicking things off with &amp;lsquo;Selenium: State of the Union&amp;rsquo; where he will talk about all things Selenium, including the project, the code, and the community.</description></item><item><title>TLC Meeting - February 2, 2023</title><link>https://www.selenium.dev/meetings/2023/tlc-02-02/</link><pubDate>Thu, 02 Feb 2023 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/meetings/2023/tlc-02-02/</guid><description>Meetings are happening on the #selenium-tlc channel on Selenium Slack. To add items to the agenda for the next meeting, please see our public Rolling Agenda
The next meeting will be Thursday, February 16 at 0700 Pacific / 1000 Eastern / 1500 UK / 1930 India.
Participation TLC members present included:
titusfortner diemol AutomatedTester harsha509 p0deje pujagani TamsilAmani Agenda Ticket Status CDP support Membership Updates Proposals/Decisions CI Health Selenium 4.8 Selenium 4.</description></item><item><title>Headless is Going Away!</title><link>https://www.selenium.dev/blog/2023/headless-is-going-away/</link><pubDate>Sun, 29 Jan 2023 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2023/headless-is-going-away/</guid><description>Headless is an execution mode for Firefox and Chromium based browsers. It allows users to run automated scripts in headless mode, meaning that the browser window wouldn’t be visible. In most of Selenium&amp;rsquo;s bindings there is a convenience method to set this execution mode while setting the browser options. However, Selenium 4.8.0 will be deprecated this method and now users need to set it through arguments when setting the browser options.</description></item><item><title>Selenium 4.8.0 Released!</title><link>https://www.selenium.dev/blog/2023/selenium-4-8-0-released/</link><pubDate>Mon, 23 Jan 2023 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2023/selenium-4-8-0-released/</guid><description>We&amp;rsquo;re very happy to announce the release of Selenium 4.8.0 for Java, .NET, Ruby, Python, and Javascript as well as the Grid and Internet Explorer Driver. Links to everything can be found on our downloads page.
Highlights Chrome DevTools support is now: v107, v108, and v109 (Firefox still uses v85 for all versions) Large JS executions have the name as a comment to help understand what payload being sent to/from server/driver.</description></item><item><title>TLC Meeting - January 19, 2023</title><link>https://www.selenium.dev/meetings/2023/tlc-01-19/</link><pubDate>Thu, 19 Jan 2023 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/meetings/2023/tlc-01-19/</guid><description>Meetings are happening on the #selenium-tlc channel on Selenium Slack. To add items to the agenda for the next meeting, please see our public Rolling Agenda
The next meeting will be Thursday, February 2 at 0700 Pacific / 1000 Eastern / 1500 UK / 1930 India.
Participation TLC members present included:
titusfortner diemol AutomatedTester harsha509 p0deje pujagani Agenda Ticket Status CDP support Membership Updates Proposals/Decisions CI Health Selenium 4.8 Selenium 4.</description></item><item><title>TLC Meeting - January 5, 2023</title><link>https://www.selenium.dev/meetings/2023/tlc-01-05/</link><pubDate>Thu, 05 Jan 2023 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/meetings/2023/tlc-01-05/</guid><description>Meetings are happening on the #selenium-tlc channel on Selenium Slack. To add items to the agenda for the next meeting, please see our public Rolling Agenda
The next meeting will be Thursday, January 19 at 0700 Pacific / 1000 Eastern / 1500 UK / 1930 India.
Participation TLC members present included:
harsha509 p0deje titusfortner Note: Due to holidays, this was mostly just a status update
Agenda Ticket Status CDP support Membership Updates Proposals CI Health Selenium 4.</description></item><item><title>Year End Review 2022</title><link>https://www.selenium.dev/blog/2022/end-of-year-review/</link><pubDate>Fri, 23 Dec 2022 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2022/end-of-year-review/</guid><description>It was an amazing year here at the Selenium project, and we wanted to remind you of some of the great things we accomplished.
In terms of releases, we continued to build on top of Selenium 4 which was launched in October 2021. This year we published v4.2, v4.3, v4.4, v4.5, v4.6, and v4.7. These releases included improvements, bug fixes, removal of deprecated functionality, improved error handling, updates of the underlying libraries, support for the latest Chrome DevTools versions to keep you in sync with new browser releases, but also new features.</description></item><item><title>SeleniumConf Chicago 2023 Speakers Announced</title><link>https://www.selenium.dev/blog/2022/seleniumconf-chicago-2023-update/</link><pubDate>Thu, 22 Dec 2022 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2022/seleniumconf-chicago-2023-update/</guid><description>As many of you know, the Selenium Conference returns to an in-person event next March 28-30, 2023 in Chicago, IL. The Program Chairs &amp;amp; Committee, as well as the Extended Program Review Committee, have been hard at work putting together an outstanding lineup of speakers and workshops, and we&amp;rsquo;re close to releasing the full agenda and a completely re-branded conference website - stay tuned! In the meantime, we wanted you to be among the first to know who will be presenting, announce a new, additional pre-conference workshop, and provide you with some important updates.</description></item><item><title>TLC Meeting - December 22, 2022</title><link>https://www.selenium.dev/meetings/2022/tlc-12-22/</link><pubDate>Thu, 22 Dec 2022 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/meetings/2022/tlc-12-22/</guid><description>Meetings are happening on the #selenium-tlc channel on Selenium Slack. To add items to the agenda for the next meeting, please see our public Rolling Agenda
The next meeting will be Thursday, January 5 at 0700 Pacific / 1000 Eastern / 1500 UK / 1930 India.
Participation TLC members present included:
AutomatedTester diemol harsha509 p0deje pujagani titusfortner Agenda Ticket Status CDP support Membership Updates Proposals CI Health Selenium 4.8 Projects Underway Backlog Ticket Status 123 open Issues; last meeting: 113 29 outstanding PRs; last meeting: 26 Issues keep ticking up, but several dozen of these were opened by project members for tracking work in progress.</description></item><item><title>TLC Meeting - December 8, 2022</title><link>https://www.selenium.dev/meetings/2022/tlc-12-08/</link><pubDate>Thu, 08 Dec 2022 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/meetings/2022/tlc-12-08/</guid><description>Meetings are happening on the #selenium-tlc channel on Selenium Slack. To add items to the agenda for the next meeting, please see our public Rolling Agenda
The next meeting will be Thursday, December 22 at 0700 Pacific / 1000 Eastern / 1500 UK / 1930 India.
Participation TLC members present included:
AutomatedTester diemol harsha509 p0deje pujagani titusfortner Agenda Ticket Status CDP support Membership Updates Proposals CI Health Selenium 4.7 Selenium 4.</description></item><item><title>Selenium 4.7.0 Released!</title><link>https://www.selenium.dev/blog/2022/selenium-4-7-0-released/</link><pubDate>Fri, 02 Dec 2022 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2022/selenium-4-7-0-released/</guid><description>We&amp;rsquo;re very happy to announce the release of Selenium 4.7.0 for Java, .NET, and Javascript as well as the Grid and Internet Explorer Driver; for Ruby use 4.7.1, and Python 4.7.2. Links to everything can be found on our downloads page.
Highlights Chrome DevTools support is now: v106, v107, and v108 (Firefox still uses v85 for all versions) Selenium Manager now supports IE Driver &amp;amp; has improved error logging. Using Edge in IE Mode no longer requires ignoring zoom levels.</description></item><item><title>TLC Meeting - November 24, 2022</title><link>https://www.selenium.dev/meetings/2022/tlc-11-24/</link><pubDate>Thu, 24 Nov 2022 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/meetings/2022/tlc-11-24/</guid><description>Meetings are happening on the #selenium-tlc channel on Selenium Slack.
The next meeting will be Thursday, December 8 at 0700 Pacific / 1000 Eastern / 1500 UK / 1930 India.
Participation TLC members present included:
harsha509 pujagani titusfortner Agenda Ticket Status CDP support Membership Updates Proposals CI Health Selenium 4.7 Projects Underway Backlog Ticket Status 101 open Issues; last meeting: 91 29 outstanding PRs; last meeting: 23 CDP support v108 scheduled November 29 Membership Updates No updates Proposals/Decisions Selenium Manager Beta/Dev - It was agreed that the user should have to specify a non-production browser version in order for it to be used.</description></item><item><title>BELLATRIX Test Automation Framework for C# and JAVA</title><link>https://www.selenium.dev/blog/2022/bellatrix-test-automation-framework/</link><pubDate>Wed, 16 Nov 2022 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2022/bellatrix-test-automation-framework/</guid><description>Over the last decade, a large ecosystem of Open Source projects has sprouted up around Selenium. Selenium is often used for automating web applications for testing purposes, but it does not include a testing framework. Nowadays, Selenium Ecosystem initiatives try to give popularity to popular open-source test automation frameworks maintained by people outside of the core Selenium maintainers. One of these frameworks is BELLATRIX, invented by Anton Angelov. It has two versions - C# and Java.</description></item><item><title>TLC Meeting - November 10, 2022</title><link>https://www.selenium.dev/meetings/2022/tlc-11-10/</link><pubDate>Thu, 10 Nov 2022 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/meetings/2022/tlc-11-10/</guid><description>Meetings are happening on the #selenium-tlc channel on Selenium Slack.
The next meeting will be Thursday, November 24 at 0700 Pacific / 1000 Eastern / 1500 UK / 1930 India.
Agenda Ticket Status CDP support Membership Updates Proposals CI Health Selenium 4.7 Projects Underway Backlog Ticket Status 91 open Issues; last meeting: 88 23 outstanding PRs; last meeting: 28 CDP support v107 was added already, and is be part of 4.</description></item><item><title>Introducing Selenium Manager</title><link>https://www.selenium.dev/blog/2022/introducing-selenium-manager/</link><pubDate>Fri, 04 Nov 2022 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2022/introducing-selenium-manager/</guid><description>Most people&amp;rsquo;s first experience with Selenium ends up with an error message like this one:
java.lang.IllegalStateException: The path to the driver executable must be set by the webdriver.chrome.driver system property; for more information, see https://chromedriver.chromium.org/. The latest version can be downloaded from https://chromedriver.chromium.org/downloads Then they have to search the web for instructions on what to do with the drivers they download.
Selenium: now with batteries included! The Selenium project wants to improve the user experience, and one of the first steps is to help all users to simplify how they set up their environment.</description></item><item><title>Selenium 4.6.0 Released!</title><link>https://www.selenium.dev/blog/2022/selenium-4-6-0-released/</link><pubDate>Fri, 04 Nov 2022 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2022/selenium-4-6-0-released/</guid><description>We&amp;rsquo;re very happy to announce the release of Selenium 4.6.0 for Java, .NET, Python, Ruby, and JavaScript bindings as well as the Grid and Internet Explorer Driver. Links to everything can be found on our downloads page.
Highlights Adding support for CDP released in Chrome v105, v106, and v107, while v104 was removed Initial implementation of Selenium Manager across bindings Improvements to the new Java HTTP 11 client and important Grid fixes.</description></item><item><title>TLC Meeting - October 27, 2022</title><link>https://www.selenium.dev/meetings/2022/tlc-10-27/</link><pubDate>Thu, 27 Oct 2022 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/meetings/2022/tlc-10-27/</guid><description>Meetings are happening on the #selenium-tlc channel on Selenium Slack.
The next meeting will be Thursday, November 10 at 0700 Pacific / 1000 Eastern / 1500 UK / 1930 India.
Agenda Ticket Status CDP support Membership Updates Proposals CI Health Selenium 4.6 Projects Underway Backlog Ticket Status 88 open issues; last meeting: 88 28 outstanding PRs; last meeting: 25 CDP support v107 was added already, and is be part of 4.</description></item><item><title>TLC Meeting - October 13, 2022</title><link>https://www.selenium.dev/meetings/2022/tlc-10-13/</link><pubDate>Thu, 13 Oct 2022 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/meetings/2022/tlc-10-13/</guid><description>Meetings are happening on the #selenium-tlc channel on Selenium Slack.
The next meeting will be Thursday, October 27 at 0700 Pacific / 1000 Eastern / 1500 UK / 1930 India.
Agenda Ticket Status CDP support Membership Updates Proposals CI Health Selenium 4.6 Projects Underway Backlog Ticket Status 88 open Issues; last meeting: 79 25 outstanding PRs; last meeting: 19 CDP support v105 &amp;amp; v106 added to Selenium v4.5 v107 scheduled October 25 Membership Updates Corina Pip added to PLC!</description></item><item><title>Selenium 4.5.0 Released!</title><link>https://www.selenium.dev/blog/2022/selenium-4-5-0-released/</link><pubDate>Wed, 28 Sep 2022 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2022/selenium-4-5-0-released/</guid><description>We&amp;rsquo;re very happy to announce the release of Selenium 4.5.0 for Java, .NET, Python, Ruby, and JavaScript bindings as well as the Grid and Internet Explorer Driver. Links to everything can be found on our Downloads Page.
Highlights Adding support for CDP released in Chrome v105 and v106, while v102 and v103 were removed Updates to Select functionality Improved experience for Firefox Add-ons IE driver automatically uses Edge in IE Mode if IE is not present Java 11 HTTP Client supported for Java users running Java versions 11+ Various language specific bug fixes; see the full list of changes in the Changelogs.</description></item><item><title>TLC Meeting - September 28, 2022</title><link>https://www.selenium.dev/meetings/2022/tlc-09-28/</link><pubDate>Wed, 28 Sep 2022 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/meetings/2022/tlc-09-28/</guid><description>Meetings are happening on the #selenium-tlc channel on Selenium Slack.
The next meeting will be Thursday, October 13 at 0700 Pacific / 1000 Eastern / 1500 UK / 1930 India.
Agenda Ticket Status CDP support Membership Updates Proposals CI Health Selenium 4.5 Projects Underway Backlog Participation TLC members present included:
harsha509 titusfortner Due to lack of quorum this meeting is essentially a status update
Ticket Status 79 open Issues (2 more than last meeting) 19 outstanding PRs (1 more than last meeting) CDP support v105 support is in trunk but only released on Ruby v106 is out, but issues in Java/.</description></item><item><title>Using Java 11+ HTTP Client in Selenium 4.5.0 and beyond</title><link>https://www.selenium.dev/blog/2022/using-java11-httpclient/</link><pubDate>Fri, 16 Sep 2022 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2022/using-java11-httpclient/</guid><description>Current HTTP client used in Selenium Selenium uses an HTTP client and associated WebSocket client for multiple purposes
To send commands to the WebDriver To send commands from the Selenium client library to the Grid For various Grid components to communicate with each other depending on the Grid mode To create ChromeDevTools protocol and BiDi protocol sessions Currently, Selenium uses AsyncHttpClient. AsyncHttpClient is an open-source library built on top of Netty.</description></item><item><title>TLC Meeting - September 14, 2022</title><link>https://www.selenium.dev/meetings/2022/tlc-09-14/</link><pubDate>Wed, 14 Sep 2022 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/meetings/2022/tlc-09-14/</guid><description>Meetings are happening on the #selenium-tlc channel on Selenium Slack.
Agenda Ticket Status CDP support Membership Updates Proposals CI Health Selenium 4.5 Projects Underway Backlog Participation TLC members present included:
AutomatedTester harsha509 pujagani titusfortner Ticket Status 77 open Issues (6 fewer than last meeting) 18 outstanding PRs (1 more than last meeting) 11 PRs are Python (symonk is working on) 3 are Java (pujagani is working on) 2 are .NET (titusfortner is trying to figure out) CDP support v105 was added last week, but Selenium 4.</description></item><item><title>TLC Meeting - August 31, 2022</title><link>https://www.selenium.dev/meetings/2022/tlc-08-31/</link><pubDate>Wed, 31 Aug 2022 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/meetings/2022/tlc-08-31/</guid><description>Meetings are happening on the #selenium-tlc channel on Selenium Slack.
Agenda Ticket Status CDP support Membership Updates Proposals CI Health Selenium 4.5 Projects Underway Backlog Participation TLC members present included:
diemol [harsha509] pujagani titusfortner Ticket Status 83 open Issues (2 fewer than last meeting) 17 outstanding PRs (1 less than last meeting) CDP support 105 is out but we have not added it yet — titusfortner volunteered to add them v106 is scheduled for September 27</description></item><item><title>Dev and Beta Channel Browsers via Docker Selenium</title><link>https://www.selenium.dev/blog/2022/dev-and-beta-channel-browsers-via-docker-selenium/</link><pubDate>Tue, 23 Aug 2022 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2022/dev-and-beta-channel-browsers-via-docker-selenium/</guid><description>The Docker Selenium browser Beta and Dev channel releases are now regularly published to Docker Hub and updated every two days. This enables testers and developers to test their applications on pre-release versions of Google Chrome, Mozilla Firefox, and Microsoft Edge before their official releases, using container tools, such as Docker. This empowers teams to stay ahead of the curve and catch potential showstoppers in their CI environment before those issues have an impact on their users.</description></item><item><title>Scaling a Kubernetes Selenium Grid with KEDA</title><link>https://www.selenium.dev/blog/2022/scaling-grid-with-keda/</link><pubDate>Fri, 19 Aug 2022 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2022/scaling-grid-with-keda/</guid><description>The Issue If you have any experience with Selenium Grid and Kubernetes you will probably run into an issue with scaling. Kubernetes (K8S) works wonders for scaling up and down applications based on their CPU and Memory usage, but it is not so straightforward when it comes down to applications like Selenium Grid.
The issue is described quite well in this blog post. But in short, the Horizontal Pod AutoScaler (HPA) that is built into Kubernetes checks (by default) for resource consumption to determine if a deployment needs to be scaled up or down.</description></item><item><title>TLC Meeting - August 17, 2022</title><link>https://www.selenium.dev/meetings/2022/tlc-08-17/</link><pubDate>Wed, 17 Aug 2022 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/meetings/2022/tlc-08-17/</guid><description>Meetings are happening on the #selenium-tlc channel on Selenium Slack.
Agenda Ticket Status CDP support Membership Updates PLC status update Proposals Selenium 4.5 Projects Underway Backlog Participation TLC members present included:
AutomatedTester diemol jimevans pujagani titusfortner Ticket Status 85 open Issues (15 fewer than last meeting) 18 outstanding PRs (2 more than last meeting) CDP support v105 is scheduled for August 30.
Membership Updates None this meeting
PLC status update PLC and SFC met to talk about the relationship between SFC and SeleniumHQ, and the possibility of Selenium moving to another foundation.</description></item><item><title>Selenium 4.4.0 Released!</title><link>https://www.selenium.dev/blog/2022/selenium-4-4-0-released/</link><pubDate>Tue, 09 Aug 2022 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2022/selenium-4-4-0-released/</guid><description>We&amp;rsquo;re very happy to announce the release of Selenium 4.4.0. We&amp;rsquo;re shipping this for Java, .Net, Python, Ruby, and JavaScript, so if you&amp;rsquo;re using any of those languages, go and grab it from your package manager of choice!
Some of the main highlights are:
Adding support for CDP released in Chrome v104, while v101 was removed Virtual authenticator feature was completed across languages. All language bindings will throw an error when w3c: false is set in ChromeOptions Improved health checks and requests with non W3C locators for Relay Nodes in Grid Check the complete changelog and download the artifacts at the Selenium 4.</description></item><item><title>TLC Meeting - August 3, 2022</title><link>https://www.selenium.dev/meetings/2022/tlc-08-03/</link><pubDate>Wed, 03 Aug 2022 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/meetings/2022/tlc-08-03/</guid><description>Meetings are happening on the #selenium-tlc channel on Selenium Slack.
Agenda Ticket Status CDP support Membership Updates PLC status update Selenium Manager Selenium 4.4 Selenium 4.5 Selenium Backlog Selenium 5.0 Ideas Participation TLC members present included:
harsha509 p0deje pujagani titusfortner Ticket Status 100 open Issues (6 more than last time) 20 outstanding PRs (1 more than last time) CDP support Support for v104 is already in place. v105 is scheduled for August 30.</description></item><item><title>TLC Meeting - July 20, 2022</title><link>https://www.selenium.dev/meetings/2022/tlc-07-20/</link><pubDate>Wed, 20 Jul 2022 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/meetings/2022/tlc-07-20/</guid><description>Meetings are happening on the #selenium-tlc channel on Selenium Slack.
Agenda Ticket Status CDP support Membership Updates PLC status update Selenium 4.4 Status Selenium &amp;ldquo;Projects&amp;rdquo; Selenium 5.0 Ideas Participation TLC members present included:
AutomatedTester harsha509 p0deje pujagani titusfortner Ticket Status 94 open Issues (7 fewer than last time) 19 outstanding PRs (same number as last time) CDP support Support for v104 should come with Selenium 4.4, estimated for August 2.</description></item><item><title>Test Automation Summit Berlin</title><link>https://www.selenium.dev/blog/2022/test-automation-summit/</link><pubDate>Wed, 13 Jul 2022 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2022/test-automation-summit/</guid><description>Have you ever wanted to contribute to an open source testing project, but couldn&amp;rsquo;t figure out where to start? If so, fill out this form to apply for an invitation to join the Open Source Test Automation Summit on August 26 in Berlin, sponsored by Selenium and hosted by Sauce Labs. You can review the list of available projects below and select the one that you&amp;rsquo;d like to contribute to. We&amp;rsquo;ll be in touch soon if you are selected to join us.</description></item><item><title>TLC Meeting - July 06, 2022</title><link>https://www.selenium.dev/meetings/2022/tlc-07-06/</link><pubDate>Wed, 06 Jul 2022 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/meetings/2022/tlc-07-06/</guid><description>Meetings are happening on the #selenium-tlc channel on Selenium Slack.
Agenda Ticket Status CDP support Membership Updates PLC status update Selenium 4.4 Status Selenium &amp;ldquo;Projects&amp;rdquo; Selenium 5.0 Thoughts Note: June 22 meeting was skipped due to lack of attendance
Participation TLC members present included:
diemol harsha509 p0deje titusfortner Ticket Status 101 open Issues (15 more than last month) 19 outstanding PRs (11 fewer than last month) Open issues got up to 108 earlier in the week.</description></item><item><title>TLC Meeting - June 8, 2022</title><link>https://www.selenium.dev/meetings/2022/tlc-06-08/</link><pubDate>Wed, 08 Jun 2022 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/meetings/2022/tlc-06-08/</guid><description>Meetings are happening on the #selenium-tlc channel on Selenium Slack.
Agenda Ticket Status 86 open Issues 30 outstanding PRs CDP support Membership Updates PLC status update Selenium 4.3: Remove deprecations release Selenium 4.4 &amp;amp; Beyond SFC membership CDP support Support for v103 should come with 4.3, estimated for June 22.
Membership Updates symonk to become a committer.
PLC status update Chicago Conference status - Contract needs to be negotiated because it is too short to organise the event.</description></item><item><title>TLC Meeting - May 25, 2022</title><link>https://www.selenium.dev/meetings/2022/tlc-05-25/</link><pubDate>Wed, 25 May 2022 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/meetings/2022/tlc-05-25/</guid><description>Meetings are happening on the #selenium-tlc channel on Selenium Slack.
Agenda Ticket Status 82 open Issues 26 outstanding PRs CDP support Membership Updates PLC status update Github permission updates Selenium 4.2 Selenium 4.3: Remove deprecations release SFC membership CDP support Support for v102 updated in all bindings and released
Membership Updates No updates for this meeting
PLC status update Chicago Conference status - Contract negotiations are underway with the Voca hotel in Chicago, CFP will be announced after CFP for India closes.</description></item><item><title>Removing Legacy Protocol Support</title><link>https://www.selenium.dev/blog/2022/legacy-protocol-support/</link><pubDate>Fri, 20 May 2022 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2022/legacy-protocol-support/</guid><description>The Selenium team prides itself on how seriously it takes backwards compatibility. A lot of care has gone into the Java bindings, especially, to ensure very few breaking changes over the years. There is Selenium code written 15 years ago that can still run with Selenium 4 libraries! Providing this exceptional amount of support comes with a large maintenance burden, though, and we need to be able to properly meet the needs of the vast majority of our userbase.</description></item><item><title>TLC Meeting - May 11, 2022</title><link>https://www.selenium.dev/meetings/2022/tlc-05-11/</link><pubDate>Wed, 11 May 2022 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/meetings/2022/tlc-05-11/</guid><description>Meetings are happening on the #selenium-tlc channel on Selenium Slack.
Agenda Ticket Status 92 open Issues 17 outstanding PRs CDP support Membership Updates PLC status update Github permission updates Proposal: Prevent Chrome w3c: false? https://github.com/SeleniumHQ/selenium/issues/10448 Proposal: Delete IME support; Contact applicable w3c working group? https://github.com/SeleniumHQ/selenium/issues/10573 Selenium 4.2 Selenium 4.3 CDP support For the first time in forever we are completely up to date on Chrome 101 in all bindings! Next version (v102) will happen in 2 weeks.</description></item><item><title>TLC Meeting - April 27, 2022</title><link>https://www.selenium.dev/meetings/2022/tlc-04-27/</link><pubDate>Wed, 27 Apr 2022 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/meetings/2022/tlc-04-27/</guid><description>Meetings are happening on the #selenium-tlc channel on Selenium Slack.
Agenda Ticket Status 107 open Issues 24 outstanding PRs Patch releases are all tagged Chrome Version Support Status (Chrome 101 released 4/26); Ruby — through v100 Python — through v99 JS — through v98 Java — through v101 .NET — through v96 Leadership Updates Remove barancev from TLC Add harsha509 to TLC Add wcmcgee to PLC Tickets Noted that quite a few outstanding Python PRs and need to make sure they get evaluated in a timely manner.</description></item><item><title>TLC Meeting - April 13, 2022</title><link>https://www.selenium.dev/meetings/2022/tlc-04-13/</link><pubDate>Wed, 13 Apr 2022 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/meetings/2022/tlc-04-13/</guid><description>Meetings are happening on the #selenium-tlc channel on Selenium Slack.
Agenda Ticket Status 99 open Issues 19 outstanding PRs Release Process Status Chrome Version Support Status (Chrome 101 released 4/26) — do we need a better patch release process? PLC Updates from last meeting Tagging patch releases Selenium 4.2 Requirements Selenium 4.3 Plans Tickets Noted that quite a few outstanding Python PRs and need to make sure they get evaluated in a timely manner.</description></item><item><title>TLC Meeting - March 16, 2022</title><link>https://www.selenium.dev/meetings/2022/tlc-03-16/</link><pubDate>Wed, 16 Mar 2022 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/meetings/2022/tlc-03-16/</guid><description>Meetings are happening on the #selenium-tlc channel on Selenium Slack.
Agenda Release Process Documented + Access Ruby — Documented; Titus, Alex, Diego Python — Documented; David, Diego, Titus Java — ??; Diego .NET — Not Documented; Jim JS — ??; David, Diego(?) Chrome Version Support — need patch releases Ruby — through v99 Python — through v99 JS — through v98(?) Java — through v97 .NET — through v96 Selenium 4.</description></item><item><title>TLC Meeting - March 2, 2022</title><link>https://www.selenium.dev/meetings/2022/tlc-03-02/</link><pubDate>Wed, 02 Mar 2022 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/meetings/2022/tlc-03-02/</guid><description>Meetings are happening on the #selenium-tlc channel on Selenium Slack.
Agenda Releases Any TLC member should be able to release any language, though ideally with agreement from language maintainer Process needs documentation — https://github.com/SeleniumHQ/selenium/wiki/Releasing-Selenium Proposal — Add personal accounts for TLC members to rubygems, pypi, nuget, maven/sonatype Chrome 99 has been released, so we need to do a patch release in JS, Python, Java(?), .NET Protocol Conversion Current code falls far short of what we&amp;rsquo;ve expected it is doing — https://github.</description></item><item><title>Locate your locators - Python bindings changes upcoming</title><link>https://www.selenium.dev/blog/2022/python-locators-se4/</link><pubDate>Tue, 01 Feb 2022 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2022/python-locators-se4/</guid><description>In real estate, the mantra for finding a new house or office space is &amp;ldquo;location, location, location!&amp;rdquo;. It could be said that when working with Selenium, a critical aspect of writing tests is &amp;ldquo;locators, locators, locators!&amp;rdquo;. Having a robust locator strategy - in your app under test and in your test framework - is highly important for effective testing.
If you are a Pythonista like myself and using Selenium for your test automation, then there are some important changes coming to how locators are defined and used.</description></item><item><title>TLC Meeting - January 19, 2022</title><link>https://www.selenium.dev/meetings/2022/tlc-01-19/</link><pubDate>Wed, 19 Jan 2022 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/meetings/2022/tlc-01-19/</guid><description>Meetings are happening on the #selenium-tlc channel on Selenium Slack.
Agenda Minor and patch versions. Ideally we want to include new features and bug fixes on minor versions, and use patch versions only for bug fixes. A scenario where feature parity is achieved across bindings for every minor release is desired. OperaDriver is not supporting W3C. We should probably delete all Opera classes from the bindings, given that Opera can be driven via the appropriately versioned ChromeDriver by specifying the location of the Opera browser.</description></item><item><title>IE Mode in Edge supported by IEDriver</title><link>https://www.selenium.dev/blog/2022/ie-edge-support/</link><pubDate>Tue, 18 Jan 2022 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2022/ie-edge-support/</guid><description>With the retirement of Internet Explorer 11 (IE 11) later this year, the folks in Redmond have helped the Selenium project with getting IE Mode in Microsoft Edge working in IEDriver.
IE 11 is due to retire on 15 June 2022 for certain versions of Windows 10. After this date, the Selenium project recommends that you test your IE sites with IE Mode in Microsoft Edge. The Selenium Project will not remove support for IE 11 when it retires but we will not actively fix issues as we have done with previous versions of IE.</description></item><item><title>TLC Meeting - December 08, 2021</title><link>https://www.selenium.dev/meetings/2021/tlc-12-08/</link><pubDate>Wed, 08 Dec 2021 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/meetings/2021/tlc-12-08/</guid><description>Meetings are held on the #selenium-tlc channel on Selenium Slack.
Agenda Check pending topics from previous meeting Open issues and PR that need attention Releases What do we want in 4.2.0 Documentation Conversation starter: What do we want in Selenium 5? Open issues and PR that need attention Several bug issues from Java that will need a release soon https://github.com/SeleniumHQ/selenium/issues/9803 https://github.com/SeleniumHQ/selenium/issues/10111 Releases What do we want in 4.2.0? Handling actions class methods - https://github.</description></item><item><title>Improving &amp; refining our Docs translations</title><link>https://www.selenium.dev/blog/2021/docs-translations/</link><pubDate>Fri, 03 Dec 2021 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2021/docs-translations/</guid><description>A while ago, we started to make the Selenium documentation available in more languages. This, in an effort to offer a more inclusive environment for Selenium users who do not have English as their mother tongue.
This effort grew organically, and we got many pull requests adding content for different languages. Over time, some translations got to a very good state, and others didn&amp;rsquo;t get much attention. This brought the situation where 9 different languages are available in the documentation, but only a few add value to the readers.</description></item><item><title>TLC Meeting - November 24, 2021</title><link>https://www.selenium.dev/meetings/2021/tlc-11-24/</link><pubDate>Wed, 24 Nov 2021 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/meetings/2021/tlc-11-24/</guid><description>Meetings are held on the #selenium-tlc channel on Selenium Slack.
Agenda Check pending topics from previous meeting Open issues and PR that need attention Releases How do we want to handle patches? E.g. 4.0.x Documentation Conversation starter: What do we want in Selenium 5? Open issues and PR that need attention Removal of legacy W3C endpoints in Python - https://github.com/SeleniumHQ/selenium/issues/10031 They will be removed from JavaScript and Python, but not Java.</description></item><item><title>TLC Meeting - November 10, 2021</title><link>https://www.selenium.dev/meetings/2021/tlc-11-10/</link><pubDate>Wed, 10 Nov 2021 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/meetings/2021/tlc-11-10/</guid><description>Meetings are held on the #selenium-tlc channel on Selenium Slack.
Agenda Check pending topics from previous meeting Releases What is left for 4.1.0? When do we want to release it? How do we want to handle patches? E.g. 4.0.x Open issues and PR that need attention Conversation starter: What do we want in Selenium 5? Documentation Releases What is left for 4.1.0? Chrome 96 CDP bindings need to be generated for all Selenium bindings Shadow DOM support via JS executor across bindings, issue 10019 Seems FirefoxDriver is not getting packaged when running tests as a jar, issue 10001 Troubleshooted by pujagani ✅ Documentation PR doing a reorg of the English docs, other languages will follow after the merge.</description></item><item><title>Stepping Down, Stepping Up</title><link>https://www.selenium.dev/blog/2021/stepping-down-stepping-up/</link><pubDate>Wed, 27 Oct 2021 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2021/stepping-down-stepping-up/</guid><description>The short version is that I&amp;rsquo;m stepping down as the Selenium project lead, and will concentrating on pushing WebDriver Bidi forwards. Fortunately, the Selenium TLC have already been steering the project for a while now, so it&amp;rsquo;s in excellent hands. With Selenium 4 now shipped, the project has a new energy and enthusiasm about it. The future is bright, and I&amp;rsquo;m looking forward to seeing what it holds.
The longer version?</description></item><item><title>TLC Meeting - October 27, 2021</title><link>https://www.selenium.dev/meetings/2021/tlc-10-27/</link><pubDate>Wed, 27 Oct 2021 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/meetings/2021/tlc-10-27/</guid><description>Meetings are held on the #selenium-tlc channel on Selenium Slack.
Agenda Welcome new TLC members Releases What do we want in 4.1.0? How do we want to handle patches? E.g. 4.0.x We have been already doing releases like 3.8.1, where it seems Java was released but not .NET. Open issues and PR that need attention Conversation starter: What do we want in Selenium 5? Welcome new TLC members The TLC has two new members: p0deje and pujagani.</description></item><item><title>A Tour of 4: New Commands</title><link>https://www.selenium.dev/blog/2021/a-tour-of-4-new-commands/</link><pubDate>Wed, 13 Oct 2021 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2021/a-tour-of-4-new-commands/</guid><description>Before we ship Selenium 4, I thought it would be nice to introduce some of the new features in-depth. Of course, all of the features we&amp;rsquo;re covering are in the main WebDriver documentation, so if you&amp;rsquo;re not one for reading blog posts, then feel free to dive in there!
You may well be familiar with how to start a Selenium server: you just do something like java -jar selenium-server-4.0.0.jar standalone and away you go!</description></item><item><title>Announcing Selenium 4</title><link>https://www.selenium.dev/blog/2021/announcing-selenium-4/</link><pubDate>Wed, 13 Oct 2021 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2021/announcing-selenium-4/</guid><description>It’s with very great pleasure that we are announcing the release of Selenium 4. This is available for Java, .Net, Python, Ruby, and Javascript. You can download it from your favourite package manager or right from GitHub!
If you’re already a Selenium user, this update should be as easy as just changing your dependency from 3.x to 4.0.0. We’ve worked hard to ensure that this is a “drop-in” upgrade, having focused on keeping the public APIs as stable as possible.</description></item><item><title>A Tour of 4: Authentication</title><link>https://www.selenium.dev/blog/2021/a-tour-of-4-authentication/</link><pubDate>Sun, 10 Oct 2021 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2021/a-tour-of-4-authentication/</guid><description>Before we ship Selenium 4, I thought it would be nice to introduce some of the new features in-depth. Of course, all of the features we&amp;rsquo;re covering are in the main WebDriver documentation, so if you&amp;rsquo;re not one for reading blog posts, then feel free to dive in there!
The first thing I&amp;rsquo;d like to introduce you to is Selenium 4&amp;rsquo;s new-found ability to authenticate to websites. We&amp;rsquo;ve always been able to handle &amp;ldquo;form-based&amp;rdquo; authentication, where a login page has some INPUT elements that you need to enter the user name and password, but handling sites that use basic or digest authentication has always been harder.</description></item><item><title>Selenium 4 Release Candidate 2</title><link>https://www.selenium.dev/blog/2021/selenium-4-rc-2/</link><pubDate>Sat, 02 Oct 2021 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2021/selenium-4-rc-2/</guid><description>We&amp;rsquo;ve listeneed and responded to the feedback from the first release candidate of Selenium 4, and we&amp;rsquo;re now happy to announce the second release candidate of Selenium 4. This is shipping for .Net, Java, Python, Ruby, and Javascript, and it&amp;rsquo;s available from all the popular package managers. Go! Try it out!
Unless we encounter a very serious issue or bug, this is likely to be the last release before we push Selenium 4.</description></item><item><title>Selenium 4 Release Candidate</title><link>https://www.selenium.dev/blog/2021/selenium-4-rc-1/</link><pubDate>Mon, 06 Sep 2021 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2021/selenium-4-rc-1/</guid><description>We&amp;rsquo;re very happy to announce the first release candidate of Selenium 4. We&amp;rsquo;re shipping this for .Net, Java, Python, Ruby, and JavaScript, so if you&amp;rsquo;re using any of those languages, go and grab it from your package manager of choice!
This release is the result of a lot of work by the Selenium team project, but most importantly, all the Selenium community who tried our beta releases, and gave us great and valuable feedback.</description></item><item><title>All Selenium downloads are now available on GitHub releases</title><link>https://www.selenium.dev/blog/2021/downloads-now-on-github-releases/</link><pubDate>Tue, 24 Aug 2021 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2021/downloads-now-on-github-releases/</guid><description>We announced on a previous entry our decision to move all binaries from Google Storage to GitHub releases. Today, we would like to announce that this work has been completed and all binaries are also available to be downloaded in each one of the releases we have done in GitHub.
In addition to that, all links on our downloads page have been updated, as well as all references to Google Storage in the Selenium code base.</description></item><item><title>Selenium downloads will move to GitHub releases</title><link>https://www.selenium.dev/blog/2021/downloads-moving-to-github-releases/</link><pubDate>Thu, 19 Aug 2021 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2021/downloads-moving-to-github-releases/</guid><description>Thanks to Google, Google Storage has been the central place where we have been able to upload all binaries created for each Selenium release, and the place where the Selenium community can download them from. To do so, all people needed to do was visit our downloads page, find the release, and download from there!
The Selenium project hosts its source code on GitHub, and people who are familiar with GitHub know that they can go to the &amp;ldquo;release&amp;rdquo; page there to find any downloads for each release of a project.</description></item><item><title>The Selenium website has a new look!</title><link>https://www.selenium.dev/blog/2021/new-look-for-selenium-site/</link><pubDate>Mon, 09 Aug 2021 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2021/new-look-for-selenium-site/</guid><description>We have been working hard during the last few weeks redoing our website. Today, we are very happy to share it with the community and we are hoping to get as much feedback as possible!
We did a major revamp to our website two years ago. However, this revamp had some &amp;ldquo;technical debt&amp;rdquo; in it&amp;hellip;
We&amp;#39;re happy to announce that we have (finally!) refreshed our site. Head on over to https://t.</description></item><item><title>Public Project Meeting - July 15, 2021</title><link>https://www.selenium.dev/blog/2021/public-project-meeting-20210715/</link><pubDate>Thu, 15 Jul 2021 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2021/public-project-meeting-20210715/</guid><description>Archived meeting minutes All meeting minutes can now be found here. &amp;times; Continuing the series of bi-weekly public project meetings, here is the timeline of the meeting held on July 15, 2021,5:30 PM CET. (Below times are on IST)
Meetings are held on the #selenium-tlc channel on Selenium Slack.
Diego Molina 9:00 PM
Here is the agenda proposal:
General project statistics Previous meeting: 170 open issues, 23 open pull requests</description></item><item><title>Public Project Meeting - July 15, 2021</title><link>https://www.selenium.dev/meetings/2021/public-project-meeting-20210715/</link><pubDate>Thu, 15 Jul 2021 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/meetings/2021/public-project-meeting-20210715/</guid><description>Continuing the series of bi-weekly public project meetings, here is the timeline of the meeting held on July 15, 2021,5:30 PM CET. (Below times are on IST)
Meetings are held on the #selenium-tlc channel on Selenium Slack.
Diego Molina 9:00 PM
Here is the agenda proposal:
General project statistics Previous meeting: 170 open issues, 23 open pull requests
Currently: 168 open issues, 25 open pull requests
Pending work for the RC 1?</description></item><item><title>Public Project Meeting - June 17, 2021</title><link>https://www.selenium.dev/blog/2021/public-project-meeting-20210617/</link><pubDate>Thu, 17 Jun 2021 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2021/public-project-meeting-20210617/</guid><description>Archived meeting minutes All meeting minutes can now be found here. &amp;times; Continuing the series of bi-weekly public project meetings, here is the timeline of the meeting held on June 17, 2021,5:30 PM CET. (Below times are on IST)
Meetings are held on the #selenium-tlc channel on Selenium Slack.
Diego Molina 8:52 PM
Here is the proposed agenda:
General project statistics Previous meeting: 167 open issues, 28 open pull requests Currently: 170 open issues, 23 open pull requests Pending work for the RC 1?</description></item><item><title>Public Project Meeting - June 17, 2021</title><link>https://www.selenium.dev/meetings/2021/public-project-meeting-20210617/</link><pubDate>Thu, 17 Jun 2021 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/meetings/2021/public-project-meeting-20210617/</guid><description>Continuing the series of bi-weekly public project meetings, here is the timeline of the meeting held on June 17, 2021,5:30 PM CET. (Below times are on IST)
Meetings are held on the #selenium-tlc channel on Selenium Slack.
Diego Molina 8:52 PM
Here is the proposed agenda:
General project statistics Previous meeting: 167 open issues, 28 open pull requests Currently: 170 open issues, 23 open pull requests Pending work for the RC 1?</description></item><item><title>Public Project Meeting - June 03, 2021</title><link>https://www.selenium.dev/blog/2021/public-project-meeting-20210603/</link><pubDate>Thu, 03 Jun 2021 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2021/public-project-meeting-20210603/</guid><description>Archived meeting minutes All meeting minutes can now be found here. &amp;times; Continuing the series of bi-weekly public project meetings, here is the timeline of the meeting held on June 03, 2021,5:30 PM CET. (Below times are on IST)
Meetings are held on the #selenium-tlc channel on Selenium Slack.
Diego Molina 9:01 PM
:wave: Anyone around for our public meeting? @barancev @manoj9788 @mmerrell @simonstewart @harsha509 @Puja Jagani @AutomatedTester @titusfortner @p0deje @jimevans</description></item><item><title>Public Project Meeting - June 03, 2021</title><link>https://www.selenium.dev/meetings/2021/public-project-meeting-20210603/</link><pubDate>Thu, 03 Jun 2021 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/meetings/2021/public-project-meeting-20210603/</guid><description>Continuing the series of bi-weekly public project meetings, here is the timeline of the meeting held on June 03, 2021,5:30 PM CET. (Below times are on IST)
Meetings are held on the #selenium-tlc channel on Selenium Slack.
Diego Molina 9:01 PM
:wave: Anyone around for our public meeting? @barancev @manoj9788 @mmerrell @simonstewart @harsha509 @Puja Jagani @AutomatedTester @titusfortner @p0deje @jimevans
9:02 PM
Let me post our ongoing agenda
General project statistics Previous meeting: 161 open issues, 25 open pull requests Currently: 167 open issues, 28 open pull requests Pending work for the Beta 4?</description></item><item><title>IRC channels are moving to Libera.chat</title><link>https://www.selenium.dev/blog/2021/moving-to-libera-chat/</link><pubDate>Thu, 20 May 2021 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2021/moving-to-libera-chat/</guid><description>Yesterday, 19 May 2021, all the staff of Freenode, the IRC network, collectively resigned as staff because of what they felt was a hostile takeover.
Freenode has always been seen as the home of Free and Open Software, so it was natural that you could find us on the #selenium channel there. To maintain this openness, and inclusivity, we are moving our IRC Channel over to Libera.chat. It is has been created by the team that previously maintained Freenode.</description></item><item><title>Public Project Meeting - May 20, 2021</title><link>https://www.selenium.dev/blog/2021/public-project-meeting-20210520/</link><pubDate>Thu, 20 May 2021 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2021/public-project-meeting-20210520/</guid><description>Archived meeting minutes All meeting minutes can now be found here. &amp;times; Continuing the series of bi-weekly public project meetings, here is the timeline of the meeting held on May 20, 2021,5:30 PM CET. (Below times are on IST)
Meetings are held on the #selenium-tlc channel on Selenium Slack.
Simon Stewart 9:00 PM
@AutomatedTester, @p0deje @titusfortner, @harsha509 @Puja Jagani @barancev @jimevans @Todd Tarsi and anyone else who&amp;rsquo;s interested, come on down!</description></item><item><title>Public Project Meeting - May 20, 2021</title><link>https://www.selenium.dev/meetings/2021/public-project-meeting-20210520/</link><pubDate>Thu, 20 May 2021 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/meetings/2021/public-project-meeting-20210520/</guid><description>Continuing the series of bi-weekly public project meetings, here is the timeline of the meeting held on May 20, 2021,5:30 PM CET. (Below times are on IST)
Meetings are held on the #selenium-tlc channel on Selenium Slack.
Simon Stewart 9:00 PM
@AutomatedTester, @p0deje @titusfortner, @harsha509 @Puja Jagani @barancev @jimevans @Todd Tarsi and anyone else who&amp;rsquo;s interested, come on down!
9:00 PM
Any agenda items?
Diego Molina 9:00 PM
I can paste the ongoing agenda and leave you to it :slightly_smiling_face:</description></item><item><title>Public Project Meeting - May 06, 2021</title><link>https://www.selenium.dev/blog/2021/public-project-meeting-20210506/</link><pubDate>Thu, 06 May 2021 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2021/public-project-meeting-20210506/</guid><description>Archived meeting minutes All meeting minutes can now be found here. &amp;times; Continuing the series of bi-weekly public project meetings, here is the timeline of the meeting held on May 06, 2021,5:30 PM CET. (Below times are on IST)
Meetings are held on the #selenium-tlc channel on Selenium Slack.
Simon Stewart 9:01 PM
Alright then. It&amp;rsquo;s time
9:02
@AutomatedTester, @titusfortner @p0deje, @jimevans, @harsha509, @barancev, @Puja Jagani, and @diemol (plus anyone else who&amp;rsquo;s interested)</description></item><item><title>Public Project Meeting - May 06, 2021</title><link>https://www.selenium.dev/meetings/2021/public-project-meeting-20210506/</link><pubDate>Thu, 06 May 2021 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/meetings/2021/public-project-meeting-20210506/</guid><description>Continuing the series of bi-weekly public project meetings, here is the timeline of the meeting held on May 06, 2021,5:30 PM CET. (Below times are on IST)
Meetings are held on the #selenium-tlc channel on Selenium Slack.
Simon Stewart 9:01 PM
Alright then. It&amp;rsquo;s time
9:02
@AutomatedTester, @titusfortner @p0deje, @jimevans, @harsha509, @barancev, @Puja Jagani, and @diemol (plus anyone else who&amp;rsquo;s interested)
Let&amp;rsquo;s get the show on the road
9:02 PM</description></item><item><title>Observability in Selenium 4</title><link>https://www.selenium.dev/blog/2021/selenium-4-observability/</link><pubDate>Mon, 26 Apr 2021 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2021/selenium-4-observability/</guid><description>Diagnosing problems when the Selenium server isn&amp;rsquo;t working has never been easy. With Selenium 4, we have integrated OpenTelemetry to help you troubleshoot issues, optimize performance, and provide visibility into the system. By making the Selenium server observable, we are putting more power into your hands.
Need for Observability Selenium server enables distributed testing. Instead of running the browsers for tests locally, the tests use a remote browser driver that points to a server.</description></item><item><title>Public Project Meeting - April 22, 2021</title><link>https://www.selenium.dev/blog/2021/public-project-meeting-20210422/</link><pubDate>Thu, 22 Apr 2021 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2021/public-project-meeting-20210422/</guid><description>Archived meeting minutes All meeting minutes can now be found here. &amp;times; Continuing the series of bi-weekly public project meetings, here is the timeline of the meeting held on April 22, 2021,5:30 PM CET. (Below times are on IST)
Meetings are held on the #selenium-tlc channel on Selenium Slack.
Diego Molina 9:02 PM
pinging @simonstewart @AutomatedTester @harsha509 @Puja Jagani @jimevans @barancev @manoj9788 @mmerrell @titusfortner @p0deje
Simon Stewart 9:02 PM</description></item><item><title>Public Project Meeting - April 22, 2021</title><link>https://www.selenium.dev/meetings/2021/public-project-meeting-20210422/</link><pubDate>Thu, 22 Apr 2021 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/meetings/2021/public-project-meeting-20210422/</guid><description>Continuing the series of bi-weekly public project meetings, here is the timeline of the meeting held on April 22, 2021,5:30 PM CET. (Below times are on IST)
Meetings are held on the #selenium-tlc channel on Selenium Slack.
Diego Molina 9:02 PM
pinging @simonstewart @AutomatedTester @harsha509 @Puja Jagani @jimevans @barancev @manoj9788 @mmerrell @titusfortner @p0deje
Simon Stewart 9:02 PM
I&amp;rsquo;m going to be at SauceCon
9:02 PM
Things I want for beta 4:</description></item><item><title>Public Project Meeting - April 08, 2021</title><link>https://www.selenium.dev/blog/2021/public-project-meeting-20210408/</link><pubDate>Thu, 08 Apr 2021 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2021/public-project-meeting-20210408/</guid><description>Archived meeting minutes All meeting minutes can now be found here. &amp;times; Continuing the series of bi-weekly public project meetings, here is the timeline of the meeting held on April 08, 2021,5:30 PM CET. (Below times are on IST)
Meetings are held on the #selenium-tlc channel on Selenium Slack.
Diego Molina 8:59 PM
Ok, proposed agenda is:
General project statistics Stuff implemented/fixed in the last two weeks Pending work that needs to be done for the third Beta?</description></item><item><title>Public Project Meeting - April 08, 2021</title><link>https://www.selenium.dev/meetings/2021/public-project-meeting-20210408/</link><pubDate>Thu, 08 Apr 2021 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/meetings/2021/public-project-meeting-20210408/</guid><description>Continuing the series of bi-weekly public project meetings, here is the timeline of the meeting held on April 08, 2021,5:30 PM CET. (Below times are on IST)
Meetings are held on the #selenium-tlc channel on Selenium Slack.
Diego Molina 8:59 PM
Ok, proposed agenda is:
General project statistics Stuff implemented/fixed in the last two weeks Pending work that needs to be done for the third Beta? PRs that need to be reviewed please feel free to add any other topics</description></item><item><title>Public Project Meeting - March 25, 2021</title><link>https://www.selenium.dev/blog/2021/public-project-meeting-20210325/</link><pubDate>Thu, 25 Mar 2021 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2021/public-project-meeting-20210325/</guid><description>Archived meeting minutes All meeting minutes can now be found here. &amp;times; Continuing the series of bi-weekly public project meetings, here is the timeline of the meeting held on March 25, 2021,5:30 PM CET. (Below times are on IST)
Meetings are held on the #selenium-tlc channel on Selenium Slack.
Diego Molina 9:54 PM
Agenda for the public meeting:
General project statistics Pending work that needs to be done for the third Beta?</description></item><item><title>Public Project Meeting - March 25, 2021</title><link>https://www.selenium.dev/meetings/2021/public-project-meeting-20210325/</link><pubDate>Thu, 25 Mar 2021 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/meetings/2021/public-project-meeting-20210325/</guid><description>Continuing the series of bi-weekly public project meetings, here is the timeline of the meeting held on March 25, 2021,5:30 PM CET. (Below times are on IST)
Meetings are held on the #selenium-tlc channel on Selenium Slack.
Diego Molina 9:54 PM
Agenda for the public meeting:
General project statistics Pending work that needs to be done for the third Beta? CoC, next steps? Please feel free to add any other topics</description></item><item><title>Public Project Meeting - March 11, 2021</title><link>https://www.selenium.dev/blog/2021/public-project-meeting-20210311/</link><pubDate>Thu, 11 Mar 2021 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2021/public-project-meeting-20210311/</guid><description>Archived meeting minutes All meeting minutes can now be found here. &amp;times; Continuing the series of bi-weekly public project meetings, here is the timeline of the meeting held on March 11, 2021,5:30 PM CET. (Below times are on IST)
Meetings are held on the #selenium-tlc channel on Selenium Slack.
Diego Molina 9:59 PM
Hopefully it will be a brief one :slightly_smiling_face: pinging folks for the public project meeting… @AutomatedTester @harsha509 @titusfortner @mmerrell @jimevans @simonstewart @barancev @luke</description></item><item><title>Public Project Meeting - March 11, 2021</title><link>https://www.selenium.dev/meetings/2021/public-project-meeting-20210311/</link><pubDate>Thu, 11 Mar 2021 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/meetings/2021/public-project-meeting-20210311/</guid><description>Continuing the series of bi-weekly public project meetings, here is the timeline of the meeting held on March 11, 2021,5:30 PM CET. (Below times are on IST)
Meetings are held on the #selenium-tlc channel on Selenium Slack.
Diego Molina 9:59 PM
Hopefully it will be a brief one :slightly_smiling_face: pinging folks for the public project meeting… @AutomatedTester @harsha509 @titusfortner @mmerrell @jimevans @simonstewart @barancev @luke
10:01
Agenda for today:
General project statistics Anything new to report from the last PLC/SFC call?</description></item><item><title>Public Project Meeting - February 25, 2021</title><link>https://www.selenium.dev/blog/2021/public-project-meeting-20210225/</link><pubDate>Thu, 25 Feb 2021 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2021/public-project-meeting-20210225/</guid><description>Archived meeting minutes All meeting minutes can now be found here. &amp;times; Continuing the series of bi-weekly public project meetings, here is the timeline of the meeting held on February 25, 2021,5:30 PM CET. (Below times are on IST)
Meetings are held on the #selenium-tlc channel on Selenium Slack.
Diego Molina 9:54 PM
@titusfortner @barancev @harsha509 @luke @jimevans @simonstewart
Luke Hill 9:54 PM
Yip. I&amp;rsquo;m here if needed.
Diego Molina 9:55 PM</description></item><item><title>Public Project Meeting - February 25, 2021</title><link>https://www.selenium.dev/meetings/2021/public-project-meeting-20210225/</link><pubDate>Thu, 25 Feb 2021 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/meetings/2021/public-project-meeting-20210225/</guid><description>Continuing the series of bi-weekly public project meetings, here is the timeline of the meeting held on February 25, 2021,5:30 PM CET. (Below times are on IST)
Meetings are held on the #selenium-tlc channel on Selenium Slack.
Diego Molina 9:54 PM
@titusfortner @barancev @harsha509 @luke @jimevans @simonstewart
Luke Hill 9:54 PM
Yip. I&amp;rsquo;m here if needed.
Diego Molina 9:55 PM
The only topic I have today, to make it a short meeting, is: “what is needed for beta 2” Feel free to add/propose any other topics</description></item><item><title>Selenium 4 Beta 1 Released</title><link>https://www.selenium.dev/blog/2021/selenium-4-beta-1/</link><pubDate>Mon, 15 Feb 2021 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2021/selenium-4-beta-1/</guid><description>We&amp;rsquo;re very happy to announce the release of the first beta of Selenium 4. We&amp;rsquo;re shipping this for Java, .Net, Python, Ruby, and JavaScript, so if you&amp;rsquo;re using any of those languages, go and grab it from your package manager of choice!
This has been the culmination of a lot of work by so many people, not only the project TLC, but also of literally hundreds of people: 205 since we released Selenium 3.</description></item><item><title>Public Project Meeting - February 11, 2021</title><link>https://www.selenium.dev/blog/2021/public-project-meeting-20210211/</link><pubDate>Thu, 11 Feb 2021 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2021/public-project-meeting-20210211/</guid><description>Archived meeting minutes All meeting minutes can now be found here. &amp;times; Continuing the series of bi-weekly public project meetings, here is the timeline of the meeting held on February 11, 2021,5:30 PM CET. (Below times are on CET)
Meetings are held on the #selenium-tlc channel on Selenium Slack.
Diego Molina 5:31 PM
Agenda for today:
General project statistics (Previous meeting: 252 open issues, 35 open PRs, Current: 234, 32 PRs) Anything new to report from the last PLC/SFC call?</description></item><item><title>Public Project Meeting - February 11, 2021</title><link>https://www.selenium.dev/meetings/2021/public-project-meeting-20210211/</link><pubDate>Thu, 11 Feb 2021 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/meetings/2021/public-project-meeting-20210211/</guid><description>Continuing the series of bi-weekly public project meetings, here is the timeline of the meeting held on February 11, 2021,5:30 PM CET. (Below times are on CET)
Meetings are held on the #selenium-tlc channel on Selenium Slack.
Diego Molina 5:31 PM
Agenda for today:
General project statistics (Previous meeting: 252 open issues, 35 open PRs, Current: 234, 32 PRs) Anything new to report from the last PLC/SFC call? Overall announcements? New people on committees, with the commit bit, etc?</description></item><item><title>New Tricks in Selenium 4</title><link>https://www.selenium.dev/blog/2021/what-is-coming-in-selenium-4-the-new-selenium-grid/</link><pubDate>Fri, 05 Feb 2021 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2021/what-is-coming-in-selenium-4-the-new-selenium-grid/</guid><description>In the fourth and final post in his series, Simon Stewart continues talking about what&amp;rsquo;s coming in Selenium 4 and reviews what&amp;rsquo;s new in the Selenium Grid.
We’ve covered a lot of ground in the past few blog posts, including how to contribute to the project, and some details of what you can expect as a Selenium user. But there’s more to Selenium than just the APIs you use to write your tests, and one of the big features we’ve not covered yet is the refreshed Selenium Grid: a mechanism that allows you to distribute your tests across a fleet of machines.</description></item><item><title>Public Project Meeting - January 28, 2021</title><link>https://www.selenium.dev/blog/2021/public-project-meeting-20210128/</link><pubDate>Thu, 28 Jan 2021 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2021/public-project-meeting-20210128/</guid><description>Archived meeting minutes All meeting minutes can now be found here. &amp;times; Continuing the series of bi-weekly public project meetings, here is the timeline of the meeting held on January 28, 2021,5:30 PM CET.(Below times are on IST)
Meetings are held on the #selenium-tlc channel on Selenium Slack.
Diego Molina 9:17 PM
Yes, here is the short agenda:
General project statistics (Previous meeting: 262 open issues, 54 open PRs, Current: 252, 35 PRs) Overall announcements?</description></item><item><title>Public Project Meeting - January 28, 2021</title><link>https://www.selenium.dev/meetings/2021/public-project-meeting-20210128/</link><pubDate>Thu, 28 Jan 2021 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/meetings/2021/public-project-meeting-20210128/</guid><description>Continuing the series of bi-weekly public project meetings, here is the timeline of the meeting held on January 28, 2021,5:30 PM CET.(Below times are on IST)
Meetings are held on the #selenium-tlc channel on Selenium Slack.
Diego Molina 9:17 PM
Yes, here is the short agenda:
General project statistics (Previous meeting: 262 open issues, 54 open PRs, Current: 252, 35 PRs) Overall announcements? New people on committees, with the commit bit, etc?</description></item><item><title>Public Project Meeting - January 14, 2021</title><link>https://www.selenium.dev/blog/2021/public-project-meeting-20210114/</link><pubDate>Thu, 14 Jan 2021 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2021/public-project-meeting-20210114/</guid><description>Archived meeting minutes All meeting minutes can now be found here. &amp;times; Continuing the series of bi-weekly public project meetings, here is the timeline of the meeting held on January 14, 2021,5:30 PM CET.(Below times are on IST)
Meetings are held on the #selenium-tlc channel on Selenium Slack.
Diego Molina 10:02 PM
Alright, :wave: everyone, let me share the agenda
10:02 PM
Overall announcements? New people on committees, with the commit bit, etc?</description></item><item><title>Public Project Meeting - January 14, 2021</title><link>https://www.selenium.dev/meetings/2021/public-project-meeting-20210114/</link><pubDate>Thu, 14 Jan 2021 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/meetings/2021/public-project-meeting-20210114/</guid><description>Continuing the series of bi-weekly public project meetings, here is the timeline of the meeting held on January 14, 2021,5:30 PM CET.(Below times are on IST)
Meetings are held on the #selenium-tlc channel on Selenium Slack.
Diego Molina 10:02 PM
Alright, :wave: everyone, let me share the agenda
10:02 PM
Overall announcements? New people on committees, with the commit bit, etc? Anything new to report from the last PLC/SFC call? Pending work that needs to be done for the first Beta?</description></item><item><title>Results of the first ever selenium survey</title><link>https://www.selenium.dev/blog/2021/selenium-survey-results/</link><pubDate>Tue, 12 Jan 2021 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2021/selenium-survey-results/</guid><description>Below is a summary of the Selenium survey that was collected.
Batteries included Browser Management Unsurprisingly, people find having to manage browsers a task they wish they didn’t have to do and wish that Selenium did this. 59.5% of respondents want Selenium to manage the browsers for them. This, though the question didn’t ask this, is to include the browser drivers.
Frameworks The results show an interesting view into framework usage.</description></item><item><title>New Tricks in Selenium 4</title><link>https://www.selenium.dev/blog/2020/what-is-coming-in-selenium-4-new-tricks/</link><pubDate>Wed, 16 Dec 2020 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2020/what-is-coming-in-selenium-4-new-tricks/</guid><description>In the third post in his series, Simon Stewart continues talking about what&amp;rsquo;s coming in Selenium 4 and reviews some of the tricks in the new release.
In my last posts, we talked about how to contribute to Selenium, and why we’re bumping the version number to 4. That’s enough preamble! Today, we’ll cover some details about the new tricks and capabilities that Selenium 4 offers.
Finding Elements, and Relative Locators You know, finding elements on a page can be really difficult.</description></item><item><title>Public Project Meeting - December 03, 2020</title><link>https://www.selenium.dev/blog/2020/public-project-meeting-20201203/</link><pubDate>Thu, 03 Dec 2020 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2020/public-project-meeting-20201203/</guid><description>Archived meeting minutes All meeting minutes can now be found here. &amp;times; Continuing the series of bi-weekly public project meetings, here is the timeline of the meeting held on December 03, 2020,5:30 PM CET.
Meetings are held on the #selenium-tlc channel on Selenium Slack.
Diego Molina 5:32 PM
So, things from the previous meeting
General project statistics
Previous meeting: 280 open issues, 62 open PRs Current: 278, 60 PRs Diego Molina 5:35 PM</description></item><item><title>Public Project Meeting - December 03, 2020</title><link>https://www.selenium.dev/meetings/2020/public-project-meeting-20201203/</link><pubDate>Thu, 03 Dec 2020 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/meetings/2020/public-project-meeting-20201203/</guid><description>Continuing the series of bi-weekly public project meetings, here is the timeline of the meeting held on December 03, 2020,5:30 PM CET.
Meetings are held on the #selenium-tlc channel on Selenium Slack.
Diego Molina 5:32 PM
So, things from the previous meeting
General project statistics
Previous meeting: 280 open issues, 62 open PRs Current: 278, 60 PRs Diego Molina 5:35 PM
here are the topics that we initially cover today:</description></item><item><title>Public Project Meeting - November 19, 2020</title><link>https://www.selenium.dev/blog/2020/public-project-meeting-20201119/</link><pubDate>Thu, 19 Nov 2020 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2020/public-project-meeting-20201119/</guid><description>Archived meeting minutes All meeting minutes can now be found here. &amp;times; Continuing the series of bi-weekly public project meetings, here is the timeline of the meeting held on November 19, 2020 (times are on IST).
Meetings are held on the #selenium-tlc channel on Selenium Slack.
The next meeting will be on December 03, 2020,5:30 PM CET.
Simon Stewart 9:53 PM
@diemol are you running today’s status update?
Diego Molina 9:55 PM</description></item><item><title>Public Project Meeting - November 19, 2020</title><link>https://www.selenium.dev/meetings/2020/public-project-meeting-20201119/</link><pubDate>Thu, 19 Nov 2020 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/meetings/2020/public-project-meeting-20201119/</guid><description>Continuing the series of bi-weekly public project meetings, here is the timeline of the meeting held on November 19, 2020 (times are on IST).
Meetings are held on the #selenium-tlc channel on Selenium Slack.
The next meeting will be on December 03, 2020,5:30 PM CET.
Simon Stewart 9:53 PM
@diemol are you running today’s status update?
Diego Molina 9:55 PM
I can do that I always forget because the event has no notifications</description></item><item><title>What’s Coming in Selenium 4: Why The Major Version Bump?</title><link>https://www.selenium.dev/blog/2020/what-is-coming-in-selenium-4-why-the-major-version-bump/</link><pubDate>Tue, 10 Nov 2020 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2020/what-is-coming-in-selenium-4-why-the-major-version-bump/</guid><description>In the second post in this series, Simon Stewart continues talking about what&amp;rsquo;s coming in Selenium 4 and why this release has a major version bump.
In my last post, I shared a bit about how the Selenium project works overall. Now, let’s start talking about Selenium 4 and what’s coming. One thing I think I should clear up is &amp;ldquo;why the major version number bump?&amp;rdquo;
Sometimes I joke that the major reason for the version number bump is that while the digits of Pi are infinite, when we went from 3.</description></item><item><title>What’s Coming in Selenium 4: How Can I Contribute?</title><link>https://www.selenium.dev/blog/2020/what-is-coming-in-selenium-4-how-can-i-contribute/</link><pubDate>Mon, 02 Nov 2020 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2020/what-is-coming-in-selenium-4-how-can-i-contribute/</guid><description>In this new blog series all about the upcoming release of Selenium 4, Simon Stewart will cover how the Selenium project works, who is involved, how you can get involved, and a sneak peek at what’s new in Selenium 4.
As the lead of the Selenium project, I wanted to kick off a new blog series leading up to the release of Selenium 4. During this series, I’ll talk all about how the Selenium project works, who is involved, how you—yes, you!</description></item><item><title>Browser Testing and Tools WG Meeting @ TPAC 2020</title><link>https://www.selenium.dev/blog/2020/webdriver-tpac-meeting-2020/</link><pubDate>Thu, 29 Oct 2020 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2020/webdriver-tpac-meeting-2020/</guid><description>It&amp;rsquo;s that time of the year where working groups from the W3C meet up to discuss the various standards that are being worked on.
Within the Browser Testing and Tools Working Group, there are 2 different standards.
We have:
WebDriver WebDriver-Bidi The first is what is commonly supported by the Selenium Project and has support from Apple, Mozilla, Microsoft, and Google in their browsers. It is also supported by various Selenium in the cloud providers like Sauce Labs and BrowserStack.</description></item><item><title>Public Project Meeting - October 08, 2020</title><link>https://www.selenium.dev/blog/2020/public-project-meeting-20201008/</link><pubDate>Thu, 08 Oct 2020 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2020/public-project-meeting-20201008/</guid><description>Archived meeting minutes All meeting minutes can now be found here. &amp;times; Continuing the series of bi-weekly public project meetings, here is the timeline of the meeting held on October 08, 2020 (times are on IST).
Meetings are held on the #selenium-tlc channel on Selenium Slack.
The next meeting will be on October 22, 2020,5:30 PM CET.
Diego Molina 9:03 PM
Perhaps the main topics to discuss are these ones: Anything new to report from the last PLC/SFC call?</description></item><item><title>Public Project Meeting - October 08, 2020</title><link>https://www.selenium.dev/meetings/2020/public-project-meeting-20201008/</link><pubDate>Thu, 08 Oct 2020 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/meetings/2020/public-project-meeting-20201008/</guid><description>Continuing the series of bi-weekly public project meetings, here is the timeline of the meeting held on October 08, 2020 (times are on IST).
Meetings are held on the #selenium-tlc channel on Selenium Slack.
The next meeting will be on October 22, 2020,5:30 PM CET.
Diego Molina 9:03 PM
Perhaps the main topics to discuss are these ones: Anything new to report from the last PLC/SFC call? Pending work that needs to be done for Alpha 7?</description></item><item><title>SeleniumConf Virtual 2020 Recap</title><link>https://www.selenium.dev/blog/2020/selenium-conf-2020-recap/</link><pubDate>Wed, 30 Sep 2020 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2020/selenium-conf-2020-recap/</guid><description>This year the Selenium Conference was held virtually, and despite that, the conference was again that exciting place where the Selenium community meets every year to share and learn about the most popular browser automation tool in the world. The conference offered talks about improved testing practices, new tools to simplify the setup of automated tests, the future of Selenium, and lots of learnings from speakers who shared their use cases and practical advice for how they use Selenium at work.</description></item><item><title>Public Project Meeting - September 24, 2020</title><link>https://www.selenium.dev/blog/2020/public-project-meeting-20200924/</link><pubDate>Thu, 24 Sep 2020 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2020/public-project-meeting-20200924/</guid><description>Archived meeting minutes All meeting minutes can now be found here. &amp;times; Continuing the series of bi-weekly public project meetings, here is the timeline of the meeting held on September 24, 2020 (times are on IST).
Meetings are held on the #selenium-tlc channel on Selenium Slack.
The next meeting will be on October 09, 2020, 4:30 PM CET.
Diego Molina 9:00 PM
So this is the proposed agenda, and @AutomatedTester has some more topics: General project statistics</description></item><item><title>Public Project Meeting - September 24, 2020</title><link>https://www.selenium.dev/meetings/2020/public-project-meeting-20200924/</link><pubDate>Thu, 24 Sep 2020 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/meetings/2020/public-project-meeting-20200924/</guid><description>Continuing the series of bi-weekly public project meetings, here is the timeline of the meeting held on September 24, 2020 (times are on IST).
Meetings are held on the #selenium-tlc channel on Selenium Slack.
The next meeting will be on October 09, 2020, 4:30 PM CET.
Diego Molina 9:00 PM
So this is the proposed agenda, and @AutomatedTester has some more topics: General project statistics
Previous meeting: 334 open issues, 63 open PRs Current: 281, 61 PRs Overall announcements?</description></item><item><title>How to delete your master branch</title><link>https://www.selenium.dev/blog/2020/how_to_delete_your_master_branch/</link><pubDate>Thu, 27 Aug 2020 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2020/how_to_delete_your_master_branch/</guid><description>At the Selenium project we practice trunk based development, in which trunk is the usual name of the default git branch of the repository. However, when the project was moved to GitHub, the repository followed the traditional use of master as a name for the default git branch.
With the intention of making the Selenium project an even more inclusive place where everyone is welcome, a decision was made to use trunk as the default git branch and, after the switch, delete the master branch.</description></item><item><title>Public Project Meeting - August 13, 2020</title><link>https://www.selenium.dev/blog/2020/public-project-meeting-20200813/</link><pubDate>Thu, 13 Aug 2020 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2020/public-project-meeting-20200813/</guid><description>Archived meeting minutes All meeting minutes can now be found here. &amp;times; Continuing the series of bi-weekly public project meetings, here is the timeline of the meeting held on August 13, 2020 (times are on IST).
Meetings are held on the #selenium-tlc channel on Selenium Slack.
The next meeting will be on August 27, 2020, 4:30 PM CET.
Diego Molina 7:58 PM :wave:
Here is the agenda for today General project statistics (Previous meeting: 338 open issues, 73 open PRs) Overall announcements?</description></item><item><title>Public Project Meeting - August 13, 2020</title><link>https://www.selenium.dev/meetings/2020/public-project-meeting-20200813/</link><pubDate>Thu, 13 Aug 2020 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/meetings/2020/public-project-meeting-20200813/</guid><description>Continuing the series of bi-weekly public project meetings, here is the timeline of the meeting held on August 13, 2020 (times are on IST).
Meetings are held on the #selenium-tlc channel on Selenium Slack.
The next meeting will be on August 27, 2020, 4:30 PM CET.
Diego Molina 7:58 PM :wave:
Here is the agenda for today General project statistics (Previous meeting: 338 open issues, 73 open PRs) Overall announcements? New people on committees, with the commit bit, etc?</description></item><item><title>Public Project Meeting - July 02, 2020</title><link>https://www.selenium.dev/blog/2020/public-project-meeting-20200702/</link><pubDate>Thu, 02 Jul 2020 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2020/public-project-meeting-20200702/</guid><description>Archived meeting minutes All meeting minutes can now be found here. &amp;times; Continuing the series of bi-weekly public project meetings, here is the timeline of the meeting held on July 02, 2020 (times are on IST).
Meetings are held on the #selenium-tlc channel on Selenium Slack.
The next meeting will be on July 16, 2020, 4:30 PM CET.
Diego Molina 8:00 PM
Hi all, who is in for the Public Project meeting?</description></item><item><title>Public Project Meeting - July 02, 2020</title><link>https://www.selenium.dev/meetings/2020/public-project-meeting-20200702/</link><pubDate>Thu, 02 Jul 2020 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/meetings/2020/public-project-meeting-20200702/</guid><description>Continuing the series of bi-weekly public project meetings, here is the timeline of the meeting held on July 02, 2020 (times are on IST).
Meetings are held on the #selenium-tlc channel on Selenium Slack.
The next meeting will be on July 16, 2020, 4:30 PM CET.
Diego Molina 8:00 PM
Hi all, who is in for the Public Project meeting?
8:01 PM
Here is the overall agenda: Overall announcements? New people on committees, with the commit bit, etc?</description></item><item><title>Moving to Trunk</title><link>https://www.selenium.dev/blog/2020/moving-to-trunk-development/</link><pubDate>Wed, 01 Jul 2020 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2020/moving-to-trunk-development/</guid><description>Since the project started we have been following trunk based development. This was a very natural fit when we were using SVN over a decade ago on Google Code.
As Google Code shut down we moved to GitHub and the git model of doing things. We moved there mostly due to the gravity that GitHub had created in Open Source projects.
This meant that we followed the standard use of master as our trunk to work off.</description></item><item><title>How Selenium Works: Episode 1 - Transportation</title><link>https://www.selenium.dev/blog/2020/how-selenium-works-transport/</link><pubDate>Wed, 10 Jun 2020 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2020/how-selenium-works-transport/</guid><description>After an interaction on the last weekend of January 2020, on a Selenium Issue where someone said “why can’t you just…” after I explained the issue I thought that I would start explaining commands in Selenium WebDriver and why we landed on the design that we have today.
I will repeat this on every page of the series but a lot, an annoying amount sometimes, of thinking goes into how every little bit of Selenium works.</description></item><item><title>Public Project Meeting - June 04, 2020</title><link>https://www.selenium.dev/blog/2020/public-project-meeting-20200604/</link><pubDate>Thu, 04 Jun 2020 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2020/public-project-meeting-20200604/</guid><description>Archived meeting minutes All meeting minutes can now be found here. &amp;times; Continuing the series of bi-weekly public project meetings, here is the timeline of the meeting held on June 04, 2020 (times are on IST).
Meetings are held on the #selenium-tlc channel on Selenium Slack.
The next meeting will be on June 18, 2020, 4:30 PM CET.
Diego Molina 8:05 PM
the agenda will be:
anything people want to add in the next 2 minutes me looking to previous agendas and adding those items here Simon Stewart 8:06 PM</description></item><item><title>Public Project Meeting - June 04, 2020</title><link>https://www.selenium.dev/meetings/2020/public-project-meeting-20200604/</link><pubDate>Thu, 04 Jun 2020 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/meetings/2020/public-project-meeting-20200604/</guid><description>Continuing the series of bi-weekly public project meetings, here is the timeline of the meeting held on June 04, 2020 (times are on IST).
Meetings are held on the #selenium-tlc channel on Selenium Slack.
The next meeting will be on June 18, 2020, 4:30 PM CET.
Diego Molina 8:05 PM
the agenda will be:
anything people want to add in the next 2 minutes me looking to previous agendas and adding those items here Simon Stewart 8:06 PM</description></item><item><title>Selenium 4.0 Alpha 6 is out!</title><link>https://www.selenium.dev/blog/2020/selenium-4-alpha-6-is-out/</link><pubDate>Mon, 01 Jun 2020 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2020/selenium-4-alpha-6-is-out/</guid><description>We are very pleased to announce the release of Selenium 4.0 Alpha 6.
All the information can be seen in different tweets from the project contributors, here they are all in one place:
Happy Friday! I&amp;#39;ve just pushed Selenium 4.0a6 for Java. There&amp;#39;s a lot of nice changes:
* Full remoting of the CDP protocol across the Grid
* The skeleton of our GraphQL support
* Better configuration options, especially for Nodes, via TOML</description></item><item><title>Public Project Meeting - May 07, 2020</title><link>https://www.selenium.dev/blog/2020/public-project-meeting-20200507/</link><pubDate>Sat, 09 May 2020 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2020/public-project-meeting-20200507/</guid><description>Archived meeting minutes All meeting minutes can now be found here. &amp;times; Continuing the series of bi-weekly public project meetings, here is the timeline of the meeting held on May 07, 2020 (times are on IST).
Meetings are held on the #selenium-tlc channel on Selenium Slack.
The next meeting will be on May 21, 2020, 4:30 PM CET.
adamgoucher 8:00 PM
alright. welcome back. time for another fortnightly chat about the project.</description></item><item><title>Public Project Meeting - May 07, 2020</title><link>https://www.selenium.dev/meetings/2020/public-project-meeting-20200507/</link><pubDate>Sat, 09 May 2020 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/meetings/2020/public-project-meeting-20200507/</guid><description>Continuing the series of bi-weekly public project meetings, here is the timeline of the meeting held on May 07, 2020 (times are on IST).
Meetings are held on the #selenium-tlc channel on Selenium Slack.
The next meeting will be on May 21, 2020, 4:30 PM CET.
adamgoucher 8:00 PM
alright. welcome back. time for another fortnightly chat about the project.
Simon Stewart 8:01 PM
:wave:
Diego Molina 8:01 PM
:wave:</description></item><item><title>Public Project Meeting - April 23, 2020</title><link>https://www.selenium.dev/blog/2020/public-project-meeting-20200423/</link><pubDate>Fri, 24 Apr 2020 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2020/public-project-meeting-20200423/</guid><description>Archived meeting minutes All meeting minutes can now be found here. &amp;times; Continuing the series of bi-weekly public project meetings, here is the timeline of the meeting held on April 23, 2020 (times are on CET).
Meetings are held on the #selenium-tlc channel on Selenium Slack.
The next meeting will be on May 7, 2020, 4:30 PM CET.
Diego Molina 4:32 PM
Hi all, we are going to start the next project status meeting in a moment</description></item><item><title>Public Project Meeting - April 23, 2020</title><link>https://www.selenium.dev/meetings/2020/public-project-meeting-20200423/</link><pubDate>Fri, 24 Apr 2020 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/meetings/2020/public-project-meeting-20200423/</guid><description>Continuing the series of bi-weekly public project meetings, here is the timeline of the meeting held on April 23, 2020 (times are on CET).
Meetings are held on the #selenium-tlc channel on Selenium Slack.
The next meeting will be on May 7, 2020, 4:30 PM CET.
Diego Molina 4:32 PM
Hi all, we are going to start the next project status meeting in a moment
for now, the agenda would be:</description></item><item><title>Public Project Meeting - April 9, 2020</title><link>https://www.selenium.dev/blog/2020/public-project-meeting-20200409/</link><pubDate>Sun, 19 Apr 2020 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2020/public-project-meeting-20200409/</guid><description>Archived meeting minutes All meeting minutes can now be found here. &amp;times; As an initiative to bring more transparency to the Selenium project, we are now holding bi-weekly public project meetings. These are written meetings which are held on the #selenium-tlc channel on Selenium Slack.
Here is the timeline of the meeting held on April 9, 2020 (times are on CET).
The next meeting will be on April 23, 2020, 4:30 PM CET.</description></item><item><title>Public Project Meeting - April 9, 2020</title><link>https://www.selenium.dev/meetings/2020/public-project-meeting-20200409/</link><pubDate>Sun, 19 Apr 2020 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/meetings/2020/public-project-meeting-20200409/</guid><description>As an initiative to bring more transparency to the Selenium project, we are now holding bi-weekly public project meetings. These are written meetings which are held on the #selenium-tlc channel on Selenium Slack.
Here is the timeline of the meeting held on April 9, 2020 (times are on CET).
The next meeting will be on April 23, 2020, 4:30 PM CET.
Simon Stewart 4:31 PM @adamgoucher there needs to be a calendar invite for these things</description></item><item><title>SeleniumConf London 2019 Videos and Pictures</title><link>https://www.selenium.dev/blog/2019/seleniumconf-london-2019/</link><pubDate>Sat, 09 Nov 2019 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2019/seleniumconf-london-2019/</guid><description>Check out all the SeleniumConf London 2019 videos and photos!
You can find all the videos here, and all the pictures here.
If you cannot wait to get started, feel free to watch below Simon&amp;rsquo;s &amp;ldquo;State of the Union&amp;rdquo; keynote!</description></item><item><title>Selenium IDE Is Dead, Long Live Selenium IDE!</title><link>https://www.selenium.dev/blog/2018/long-live-selenium-ide/</link><pubDate>Mon, 06 Aug 2018 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2018/long-live-selenium-ide/</guid><description>In August of 2017 Simon shared the bleak, hard news that as of Firefox 55 Selenium IDE would no longer work. Selenium IDE (or as we’ll refer to it from here on out – the Legacy IDE) was, and is, dead.
Since then quite a lot has happened with the IDE. We have a new version of it which we are referring to as… Selenium IDE!
It is currently in “alpha” and available for use in both Chrome and Firefox.</description></item><item><title>Firefox 55 and Selenium IDE</title><link>https://www.selenium.dev/blog/2017/firefox-55-and-selenium-ide/</link><pubDate>Wed, 09 Aug 2017 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2017/firefox-55-and-selenium-ide/</guid><description>The bad news: from Firefox 55 onwards, Selenium IDE will no longer work.
The reasons for this are complex, but boil down to two main causes:
Browsers are complicated pieces of software that are constantly evolving. Mozilla has been working hard to make Firefox faster and more stable, while still retaining the flexibility and ease of extension that we’ve come to know and love. As part of that process, Firefox is switching extensions from the original “XPI” format, to a newer, more widely adopted “Web Extension” mechanism.</description></item><item><title>Hacking with IntelliJ</title><link>https://www.selenium.dev/blog/2017/hacking-with-intellij/</link><pubDate>Wed, 08 Feb 2017 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2017/hacking-with-intellij/</guid><description>Jetbrains have a programme for Open Source projects which allows them to receive IntelliJ IDEA licenses. As part of that programme, which the Selenium project has participated in for many years, they’ve asked us to provide a fair and balanced review of IntelliJ. I’ll attempt to do that, and I’ll try and state my biases up-front so you’re aware of them.
I’ve been using Jetbrain’s IntelliJ to hack on the Selenium code since I started working on it slightly over ten years ago.</description></item><item><title>Selenium 3.0: Out Now!</title><link>https://www.selenium.dev/blog/2016/selenium-3-0-out-now/</link><pubDate>Thu, 13 Oct 2016 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2016/selenium-3-0-out-now/</guid><description>We are very pleased to announce the release of Selenium 3.0. If you’ve been waiting for a stable release since 2.53.1, now’s your chance to update. And if you do, here is what you’ll find:
As we’ve said before, for users of the WebDriver APIs this is a drop-in replacement. You’ll find that modern browsers, such as Chrome and Edge will continue to work just as before, and we’ve taken the opportunity to fix some bugs and improve stability.</description></item><item><title>Selenium 3 is Coming</title><link>https://www.selenium.dev/blog/2016/selenium-3-is-coming/</link><pubDate>Tue, 04 Oct 2016 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2016/selenium-3-is-coming/</guid><description>Selenium 3 is coming! As I write this, we think that “beta 4” will be the last beta before the official 3.0 release. I’m here to tell you about what’s changed, and what impact this will have on your testing.
TL;DR: WebDriver users will just find bug fixes and a drop-in replacement for 2.x. Selenium Grid users will also find bug fixes and a simple update. The WebDriver APIs are now the only APIs actively supported by the Selenium project.</description></item><item><title>Announcing Selenium 3.0-beta1</title><link>https://www.selenium.dev/blog/2016/announcing-selenium-3-0-beta1/</link><pubDate>Fri, 29 Jul 2016 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2016/announcing-selenium-3-0-beta1/</guid><description>At SeleniumConf in 2013, we announced that a new major version of Selenium would be released “by Christmas”. Fortunately, we never said which Christmas, as it has taken us a while to make all the changes we wanted to make! We’re excited to announce the release of the first beta — Selenium 3.0.0-beta1.
We’d love you to try it out on your projects, and provide us with feedback on where the rough edges are before we ship the 3.</description></item><item><title>Fall Selenium Conf, Save the Date &amp; Call for Speakers!</title><link>https://www.selenium.dev/blog/2016/fall-selenium-conf-save-the-date/</link><pubDate>Thu, 23 Jun 2016 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2016/fall-selenium-conf-save-the-date/</guid><description>We’re excited to announce that we’ve finally determined where and when Selenium Conf will be happening this Fall.
Our initial goal was to bring the event to a new country, but for a number of reasons that proved more challenging than we’d hoped. But in 2012 we had the 2nd annual Selenium Conf in London, and we’re pleased to be bringing it back there this year!
The conference will be held at The Mermaid in downtown London on November 14-16:</description></item><item><title>Selenium Conf India 2016 Update</title><link>https://www.selenium.dev/blog/2016/selenium-conf-india-2016-update/</link><pubDate>Mon, 08 Feb 2016 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2016/selenium-conf-india-2016-update/</guid><description>Selenium Conf India is happening this June 24-26 in Bangalore, India.
Tickets, call for speakers, and sponsorship slots are now available!
http://2016.seleniumconf.in/</description></item><item><title>Selenium Conf India — Save The Date!</title><link>https://www.selenium.dev/blog/2015/selenium-conf-india-save-the-date/</link><pubDate>Mon, 21 Dec 2015 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2015/selenium-conf-india-save-the-date/</guid><description>In our last update we mentioned there will be 2 Selenium Confs in 2016 — one in India, another somewhere else (TBD).
Well, we are pleased to announce the official dates and location for Selenium Conf India!
When: June 24th &amp;amp; 25th, 2016
Where: Bangalore, India (at The Chancery Pavilion Hotel)
Mark you calendars! We’ll have more details as they become available (e.g., call for speakers, ticket sales, etc.). To get the latest updates, be sure to sign up for the Selenium Conf mailing list.</description></item><item><title>Selenium Conf 2016</title><link>https://www.selenium.dev/blog/2015/selenium-conf-2016/</link><pubDate>Fri, 06 Nov 2015 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2015/selenium-conf-2016/</guid><description>Interested in learning what’s in store for Se Conf 2016? Then be sure to read this write-up from the Conference Organizers.
Also, if you want to receive email notifications about the conference (e.g., when and where it will be, call for speakers, ticket sales, etc.) then go here and complete the sign-up form.</description></item><item><title>Selenium Conf 2015 Update</title><link>https://www.selenium.dev/blog/2015/selenium-conf-2015-update/</link><pubDate>Sat, 08 Aug 2015 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2015/selenium-conf-2015-update/</guid><description>Selenium 2015 is just around the corner (September 8-10). Since our last post we have:
confirmed Keynote speakers finalized workshop presenters selected the talks for the conference You can see keynote &amp;amp; workshop info here, and the selected talks here.
If you still need a ticket, the last block of tickets are on sale NOW.
If you want to attend the conference then register ASAP. Tickets will go quick and once they’re gone, they’re gone.</description></item><item><title>Selenium Conf 2015 Details</title><link>https://www.selenium.dev/blog/2015/selenium-conf-2015-details/</link><pubDate>Thu, 11 Jun 2015 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2015/selenium-conf-2015-details/</guid><description>The Selenium Conf 2015 website is live!
You can now:
– purchase tickets (while supplies last)
– find out venue information
– submit a talk
– learn more about our talk selection process (tl;dr it is a blind review process to encourage diversity)
What are you waiting for? Go to the conference website already!</description></item><item><title>Selenium Conf 2015 – Save The Date</title><link>https://www.selenium.dev/blog/2015/selenium-conf-2015-save-the-date/</link><pubDate>Wed, 13 May 2015 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2015/selenium-conf-2015-save-the-date/</guid><description>Selenium Conf is coming to Portland, Oregon this year!
It will be happening on September 8, 9, and 10. Mark your calendars.
Stay tuned for details!</description></item><item><title>IntelliJ</title><link>https://www.selenium.dev/blog/2015/intellij/</link><pubDate>Sun, 08 Feb 2015 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2015/intellij/</guid><description>Every year, Jetbrains are kind enough to donate an OSS license for IntelliJ to the Selenium project. As part of that process, they’ve asked that we review the product and (kudos to them!) have been clear that they hope we’re open and honest. So, I’ll be open and honest.
When I tell people that I’m a professional Java developer, people in some circles make sympathetic noises and (sometimes) jokingly refer to how painful my coding life must be.</description></item><item><title>Selenium Hangout 5 Recap</title><link>https://www.selenium.dev/blog/2014/selenium-hangout-6-recap/</link><pubDate>Tue, 23 Dec 2014 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2014/selenium-hangout-6-recap/</guid><description>01:35 – 9:45 W3C Update
Notes from most recent W3C Meeting
Highlights:
– changes to the get_attribute method call
– screenshots (changing to viewport only, eventually will support whole page)
– The WebDriver W3C working group has a GitHub repo now
– WebDriver will move from a “REST-ish” to a more “RESTful” interface
11:23 – 16:00 Selenium 3 Status Update
16:05 – 17:10 Marionette (FirefoxdDiver rewrite) testing help
Marionette Roadmap</description></item><item><title>Selenium Hangout 5 Recap</title><link>https://www.selenium.dev/blog/2014/selenium-hangout-5-recap/</link><pubDate>Mon, 19 May 2014 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2014/selenium-hangout-5-recap/</guid><description>0:00 – 01:10 Intro
1:11 – 13:00 WebDriver W3C Spec &amp;amp; Selenium 3 Update
Progress on the spec, still a work in progress No user facing changes to the Selenium API as a result Trying to pair the spec and Selenium 3 together If all goes well, the spec and Selenium 3 could drop during Selenium Conf (fingers crossed) 13:01 – 24:10 Selenium Conf 2014 Update
Check out the new and shiny conference site Dates posted (e.</description></item><item><title>Announcing Selenium Conf ’14: Bangalore, India</title><link>https://www.selenium.dev/blog/2014/announcing-selenium-conf-14-bangalore-india/</link><pubDate>Mon, 24 Feb 2014 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2014/announcing-selenium-conf-14-bangalore-india/</guid><description>It makes me enormously happy and proud to announce that the Selenium Conference 2014 will be held in Bangalore on the 4-6 September. I’m looking forward to seeing you there!
One of the plans we’ve had from the very beginning for SeConf was that it was going to be a conference for the community of people who make Selenium such a fun project to work on. One way to do this was to host the conference where the largest groups of people using Selenium are found.</description></item><item><title>Selenium Hangout 4 Recap</title><link>https://www.selenium.dev/blog/2014/selenium-hangout-4-recap/</link><pubDate>Fri, 07 Feb 2014 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2014/selenium-hangout-4-recap/</guid><description>Here’s a recap from the latest Selenium Hangout panel discussion. To submit questions for future hangouts, you can message us on Twitter (@seleniumhangout) or e-mail us (questions@seleniumhangout.com).
Panel
David Burns (@AutomatedTester)
Kevin Menard (@nirvdrum)
Dave Haeffner (@TourDeDave)
Timeline
1:30-16:51: How to handle screenshots across different drivers
tl;dr driver specific issues due to a lacking standard and missing API
This is getting addressed in World Wide Web Consortium (W3C) spec which is under development E-mail use-cases you would like to see in the spec to automatedtester@mozilla.</description></item><item><title>Android and iOS Support</title><link>https://www.selenium.dev/blog/2013/android-and-ios-support/</link><pubDate>Tue, 24 Dec 2013 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2013/android-and-ios-support/</guid><description>TL;DR: We’re retiring Selenium’s own AndroidDriver and iPhoneDriver in favour of any of Selendroid, iosdriver and Appium. If you’re using one of Selenium’s own mobile drivers, please evaluate one of these alternatives.
The longer version:
In 2007, Steve Jobs announced the iPhone and changed the mobile Web from a curiosity to something the mainstream wanted and used. Current trends suggest that mobile Web usage will surpass desktop usage in the not too distant future.</description></item><item><title>Selenium Hangout 3 Recap</title><link>https://www.selenium.dev/blog/2013/selenium-hangout-3-recap/</link><pubDate>Fri, 01 Nov 2013 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2013/selenium-hangout-3-recap/</guid><description>Here is a recap of our most recent Selenium Hangout where we answered a grab bag of questions ranging from how to use Selenium within your existing workflow down to nitty-gritty details around performance and deprecated functions.
Be sure to tune into our Twitter feed to find out details about our next Hangout.
And if your question didn’t get answered, we encourage you to hop on IRC and ask it there.</description></item><item><title>Selenium Hangout 2 Recap</title><link>https://www.selenium.dev/blog/2013/selenium-hangout-2-recap/</link><pubDate>Wed, 09 Oct 2013 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2013/selenium-hangout-2-recap/</guid><description>This is a recap from the most recent Selenium Hangout (a.k.a. The World’s Best Selenium Meetup). For info on future meetups, follow them on Twitter.
Thanks to all who attended and tuned into the last Selenium Hangout where we talked about Selenium 3! Below is a write-up of the meetup, the video, and relevant links we mentioned. And to access all meetup videos you can go here.
Panel
David Burns (@AutomatedTester)</description></item><item><title>Mobile WebDriver</title><link>https://www.selenium.dev/blog/2013/mobile-webdriver/</link><pubDate>Wed, 28 Aug 2013 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2013/mobile-webdriver/</guid><description>Although the WebDriver APIs started life as just a mechanism for automating web browsers, over the past few years it has been extended to also work on mobile devices. Projects such as Appium, iosdriver, and Selendroid have all shown that this approach works, and works well. On the Web, if you start using Selenium WebDriver with one browser (Firefox, for example), it’s easy to switch out the browser for another one (such as Internet Explorer or Chrome).</description></item><item><title>The Road to Selenium 3</title><link>https://www.selenium.dev/blog/2013/the-road-to-selenium-3/</link><pubDate>Wed, 28 Aug 2013 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2013/the-road-to-selenium-3/</guid><description>Selenium 2 was released in July 2011. It’s now two years old, and what a couple of years it’s been! The WebDriver APIs, which were the major addition in Selenium 2, are now the basis for a W3C standard, and there are implementations written and supported by Google, Mozilla and Opera. There have been 34 releases, with official support for Java, C#, Python, Ruby and Javascript, and the community has stepped in to provide bindings for Perl, PHP and others.</description></item><item><title>A Smattering of Selenium #157</title><link>https://www.selenium.dev/blog/2013/a-smattering-of-selenium-157/</link><pubDate>Sun, 18 Aug 2013 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2013/a-smattering-of-selenium-157/</guid><description>Trying to find every excuse not to cut the grass … including apparently closing some browser tabs.
Interoperability – Standardized Test Information Interchange has me so full of ‘meh’ as to be hilarious. Commercially driven standards rarely are and/or I am just too much of an open source person to accept this model for standards development Licensing in a Post Copyright World – important How to Make Async Requests in PHP is php specific in its solution, but has some interesting bits about socket establishment that applies to other ones as well Adding Comments to JSON feels like a hack.</description></item><item><title>A Smattering of Selenium #156</title><link>https://www.selenium.dev/blog/2013/a-smattering-of-selenium-156/</link><pubDate>Mon, 12 Aug 2013 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2013/a-smattering-of-selenium-156/</guid><description>Brain fried from PyCon Canada 2013 and ‘some’ browser tab is misbehaving which means its time to start closing some of these.
Patchwork seems like an awesome idea, but at the same time, I’ve had to work in heavily monkey-patched RoR apps before… Evolving syntax is PHP specific in its examples, but the ideas transfer Roslyn + Selenium: Scripty C# Powering Browser Automation – some C# voodoo? It’s like 10000 knives when all you need is a Spoon – or specifically, this particular spoon which is yet-another-android-automation-tool.</description></item><item><title>The World’s Best Selenium Meetup</title><link>https://www.selenium.dev/blog/2013/the-worlds-best-selenium-meetup/</link><pubDate>Fri, 09 Aug 2013 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2013/the-worlds-best-selenium-meetup/</guid><description>Note from Adam: This is a guest post from Dave Haeffner who, along with David Burns hatched this idea at SeConf2013.
Selenium Meetups are great, but… Have you ever wanted to attend a Selenium Meetup but there’s not one near you? Or maybe there is but something’s come up and you can’t make it out that night? Or maybe the meetup near you struggles to get good speakers and have a consistent schedule?</description></item><item><title>A Smattering of Selenium #155</title><link>https://www.selenium.dev/blog/2013/a-smattering-of-selenium-155/</link><pubDate>Sun, 28 Jul 2013 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2013/a-smattering-of-selenium-155/</guid><description>A ‘should be scripting, but brain stuck in neutral so closing some tabs’ edition of the Smattering.
The slippery slope isn’t automation related, but if your employer does these things I’d suggest logging a bug and then finding an ethical job Why Package Signing is not the Holy Grail – crypto / security is hard. Also, I have a signed package for you to install… PHP and Async requests with file based sessions could be a way to speed up a PHP site.</description></item><item><title>A Smattering of Selenium #154</title><link>https://www.selenium.dev/blog/2013/a-smattering-of-selenium-154/</link><pubDate>Tue, 23 Jul 2013 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2013/a-smattering-of-selenium-154/</guid><description>Apparently today’s ‘wait for an email’ task is to whittle down the smattering queue some more.
I won’t even pretend that FOAAS has to do with automation, but makes me laugh. Also, depending on how crappy your place of work is, it might not be SFW PHP RFC: Importing namespaced functions is interesting if you are writing your scripts in a Functional manner. In PHP. In a future where it gets accepted and implemented.</description></item><item><title>A Smattering of Selenium #153</title><link>https://www.selenium.dev/blog/2013/a-smattering-of-selenium-153/</link><pubDate>Mon, 22 Jul 2013 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2013/a-smattering-of-selenium-153/</guid><description>A Sunday Smattering? Sure!
Solution to the Selenium with Firefox 22 Issues and How to Report Issues – Open Source is hard. Supporting Open Source’s infrastructure is harder — by a large margin frequests – asyncronous HTTP Requests; not sure where I would use this, but… why I don’t touch crypo – again, don’t. touch. crypto Five reasons why you should quote attribute values in HTML5 – for the record, you should do this in HTML 4 as well.</description></item><item><title>A Smattering of Selenium #152</title><link>https://www.selenium.dev/blog/2013/a-smattering-of-selenium-152/</link><pubDate>Thu, 11 Jul 2013 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2013/a-smattering-of-selenium-152/</guid><description>40-ish minutes until midnight eastern so that counts as two days in a row, right? Right?
Improving jenkins execution times by common sense — common sense. sadly lacking most days. How to make test automation more effective? is useful up until the pitch at the end. So read until you get to that. Data Structures for PHP Devs: Trees – non-trivial data structures are non-trivial Writing clean WebDriver test suites for “duplicate” functionality by parameterizing on page objects – I especially like the usage of ‘might’ at the top dalek-internal-webdriver – what’s a day without a JS webdriver implementation?</description></item><item><title>A Smattering of Selenium #151</title><link>https://www.selenium.dev/blog/2013/a-smattering-of-selenium-151/</link><pubDate>Wed, 10 Jul 2013 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2013/a-smattering-of-selenium-151/</guid><description>Almost a month after the last one. Though it did nice to have it at 150 when people go to the blog … but a greater number is nicer.
So I was trying to find Requests for PHP whilst talking to the grumpy programmer and he pointed me out to Guzzle which looks equally cool Can you optimize list(genexp) is one of those geeky language internals things that could be handy to have in your back pocket Slightly Snarky GWT Debug ID FAQ – c’mon, when have you seen a more blatantly ‘put this in the smattering’ title than this?</description></item><item><title>A Smattering of Selenium #150</title><link>https://www.selenium.dev/blog/2013/a-smattering-of-selenium-150/</link><pubDate>Fri, 14 Jun 2013 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2013/a-smattering-of-selenium-150/</guid><description>Yup, this smattering has very little to do with Selenium, but… 150!
Referencing DOM from JS: there must be a DRYer, safer way is a nice ‘here is where I started, and here is how I ended up where I am’ post which can be stolen into other languages / frameworks other than in Backbone Hash lookup in Ruby, why is it so fast? is not something I was wondering, but now I know why.</description></item><item><title>A Smattering of Selenium #149</title><link>https://www.selenium.dev/blog/2013/a-smattering-of-selenium-149/</link><pubDate>Wed, 05 Jun 2013 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2013/a-smattering-of-selenium-149/</guid><description>Too. Many. Tabs.
Internationalization and Localization Testing — yup, I agree. 5 HTML5 Features you need to know – ‘download attribute’ and ‘datalist element’ might be a pain for us automators. Or at least cause a couple hours annoyance until we figure out the pattern. Death to sleeps! Raise of Conditions! – expected conditions is likely the next thing to get more marketing this year line_profiler and kernprof – profiling is black magic voodoo Naught – ‘Naught is a toolkit for building Null Objects in Ruby.</description></item><item><title>A Smattering of Selenium #148</title><link>https://www.selenium.dev/blog/2013/a-smattering-of-selenium-148/</link><pubDate>Mon, 13 May 2013 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2013/a-smattering-of-selenium-148/</guid><description>Gotta start this up again…
The Evil Tester Guide To HTTP Proxies appears to be more for using proxies for manual testing, but you should be running your automation through one as well so it helps to understand the magic that takes place. New BrowserMob Proxy release. Bindings should all be updated for the newly exposed methods in a couple days. 5 Things You Should Stop Doing With jQuery – Not sure whats better, the content, or the Saved By The Bell theme testtools is the latest hotness in the world of Python runners?</description></item><item><title>Curious to know how we picked speakers for the 2013 SeConf? Read on…</title><link>https://www.selenium.dev/blog/2013/curious-to-know-how-we-picked-speakers-for-the-2013-seconf-read-on/</link><pubDate>Mon, 25 Mar 2013 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2013/curious-to-know-how-we-picked-speakers-for-the-2013-seconf-read-on/</guid><description>This is a guest post by Marcus Merrell, one of the organizers of the 2013 Selenium Conference.
Selenium/Webdriver has kept my family fed since 2007. Since I’ve never committed a line of code to this magical project, I thought the least I could do was spend a few hours helping put SeConf 2013 together. When they asked for a volunteer to put the speaker program together, I was thrilled to step forward!</description></item><item><title>A Smattering of Selenium #147</title><link>https://www.selenium.dev/blog/2013/a-smattering-of-selenium-147/</link><pubDate>Thu, 14 Mar 2013 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2013/a-smattering-of-selenium-147/</guid><description>My. Get. Productive. I know! I’ll push out a smattering. Oh. …
Python for Ruby Programmers is a pretty good deck, with the requisite snark at the end that you can safely ignore. Me @ Selenium Camp 2013 is Ivan’s mini-experience-report from SeCamp and has his slides on GhostDriver Using pip in production? pip install : Lightspeed and Bulletproof is a useful trick which I know I’ve done variants of with java and ruby in the past SeConf speakers are up — and the list looks really good Interfaces or Abstract Classes?</description></item><item><title>A Smattering of Selenium #146</title><link>https://www.selenium.dev/blog/2013/a-smattering-of-selenium-146/</link><pubDate>Mon, 11 Mar 2013 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2013/a-smattering-of-selenium-146/</guid><description>Happy ‘productivity destructive week’ — otherwise known as March break.
How to Accept Self-Signed SSL Certificates in Selenium 2 — or you could use ‘real’ certificates that are trusted by the browser by default. If you are using self-signed certificates to ‘save money’ and you spend 3 hours making it work, you are not saving money anymore JockeyJS seems like it could be useful Dear every-js-widget-library-author, You can’t create a button If you are using PHP, then The Grumpy Programmer’s PHPUnit Cookbook should be added to your reading pile.</description></item><item><title>A Smattering of Selenium #145</title><link>https://www.selenium.dev/blog/2013/a-smattering-of-selenium-145/</link><pubDate>Mon, 04 Mar 2013 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2013/a-smattering-of-selenium-145/</guid><description>Alice Finch builds massive LEGO Hogwarts from 400,000 bricks starts out at awesome and goes somewhere further down the scale when you get to the photo that shows scale.
Models of Automation — really, who reading this hasn’t had the conversation described in there in one of its variants Stop Moving So I Can Click You Dammit! – illustrates the only acceptable place for Thread.sleep() Using Realistic Data in Unit Testing and AngelaSmith: Creating Test Data is a two-for for the C# crowd — though the ideas resonate with everyone else How to handle common components with Page Object Model?</description></item><item><title>A Smattering of Selenium #144</title><link>https://www.selenium.dev/blog/2013/a-smattering-of-selenium-144/</link><pubDate>Mon, 25 Feb 2013 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2013/a-smattering-of-selenium-144/</guid><description>Real Canadians watch curling instead of hockey.
jsPerf is a performance oriented sandbox The Myth Of Convention Over Configuration – hint: its curation over configuration. And since this is how frameworks work… sublimetext_indentxml is a sublime text plugin to indent xml — yes, originality counts with plugin naming Introducing Boxen – Boxen feels a lot like Vagrant, but for Macs? Maybe? Checking for Technical Requirements in a Sign-up Process — woah, this would be a pain to automate office_docs looks like it might help parse and inspect ms office docs your app generates.</description></item><item><title>A Smattering of Selenium #143</title><link>https://www.selenium.dev/blog/2013/a-smattering-of-selenium-143/</link><pubDate>Thu, 14 Feb 2013 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2013/a-smattering-of-selenium-143/</guid><description>If you had anything interesting last week I should have seen, you’ll have to resend it to me or @seleniumhq — things were a bit crashy.
So … Opera switching to WebKit. That doesn’t mean you can write off automation with Opera though. Tragedy of the WebKit Commons Introducing ChemistryKit — a Ruby version of Saunter is another self-serving link. Automated local accessibility testing using WAVE and WebDriver is a post I had been waiting awhile for How Did the Duck Hunt Gun Work?</description></item><item><title>A Smattering of Selenium #142</title><link>https://www.selenium.dev/blog/2013/a-smattering-of-selenium-142/</link><pubDate>Tue, 05 Feb 2013 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2013/a-smattering-of-selenium-142/</guid><description>Its a Wiggle your brain kind of morning…
Automated Web Testing Is Hard is the launch announcement of ChemistryKit Watir-WebDriver with GhostDriver on OSX: headless browser testing — the WebDriver version of this would be very, very similar to this. jQuery 1.9.1 Released isn’t interesting from a new jQuery perspective, but the migrate plugin is. Likely old news, but was new to me… GRASP (object-oriented design) ‘is really a mental toolset’ How Not to Design Pairwise Software Tests is even more useful when paired (pun intended) with… Using Data Driving Wisely The Importance of the DOM has a lot of stuff that my not-in-gear brain is capable of processing, but… Postel’s Principle is a Bad Idea.</description></item><item><title>A Smattering of Selenium #141</title><link>https://www.selenium.dev/blog/2013/a-smattering-of-selenium-141/</link><pubDate>Fri, 01 Feb 2013 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2013/a-smattering-of-selenium-141/</guid><description>Its -12 Celsius plus windchill out. Why the heck is the office air conditioning on. Feel like I need a Mr. Rogers cardigan or something.
Caret Navigation in Web Applications starts slow and then hurts your brain while reminding you that this automation thing isn’t easy. I don’t know NUnit or TeamCity so don’t know if Using TeamCity and NUnit to Start WebServer, Run Selenium Tests and Stop WebServer is useful or just a rehash of common knowledge.</description></item><item><title>A Smattering of Selenium #140</title><link>https://www.selenium.dev/blog/2013/a-smattering-of-selenium-140/</link><pubDate>Fri, 25 Jan 2013 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2013/a-smattering-of-selenium-140/</guid><description>Buckets!
I suspect that scanner-backed-by-selenium belongs in the ‘with great power comes great responsibility’ bucket
ios-driver is in the ‘wouldn’t it be nice if Apple provided this’ bucket
Selenium WebDriver utility for determining when page has finished rendering is in the ‘ADF specific’ bucket’
I suspect JSErrorCollector is in the ‘already indirectly linked to’ bucket. If not then its in the ‘FF only’ bucket
Using a business readable language for browser automation is in the ‘bdd/atdd hype’ bucket.</description></item><item><title>A Smattering of Selenium #139</title><link>https://www.selenium.dev/blog/2013/a-smattering-of-selenium-139/</link><pubDate>Wed, 23 Jan 2013 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2013/a-smattering-of-selenium-139/</guid><description>Posting from the past into the future. Or something… (its a scheduled post).
webdriverjs-with-jasmine appears appropriately named since it claims to be A standalone (includes standalone Selenium server (30Mo) + includes Jasmine) working example of a test with WebDriverJS and Jasmine. Similar to the above, but with Drupal and Behat – Classic How I[he] send notifications to the build breakers. using twillio On Code Review comes from the Food For Thought department Orc is a model driven orchestration tool for the deployment of application clusters.</description></item><item><title>A Plan to Drop Firefox 3.x Support</title><link>https://www.selenium.dev/blog/2013/a-plan-to-drop-firefox-3-x-support/</link><pubDate>Tue, 22 Jan 2013 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2013/a-plan-to-drop-firefox-3-x-support/</guid><description>The support policy of the selenium project for Firefox browsers is to support the current and previous stables releases, as well as the current and previous ESR releases. At the time of writing, that means the supported versions are &amp;#8220;10&amp;#8221; and &amp;#8220;17&amp;#8221; (ESR) and &amp;#8220;17&amp;#8221; and &amp;#8220;18&amp;#8221; (stable channel). In addition to this, we are currently supporting Firefox 3.x too. This is an official announcement that we are planning to end support for Firefox 3.</description></item><item><title>Selenium Conf 2013: Call for Papers and Early Bird Tickets</title><link>https://www.selenium.dev/blog/2013/selenium-conf-2013-call-for-papers-and-early-bird-tickets/</link><pubDate>Tue, 22 Jan 2013 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2013/selenium-conf-2013-call-for-papers-and-early-bird-tickets/</guid><description>This year’s Selenium Conference is slated for June 10 – 12 in beautiful Boston, Massachusetts. The conference will be held at the Renaissance Boston Waterfront Hotel. Similar to last year, this year’s conference will kick off with a full day of Selenium Workshops, followed by a two day, two track conference. If you’ve always dreamed of speaking at a Selenium Conference there’s still time to submit a talk to us at http://www.</description></item><item><title>A Smattering of Selenium #138</title><link>https://www.selenium.dev/blog/2013/a-smattering-of-selenium-138/</link><pubDate>Mon, 21 Jan 2013 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2013/a-smattering-of-selenium-138/</guid><description>&amp;lt;insert snark here&amp;gt;
Debugging For Testers — they don’t teach this in testing school. Actually, there is a testing school… A million times this!! That’s not BDD, that’s just Cucumber Faster Websites: Crash Course on Web Performance — all three hours of video Continuous Integration of iOS Projects using Jenkins, CocoaPods, and Kiwi Clearing IE’s Caches – Not as simple as it appears is another one of those things that gives Jim headaches.</description></item><item><title>A Smattering of Selenium #137</title><link>https://www.selenium.dev/blog/2013/a-smattering-of-selenium-137/</link><pubDate>Wed, 16 Jan 2013 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2013/a-smattering-of-selenium-137/</guid><description>Whoops, missed a couple days… ah well.
MOAR ELEMENTS!!! the element Dependency injection != Inversion of Control is useful reading. And the Waffle example is pretty funny. Not sure yet how I feel about this feature in the page-object gem.
Waiting for an application to be fully loaded has some more examples of using a ‘proper’ [not implicit] waiting strategy. Most of us are not using Se for HVAT, but knowing the terminology, etc.</description></item><item><title>Source Control</title><link>https://www.selenium.dev/blog/2013/source-control/</link><pubDate>Mon, 14 Jan 2013 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2013/source-control/</guid><description>This short technical note is to announce that the Selenium project is now using git on Google Code in place of subversion.
The move has been a long time in the making, and it’s largely thanks to the efforts of Kristian Rosenvold that we’ve been able to do the migration and retain the project history. The project owes him a huge thank you! We’re in the process of migrating the last bits and pieces (none of which are user facing), so there may be some last minute turbulence as we settle everything down.</description></item><item><title>A Smattering of Selenium #136</title><link>https://www.selenium.dev/blog/2013/a-smattering-of-selenium-136/</link><pubDate>Mon, 07 Jan 2013 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2013/a-smattering-of-selenium-136/</guid><description>Someone go back to my past self and punch him for thinking that starting to get in shape was a good idea. OMGCANTMOVE.
.NET Goes Immutable seems interesting. But I don’t really speak C# so it could very well be boring and uninteresting. Shadow DOM 101 is another part of HTML5 that makes me think this web automation stuff has a very limited life span. Between this and Canvas… ugh. Using WebDriver to automatically check for JavaScript errors on every page is something I have been considering adding to my frameworks… Have I mentioned how much Canvas worries me?</description></item><item><title>A Smattering of Selenium #135</title><link>https://www.selenium.dev/blog/2013/a-smattering-of-selenium-135/</link><pubDate>Fri, 04 Jan 2013 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2013/a-smattering-of-selenium-135/</guid><description>Three in a row … of course, these are the easy three.
Build, test and deploy Firefox OS apps for $0 (or any other currency that I don’t know how to emit) Ruby on Rails … in Bash. Because they can. Bash on Balls All you need to know about CSS Transitions except how the hell we are going to synchronize on them. Well, kinda does, but this is going to hurt.</description></item><item><title>A Smattering of Selenium #134</title><link>https://www.selenium.dev/blog/2013/a-smattering-of-selenium-134/</link><pubDate>Thu, 03 Jan 2013 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2013/a-smattering-of-selenium-134/</guid><description>Hrm. Office is closed until Monday, but everyone is in. Very confusing…
One reason I have heard people say they don’t use cloud instances is they are afraid they will just sit around idle when not needed. Behind the clouds: how RelEng do Firefox builds on AWS has some useful scripts to find and teardown machines. Page Weight Matters is a fun little insight into how/why YouTube shed some of its heft.</description></item><item><title>A Smattering of Selenium #133</title><link>https://www.selenium.dev/blog/2013/a-smattering-of-selenium-133/</link><pubDate>Wed, 02 Jan 2013 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2013/a-smattering-of-selenium-133/</guid><description>Since today is the start of ‘find a new contract’ I guess I don’t have an excuse to miss these for the next week or so.
(Oh, and Happy New Year, etc.)
This is snark, but just makes me laugh given the hype machine around ATDD/BDD;
AS an angry userI WANT TO punch the developer in the faceSO THAT I CAN punch the developer in the face.
— Kristopher Johnson (@OldManKris) December 4, 2012</description></item><item><title>A Smattering of Selenium #132</title><link>https://www.selenium.dev/blog/2012/a-smattering-of-selenium-132/</link><pubDate>Thu, 06 Dec 2012 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2012/a-smattering-of-selenium-132/</guid><description>2.27.0 is now out which means you can close the browser tab that points to the old Firefox installers.
Not Providing an HTML Page? Think of the Kittens! is important to remember. We want to fix your bugs. Help us help you! The HTML5 download attribute is another bit I am not looking forward to have to automate Refactoring to Improve Testability – what can I say? I like experiential posts Oh how it pains me to suggest that SikuliWebDriver looks mighty cool Page Visibility API Support in Opera 12.</description></item><item><title>A Smattering of Selenium #131</title><link>https://www.selenium.dev/blog/2012/a-smattering-of-selenium-131/</link><pubDate>Thu, 29 Nov 2012 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2012/a-smattering-of-selenium-131/</guid><description>Not sure how widely broadcast this has been (cus, you know, we’re good at communicating and stuff), but if you are using 2.26.0 and Firefox 17 you will get a nasty bug. 2.27.0 is in the works to address this (and a couple other things…) so if you need FF right now, keep your install at the latest 16 release.
This is pretty decent. Except the usual “Feh! We don’t need humans to test!</description></item><item><title>A Smattering of Selenium #130</title><link>https://www.selenium.dev/blog/2012/a-smattering-of-selenium-130/</link><pubDate>Tue, 27 Nov 2012 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2012/a-smattering-of-selenium-130/</guid><description>Can’t get enough Se bloggage? Have a look at Overview of Selenium Blogs — though I must say there has to be something wrong with the Alexa algorithm if I am that far down the list. And behind both David and Alister. 🙂
Must Have Git Aliases: Advanced Examples reminds me of someone I used to work with who likely couldn’t function on a clean unix system, but with all his aliases was mind blowing to watch Writing a Selenium Test Framework for a Django Site (Part 3) has the usual myths and FUD around XPath and embeds locators in the script method but is the first thing I’ve seen that uses the Color class in Python so I’ll overlook those things.</description></item><item><title>A Smattering of Selenium #129</title><link>https://www.selenium.dev/blog/2012/a-smattering-of-selenium-129/</link><pubDate>Mon, 26 Nov 2012 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2012/a-smattering-of-selenium-129/</guid><description>A hardy welcome back to work to our American friends who spent Thursday being thankful for what they had, then getting into fist fights at stores for things they thought they didn’t need the next day.
You know what would be grand? If various widget makers would provide automation hooks for their stuff so we, as automators, don’t have to write them ourselves. Like for High Charts (in Java) Why you should never use a boolean field (use an Enum instead) is food for thought when designing your page objects Do you work for Google?</description></item><item><title>A Smattering of Selenium #128</title><link>https://www.selenium.dev/blog/2012/a-smattering-of-selenium-128/</link><pubDate>Mon, 19 Nov 2012 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2012/a-smattering-of-selenium-128/</guid><description>…as I avoid writing code that deals with dynamically constructed tables. Without any sort of unique locator. Of course.
I would contend that the ‘right’ solution to this problem is to use a CI container and have it email you, but if you are using Java and not using CI, then Automatically Email the Reports After Selenium Test Execution could be valuable. I feel like I have already linked to Webdriver StaleElementReferenceException but the archive search is, erm, not great, so here it is again.</description></item><item><title>A Smattering of Selenium #127</title><link>https://www.selenium.dev/blog/2012/a-smattering-of-selenium-127/</link><pubDate>Fri, 16 Nov 2012 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2012/a-smattering-of-selenium-127/</guid><description>Within an hour I had some more things to add to the last Smattering. Oh well, I’ll just save them up…
Har-assert looks like something useful to include in your project if you are using Java. And the browsermob-proxy (which of course, you all are) Web Content Accessibility Guidelines (WCAG) 2.0 seems like something more people should care about. Right. Here is another cool part of the nebulous, meaningless thing called HTML5.</description></item><item><title>A Smattering of Selenium #126</title><link>https://www.selenium.dev/blog/2012/a-smattering-of-selenium-126/</link><pubDate>Wed, 14 Nov 2012 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2012/a-smattering-of-selenium-126/</guid><description>I’ve been threatening that I was going to do this for awhile…
What it feels like when you are running a long running batch of scripts…
Remember kids, your script cannot adapt to the unexpected…
But on occasion they can do something that…
Oh! Here’s a useful metric of productivity!
And just when you thought you were doing something without anyone paying attention…
Unfortunately what a lot of automation is like…</description></item><item><title>A Smattering of Selenium #125</title><link>https://www.selenium.dev/blog/2012/a-smattering-of-selenium-125/</link><pubDate>Mon, 12 Nov 2012 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2012/a-smattering-of-selenium-125/</guid><description>Right…
Scripting batch 1: waiting for an email Scripting batch 2: waiting for an email Scripting batch 3: waiting for an email Scripting batch 4: waiting for an email Perhaps I’ll do something else right now…
Alright kids, its not the Olympics, but Curvy would be a fun app for someone to automate. Wow that was fast. Øredev has started to publish the videos from this year’s conference. Lots of good things in there.</description></item><item><title>A Smattering of Selenium #124</title><link>https://www.selenium.dev/blog/2012/a-smattering-of-selenium-124/</link><pubDate>Tue, 06 Nov 2012 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2012/a-smattering-of-selenium-124/</guid><description>Too. Many. Links. Not. Enough. Posts.
The important word is strive in 100% Automation Pass Rates. PHP Error could be interesting to turn on in your automation environment. Well, if it is a PHP app at any rate… Testing mobile? Tap Into Mobile Application Testing by Jonathan Kohl Behavioural testing in .Net with SpecFlow and Selenium – Part 1, Part 2 cocoa-rest-client could be a useful tool for the toolbox if you are on mac and are testing rest apps.</description></item><item><title>Announcing Selenium 2.26: the “It’s Really Real” Release</title><link>https://www.selenium.dev/blog/2012/announcing-selenium-2-26/</link><pubDate>Fri, 02 Nov 2012 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2012/announcing-selenium-2-26/</guid><description>It’s been a long time since we announced a new Selenium release on this blog, as we moved to a model of quicker releases, but we’ve been working on 2.26 for far longer than normal — it’s out! Download it now! — so I thought it best to let you know. We’re aiming to head back to faster releases, so hopefully you won’t see another blog post about the release for a while (though I’m sure they’ll appear in the “Smatterings of Selenium” posts)</description></item><item><title>A Smattering of Selenium #123</title><link>https://www.selenium.dev/blog/2012/a-smattering-of-selenium-123/</link><pubDate>Wed, 17 Oct 2012 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2012/a-smattering-of-selenium-123/</guid><description>If you are not using something like Chef or Puppet to keep your grid nodes behaving then you are absolutely doing it wrong. Here are all the PuppetConf 2012 Videos to help you get started. See also this Apple’s Lightning port dynamically assigns pins to allow for reversible use is just too geeky not to include. Hurray for hardware lock-in? Websockets 101 — again, if your app uses a technology, you better be damned clueful about it if you are going to automate it Child Elements seems to address the ‘is my element where I expect it’ problem though I’m still not convinced that is a problem that needed solving HTML for Icon Font Usage could be interesting.</description></item><item><title>A Smattering of Selenium #122</title><link>https://www.selenium.dev/blog/2012/a-smattering-of-selenium-122/</link><pubDate>Mon, 15 Oct 2012 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2012/a-smattering-of-selenium-122/</guid><description>Let’s try the ‘all video’ edition this time.
Solving Common Problems with Web UI Automation Hrm. That didn’t work … let’s add some slide decks.
Mobile Test Automation at eBay from Dominik Dary PHPUnit Best Practices A Whirlwind Tour of Test::Class from Curtis Poe Simple Log Analysis and Trending from Mike Brittain</description></item><item><title>A Smattering of Selenium #121</title><link>https://www.selenium.dev/blog/2012/a-smattering-of-selenium-121/</link><pubDate>Tue, 02 Oct 2012 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2012/a-smattering-of-selenium-121/</guid><description>Its the ‘all github’ edition today!
Dave goes a little strange on us with his diy_framework as an emoting robot. Here is the deck that went along with it. Can’t get enough of the food-based frameworks from the kids at Sauce. If you are using the PHPUnit included WebDriver bindings [and Sauce OnDemand] then Sausage could be of interest. Of course, if you are just using PHPUnit, then paraunit could of interest.</description></item><item><title>A Smattering of Selenium #120</title><link>https://www.selenium.dev/blog/2012/a-smattering-of-selenium-120/</link><pubDate>Tue, 18 Sep 2012 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2012/a-smattering-of-selenium-120/</guid><description>Here we grow again. Telerik acquires Fiddler. What’s next?. So. When can we look for nice Se integration with Fiddler then? Third-Party Issues and the Performance Ripple Effect is interesting, and something I’ve harped on consistently. Automated Web Testing with Selenium is 3.5 hours of videos on Se. That has my usual complaints; shouldn’t have Se-IDE, there is no such thing as ‘basic’ and ‘advanced’, etc. But its there. The Oracle Problem and the Teaching of Software Testing is long, but important to understand when doing automation.</description></item><item><title>A Smattering of Selenium #119</title><link>https://www.selenium.dev/blog/2012/a-smattering-of-selenium-119/</link><pubDate>Fri, 14 Sep 2012 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2012/a-smattering-of-selenium-119/</guid><description>Its that time again, 4th Annual Automation Honors Voting is now open. Vanity contests FTW!
Introducing the Sauce Plugin for Selenium Grid from a product perspective is huge. And in a roundabout way proves I am not completely crazy…
Benchmark of Python WSGI Servers has lots of numbers, and graphs and charts.
Seleno makes some bold marketing statements (‘the RIGHT way!’). Looks like a framework in C# that forces people to use Page Objects</description></item><item><title>A Smattering of Selenium #118</title><link>https://www.selenium.dev/blog/2012/a-smattering-of-selenium-118/</link><pubDate>Fri, 07 Sep 2012 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2012/a-smattering-of-selenium-118/</guid><description>&amp;lt;Insert witty/snarky commentary on something here&amp;gt;
Apparently the TestWatchman thing I linked to is deprecated now in favour of TestWatcher (shows how much I pay attention to JUnit stuff…). Here is an example of TestWatchers and RuleChains. No, I don’t know what the blurb at the top says. Sure, we’ve all see lorum ipsum text, but do you know what it (ish) says? now you do From the ‘MEASURE ALL THINGS!</description></item><item><title>A Smattering of Selenium #117</title><link>https://www.selenium.dev/blog/2012/a-smattering-of-selenium-117/</link><pubDate>Wed, 05 Sep 2012 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2012/a-smattering-of-selenium-117/</guid><description>Evolutionary Project Structure talks about a particular project structure, but this is one of those fun developer opinionated things to geek out on Testers Caught Sleeping on the Job is not browser-based, but you cannot bash sleeps enough. Also has a pretty amusing photo with it PHP: The Right Way is of course one person’s understanding of the ‘right way’ but still not bad. Automation is Code. But are your code conventions hurting you?</description></item><item><title>A Smattering of Selenium #116</title><link>https://www.selenium.dev/blog/2012/a-smattering-of-selenium-116/</link><pubDate>Tue, 04 Sep 2012 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2012/a-smattering-of-selenium-116/</guid><description>So do people celebrate the day after Labor day as the beginning of summer?
Web Performance Power Tool: HTTP Archive (HAR) is worrisome that HARs are being billed as a power tool, but full of good stuff How do you pick responsive images breakpoints? is another one of those problems I think we’re going to have to worry about TestWatchman seems like an interesting bit of JUnit4. (At what point do we have to stop saying 3 or 4 when referring to JUnit?</description></item><item><title>A Smattering of Selenium #115</title><link>https://www.selenium.dev/blog/2012/a-smattering-of-selenium-115/</link><pubDate>Wed, 29 Aug 2012 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2012/a-smattering-of-selenium-115/</guid><description>The big news in the twitter-verse yesterday was the announcement of Apple Sauce and Android Sauce from Sauce Labs. I of course jumped all over that bandwagon with Apple Sauce and Android Sauce .. Yummy! (And Fully Supported) * Accessing priviledged Javascript APIs from your web page in Firefox with Selenium lets to pull even more strings of the browser than you were supposed to be able to. Something I suspect Marionette will make redundant, but until then…</description></item><item><title>A Smattering of Selenium #114</title><link>https://www.selenium.dev/blog/2012/a-smattering-of-selenium-114/</link><pubDate>Mon, 27 Aug 2012 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2012/a-smattering-of-selenium-114/</guid><description>Hurray for having fillings done on both sides of my face. Don’t expect me to speak without drolling for rest of the day.
I’ll admit to not knowing what the difference is/was between FluentWait and WebDriverWait, but FluentWait with WebElement explains it well. With sample code!
PHPUnit + Selenium + php-webdriver = hours of entertainment (Part 1) shows a nice extension to PHPUnit_Framework_TestCase. Now if only he was using my active fork of the php-webdriver bindings rather than the original project Facebook seems to have abandoned.</description></item><item><title>A Smattering of Selenium #113</title><link>https://www.selenium.dev/blog/2012/a-smattering-of-selenium-113/</link><pubDate>Wed, 22 Aug 2012 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2012/a-smattering-of-selenium-113/</guid><description>/me is not looking forward to when the jet lag whallops him
Thorough look at PHP’s pcntl_fork() is how we have to do parallel tests with phpunit until it grows it proper Catch Javascript Errors on the Page with Watir or Selenium – This! Categorising WebDriver–Navigation, Interrogation, Manipulation walks through the WebDriver API bit by bit. Of course, now the trick is to keep it up to date. 🙂 Screening uses Se deep in its guts to script up Montage apps Millions of web pages use the -moz-opacity:0.</description></item><item><title>A Smattering of Selenium #112</title><link>https://www.selenium.dev/blog/2012/a-smattering-of-selenium-112/</link><pubDate>Tue, 21 Aug 2012 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2012/a-smattering-of-selenium-112/</guid><description>Eyes are gross.
Thucydides has a spiffy new website How Eventbrite uses Jenkins and Selenium which I think I’ve linked to before, but can’t seem to find reference to. What’s my UDID? is now the new bar for online tutorials Creating Maintainable Automated Acceptance Tests from Jez Humble Selenium Users Anonymous from Dave Haeffner Capture/Playback: The Vampire that Will Not Die has perhaps the most unfriendly url in the history of the internets, but is a nice little rant anyways.</description></item><item><title>A Smattering of Selenium #111</title><link>https://www.selenium.dev/blog/2012/a-smattering-of-selenium-111/</link><pubDate>Mon, 20 Aug 2012 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2012/a-smattering-of-selenium-111/</guid><description>When this gets published, I’ll be sitting around the Barcelona airport waiting for my connection home. Unless I screwed up the time math. 🙂
The dangers of uniformity pours cold water on something that I know I used to preach for automation environments. How to crawl a quarter billion webpages in 40 hours doesn’t have code listed (he explains why) but it explains how you could write it yourself if you wanted.</description></item><item><title>A Smattering of Selenium #110</title><link>https://www.selenium.dev/blog/2012/a-smattering-of-selenium-110/</link><pubDate>Tue, 14 Aug 2012 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2012/a-smattering-of-selenium-110/</guid><description>Dear body; what time zone are you in?
Ah well, until that battle resolves itself, here are some links.
Firefox the Clear Winner for Automated Testing has a wonderfully SEO friendly title, but really is just some cool usage graphs for their system. Extrapolate beyond that at your own risk. Task Automation FTW! — make your application installable! I did something like this a decade ago (also using python) but finding something in my own blog seems a harder challenge than it should be.</description></item><item><title>A Smattering of Selenium #109</title><link>https://www.selenium.dev/blog/2012/a-smattering-of-selenium-109/</link><pubDate>Mon, 13 Aug 2012 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2012/a-smattering-of-selenium-109/</guid><description>Going to be on an airplane for the better part of the next day, so will likely miss some links … unless I am tagged on twitter with it.
Introducing The Driver Binary Downloader Maven Plugin For Selenium solves a problem that has been solved a couple times but this seems the slickest. Normally I would suggest just using Chef/Puppet for this but it makes sense in the Maven context. I think.</description></item><item><title>A Smattering of Selenium #108</title><link>https://www.selenium.dev/blog/2012/a-smattering-of-selenium-108/</link><pubDate>Tue, 07 Aug 2012 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2012/a-smattering-of-selenium-108/</guid><description>Apparently the links are slowing down for the summer?
Ralph Bodenner talks about New Relic’s experiences at the SF Continuous Delivery meetup Xelenium: Security Testing with Selenium! is kinda an interesting use case Introducing mobile browser automation from/with Opera A minimal WebDriver based DSL is a bit of an experiment Testing Chef Cookbooks is something you didn’t think you needed to think about NASA’s github is not Se focused, but could help you build your own Mars rover WordPress Performance is a nice deck with lots of graphs and pictures Principles of Agile Test Automation outlines 4 principles and how they can often compete with each other Cucumber.</description></item><item><title>A Smattering of Selenium #107</title><link>https://www.selenium.dev/blog/2012/a-smattering-of-selenium-107/</link><pubDate>Wed, 01 Aug 2012 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2012/a-smattering-of-selenium-107/</guid><description>Back on the train again. Wow, the highway is screwed today.
The Automation Litmus Test is one that most companies face, but now it has a name
Okay, who has more info on the bots mentioned in Meet the ‘bots’ that edit Wikipedia? Highly doubt that they are Se powered, but it is a fun mental image
Custom PHPUnit Annotations is useful magic if you are building out a framework</description></item><item><title>A Smattering of Selenium #106</title><link>https://www.selenium.dev/blog/2012/a-smattering-of-selenium-106/</link><pubDate>Tue, 31 Jul 2012 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2012/a-smattering-of-selenium-106/</guid><description>In case you are curious, the train just went past my old neighbourhood.
Marionette – The Future of FirefoxDriver in Selenium is a project that has been hinted at here before I think, but this is its coming out party. Oh. And its the future of the Firefox driver. Now, what I need is an A-Team t-shirt… FlynnID 0.2 changes its config format. I don’t play around with Grid much (at all) but I’ve been told that you need this if you are going to have Android devicii attached to the grid.</description></item><item><title>A Smattering of Selenium #105</title><link>https://www.selenium.dev/blog/2012/a-smattering-of-selenium-105/</link><pubDate>Mon, 30 Jul 2012 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2012/a-smattering-of-selenium-105/</guid><description>This was supposed to go out Friday, but the flu bug I picked up decided to move the schedule about somewhat.
As Se marches towards being a W3C standard, the sort of thing in OAuth and API Providers: Come on guys. scares me more and more. Why WP_Error Sucks. Intelligent error handling is hard. Especially when you have a legacy install base to deal with. A nice little rant. Normally you see lists from people about books individuals want to see written, but Heroku has gone one step further and has released Contribute a Dev Center Article of articles they want to see written about how to use their stuff.</description></item><item><title>A Smattering of Selenium #104</title><link>https://www.selenium.dev/blog/2012/a-smattering-of-selenium-104/</link><pubDate>Tue, 24 Jul 2012 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2012/a-smattering-of-selenium-104/</guid><description>I think everyone is on holidays right now…
Firefox 15 plugs the add-on leaks — Hey look! Openness from Mozilla! I’m not kidding when I say I want to see more of these; from all browser vendors. JUnit Oath — when geeks collide! Integration Tests With Cucumber-Jvm, Selenium and Maven is nice in that is shows the use of profiles (which is pretty much maven’s killer feature) but it uses Se-RC.</description></item><item><title>A Smattering of Selenium #103</title><link>https://www.selenium.dev/blog/2012/a-smattering-of-selenium-103/</link><pubDate>Fri, 20 Jul 2012 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2012/a-smattering-of-selenium-103/</guid><description>Seems I had this all ready to go yesterday… oh, and Happy Birthday Jim Evans — maintainer of IE and C# driver. If also a day late.
Migrating Unit Tests from Selenium to Watir Webdriver is less about migrating rather than a quick overview of Watir HttpWatch 8.4: Supports Firefox 14 and Selenium appears to be http traffic monitor — minus a proxy sms is a quick script which will send an sms from the commandline — using Se as the means of doing it Buster.</description></item><item><title>A Smattering of Selenium #102</title><link>https://www.selenium.dev/blog/2012/a-smattering-of-selenium-102/</link><pubDate>Tue, 17 Jul 2012 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2012/a-smattering-of-selenium-102/</guid><description>Apparently my body isn’t quite on left coast time…
Butter Performance is a nice experience report on making a [big] html table behave. All sorts of headaches this would cause for automation. I’m now starting to think more about caching since some of that information is included in HAR files. So if you are automating against a Rails site, Advanced Caching in Rails: Revised could be of values Scaling lessons learned at Dropbox, part 1 is another fun experience report including a bit of hints at Dropbox’s own version of Netflix’s Chaos Monkey Finding the broken links in a webpage using Selenium is Se-RC, but the idea is sound.</description></item><item><title>A Smattering of Selenium #101</title><link>https://www.selenium.dev/blog/2012/a-smattering-of-selenium-101/</link><pubDate>Fri, 13 Jul 2012 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2012/a-smattering-of-selenium-101/</guid><description>Really? A drought for most of the week and now I’ve got a queue again in the span of 3 hours?
Developing RESTful Web APIs with Python, Flask and MongoDB is toolchain dependent, but likely enough cross-tool-ism to be worth a quick click through The cool part of Jasmine Testing With Sauce Labs isn’t necessarily the Jasmine part, but the Sauce Connect Puppet part. Though Jasmine is high on my cool list.</description></item><item><title>A Smattering of Selenium #100</title><link>https://www.selenium.dev/blog/2012/a-smattering-of-selenium-100/</link><pubDate>Mon, 09 Jul 2012 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2012/a-smattering-of-selenium-100/</guid><description>Century!
Event 1028 – Automatic Download Blocking looks like something that could be useful to have tucked away in your head somewhere I think I said I wasn’t going to link to headless gem posts, but I don’t think I’ve linked to one about Cucumber. Cucumber running headless Selenium with Jenkins (the easy way); fixed Errorception, and things like it, are the next wave of infrastructure to come I think now that things like BrowserMob Proxy are becoming mainstream-ish-er I’m not really sure of the difference between NPageObject.</description></item><item><title>A Smattering of Selenium #99</title><link>https://www.selenium.dev/blog/2012/a-smattering-of-selenium-99/</link><pubDate>Fri, 06 Jul 2012 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2012/a-smattering-of-selenium-99/</guid><description>With the queue flushed we’ll go back to our regular random posting schedule
Etsy Code as Craft: The Other Part of Software Architecture with Coda Hale – Code as Craft talks are generally good All the Atlassian Summit 2012 talks. I love this trend. Perception Of Performance discusses the whole ‘OMG CHOME IS HELLA FAST ON IOS!!!!!!’ madness. As the last line of the article says, I present to you, the power of marketing!</description></item><item><title>A Smattering of Selenium #98</title><link>https://www.selenium.dev/blog/2012/a-smattering-of-selenium-98/</link><pubDate>Mon, 02 Jul 2012 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2012/a-smattering-of-selenium-98/</guid><description>Happy day off Canuckistan! I’ll be in California in two weeks; here is my schedule — come by and chat
Selenium Rc to Webdriver Migration – Part2 is included mainly for the IE bit. Busted SSL certificate? Don’t work around the problem — fix it! Can’t find an element? Synchronize properly — don’t just bap it in the face with the magic implicit wait wand… Google I/O 2012 Videos won’t give you the loot attendees got, just the content.</description></item><item><title>A Smattering of Selenium #97</title><link>https://www.selenium.dev/blog/2012/a-smattering-of-selenium-97/</link><pubDate>Fri, 29 Jun 2012 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2012/a-smattering-of-selenium-97/</guid><description>Yes. I know. I missed a day. But 13 in a row was a good run!
Free Automated Cross-Browser JavaScript Testing is a pretty standard ‘here is how you do it’ article — until you get to the IE section. It has a trick I don’t think I’ve seen yet. If you don’t want to use a Proxy to generate HAR files, you can use NetExport in your Firefox profile to save things locally, or sent them to a remote server as explained in Automate Page Load Performance Testing with Firebug and Selenium.</description></item><item><title>A Smattering of Selenium #96</title><link>https://www.selenium.dev/blog/2012/a-smattering-of-selenium-96/</link><pubDate>Wed, 27 Jun 2012 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2012/a-smattering-of-selenium-96/</guid><description>Blech. Supposed to go car shopping today. Any car brands want to sponsor my wife with a car so I can do something productive? Worth a shot…
jbehave-selenium is a sample project that uses, unsurprisingly, jbehave and selenium. Sample projects are outstanding. Just as samples are good, so are playgrounds. It’s playtime – Light Table Playground released And try jasmine! Announcing Joyride is another ‘browser automation without programming as a service’ site Announcing pytest-mozwebqa 1.</description></item><item><title>A Smattering of Selenium #95</title><link>https://www.selenium.dev/blog/2012/a-smattering-of-selenium-95/</link><pubDate>Tue, 26 Jun 2012 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2012/a-smattering-of-selenium-95/</guid><description>Ok twitterverse. After 2 weeks of very few links a day you explode.
Testing JSF with Arquillian and Selenium apparently will save the world. GhostDriver: almost 50% is an update on something that got a bit of momentum at SeConf2012 Building and profiling high performance systems with Iago is getting a bump by being released at/during Velocity. Not browser based, but what its being used for doesn’t need browsers. Testing geolocation with capybara + selenium + firefox is an interesting trick to address something I haven’t thought of needing yet.</description></item><item><title>A Smattering of Selenium #94</title><link>https://www.selenium.dev/blog/2012/a-smattering-of-selenium-94/</link><pubDate>Mon, 25 Jun 2012 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2012/a-smattering-of-selenium-94/</guid><description># sudo wget coffee &amp;gt; adam
Selenium-RC Commands is a mindmap of all the commands in Se-RC. (Unsurprising really.) I keep meaning to do this for WebDriver.
quacken is a script for grabbing OFX files from Quicken it seems
What’s that? You weren’t happy with one of the six PHP WebDriver clients that were out there already? Have another one — Nearsoft/PHP-SeleniumClient. It’d be spooky what would happen if we all got together on this.</description></item><item><title>A Smattering of Selenium #93</title><link>https://www.selenium.dev/blog/2012/a-smattering-of-selenium-93/</link><pubDate>Fri, 22 Jun 2012 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2012/a-smattering-of-selenium-93/</guid><description>Did I say 8 days in a row yesterday? I meant 9. Good thing programming doesn’t require counting…
Passing ruby instance variables from Rspec to mix ins is the sort of nonsense you need to do when framework writing. Scared yet? (But it is fun…) Rspec, page objects and user flows is the experiment that likely led to the link above puppet-sauceconnect is a puppet module for moving Sauce’s Sauce Connect daemon onto remote nodes.</description></item><item><title>A Smattering of Selenium #92</title><link>https://www.selenium.dev/blog/2012/a-smattering-of-selenium-92/</link><pubDate>Thu, 21 Jun 2012 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2012/a-smattering-of-selenium-92/</guid><description>What’s that? Eight days in a row? That’s right…
lolcommits seems almost funny enough to be a good idea A vision for Cucumber 2.0 is rather interesting Install Firefox on Amazon Linux X86_64 Compiling GTK+ is not something I have had to do. But then again, I haven’t tried. Nerrvana is yet another Selenium-As-A-Service provider. Looks like they are taking the ‘upload to our servers and run as a scheduled job’ approach rather than real-time.</description></item><item><title>A Smattering of Selenium #91</title><link>https://www.selenium.dev/blog/2012/a-smattering-of-selenium-91/</link><pubDate>Wed, 20 Jun 2012 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2012/a-smattering-of-selenium-91/</guid><description>As you’ll start to see by the timestamps of things towards the end, I’m running out of ‘new’ stuff and am pulling from the queue now.
Fairly certain I’ve linked to this before, but seleniumwrapper adds some syntacitcal sugar around the Python bindings. Though not sure that it makes it clearer to me. What the heck is an xrange? is today’s Python internal geekiness post Functional Automated Testing Best Practices with Selenium WebDriver is the video version of these slides (wow I dislike this html slide deck trend…) All the WWDC 2012 Session Videos are now up.</description></item><item><title>A Smattering of Selenium #90</title><link>https://www.selenium.dev/blog/2012/a-smattering-of-selenium-90/</link><pubDate>Tue, 19 Jun 2012 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2012/a-smattering-of-selenium-90/</guid><description>Eventually I’ll get back on the once-a-week schedule. But not today!
Falsehoods Programmers believe about Time. Time is hard; let’s go shopping! Speaking of hard. Concurrency is not Parallelism (it’s better) (http://concur.rspace.googlecode.com/hg/talk/concur.html) — also has gophers Did Netflix actually Open Source Army of Cloud Monkeys? I don’t see anything on their github account (and that is the trendy place to release stuff these days) Need I say more? I’ve used this trick a couple times Python introspection – how to check current module / line of call from within function Ah-ha!</description></item><item><title>A Smattering of Selenium #89</title><link>https://www.selenium.dev/blog/2012/a-smattering-of-selenium-89/</link><pubDate>Mon, 18 Jun 2012 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2012/a-smattering-of-selenium-89/</guid><description>Figured I would get this out before the computer goes in for surgery.
Automate Page Load Performance Testing with Firebug and Selenium is not a new topic, but a timely one for me Speed up your features with a backdoor login route is not a recent post, but something I’ve had to explain to people at least once a week for the past month, so… RSpec’s New Expectation Syntax explains not only the ‘what’ of the new syntax but the ‘why’ Slides &amp;amp; Videos from LDNSE #6 does not falsely advertise itself Python Timer Class – Context Manager for Timing Code Blocks reminds me that I need to use Context Managers more often Overloading Python list comprehension is an interesting little experiment.</description></item><item><title>A Smattering of Selenium #88</title><link>https://www.selenium.dev/blog/2012/a-smattering-of-selenium-88/</link><pubDate>Fri, 15 Jun 2012 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2012/a-smattering-of-selenium-88/</guid><description>Five days and fifty links later…
I’m working on a larger-ish rant on headless browsers, but until then there is Jasmine Headless WebKit Not 2. Not 4. But Three ways to generate test data for your ruby automated tests Downloading things is a pain, but Waiting for watir-webdriver downloads (and determining the file name) has a solution Use classes in Python? Of course you do! Under the hood of Python class definitions — but as the warning states, If the prospect of pondering the metaclass of the metaclass of your class makes you feel nauseated, you better stop now.</description></item><item><title>A Smattering of Selenium #87</title><link>https://www.selenium.dev/blog/2012/a-smattering-of-selenium-87/</link><pubDate>Thu, 14 Jun 2012 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2012/a-smattering-of-selenium-87/</guid><description>Avoiding punching things about software packaging by doing the 4th!!!! smattering in row.
Python Decorators is an attempt at picking up a stick the right way A lawnchair is sorta like a couch except smaller and outside. And a persistence solution for HTML5 apps. If your apps persist data, checking them in the browser is. Not. Enough. Atlassian is building a performance tool off of WebDriver including Page Objects called soke I wonder if we should fail scripts that use vendor prefixes…How to Unprefix -Webkit-Device-Pixel-Ratio The last paragraph in Android unittests now have LOLcat is the sort of thing that more projects should do tl;dw: Speedily practical large-scale tests — of course, browsers are going to slow things in any event, but things to think about… Continuous Deployment as a Remedy for Burnout — hadn’t thought about it this way, but yup.</description></item><item><title>A Smattering of Selenium #86</title><link>https://www.selenium.dev/blog/2012/a-smattering-of-selenium-86/</link><pubDate>Wed, 13 Jun 2012 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2012/a-smattering-of-selenium-86/</guid><description>Look at that! 3 days in a row, and the boy isn’t even gone to school yet and I’ve hit ‘publish’
Most people know about this already, but SeleniumConf has its own YouTube channel — which has all of the 2012 videos on it now. How to Dynamically Add Android Support to Selenium Server at Runtime Python Iteration is a beginner talk about, well, iterating in Python. In ways that you would expect (for) and ways that you wouldn’t (generators) Sleepy Automated Tests talks about polling loops.</description></item><item><title>A Smattering of Selenium #85</title><link>https://www.selenium.dev/blog/2012/a-smattering-of-selenium-85/</link><pubDate>Tue, 12 Jun 2012 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2012/a-smattering-of-selenium-85/</guid><description>Two days in a row! Take that doubters!
Automated Software Testing: An Example of a Working Solution is an interesting take on designing an automation system for the US DoD. It sure as heck isn’t how I would do it, but I can understand how this context might lead to this solution. And it seems like it is Eclipse based which is even worse a decision. 🙂 5 Tips on Finding a Mobile Job in Toronto is pretty focused, but also applies to non-mobile jobs outside of Toronto.</description></item><item><title>A Smattering of Selenium #84</title><link>https://www.selenium.dev/blog/2012/a-smattering-of-selenium-84/</link><pubDate>Mon, 11 Jun 2012 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2012/a-smattering-of-selenium-84/</guid><description>What? Its only been 3 months since the last one. Sheesh.
Sorry about being a G+ article, but DOM Ready discusses briefly about how to build your page in terms of order of events. Of course, if you read the comments it is very much buyer beware, but…
I’ve been fixating a bit on operational dashboards the last little while and Enterprise Operational Intelligence has a couple good ones
Looking to use BrowserID?</description></item><item><title>Announcing Selenium 2.22</title><link>https://www.selenium.dev/blog/2012/announcing-selenium-2-22/</link><pubDate>Tue, 29 May 2012 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2012/announcing-selenium-2-22/</guid><description>It’s been a while since the last Selenium release, but I’m happy to announce that Selenium 2.22 is now available for download. This is a big release for us and features two major changes.
The first is that Selenium 2.22 is the first version that requires Java 6 in order to run. This has been the case for the Selenium Server for some time, but this is the first time the client code has required Java 6.</description></item><item><title>Selenium Conf: Community</title><link>https://www.selenium.dev/blog/2012/selenium-conf-community/</link><pubDate>Tue, 27 Mar 2012 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2012/selenium-conf-community/</guid><description>In this series of blog posts we’ve introduced one of the keynotes and talked about some of the great presentations you’ll see at Selenium Conf ’12, but so far we’ve missed the most important aspect of the entire event: you.
For me, one of the highlights of any conference is the chance to meet other members of the community, make new friends and talk about all things interesting (and perhaps even tangentially related to the conference!</description></item><item><title>Selenium Conf: Speakers</title><link>https://www.selenium.dev/blog/2012/selenium-conf-speakers/</link><pubDate>Mon, 26 Mar 2012 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2012/selenium-conf-speakers/</guid><description>I may be biased, but I think Selenium Conf ’12 is going to be great. There are talks aimed at every level of Selenium user. We’ve got experience reports, so you can learn from the trials and tribulations of others. There are talks about using Selenium in unusual ways, such as performance testing, or automated security testing, so you can see new ideas and approaches.
There are technical talks, such as the one Jim Evans is giving on lessons learned from developing the IE driver, so you can learn a little bit more about how Selenium works and Luke Daley’s talk about Geb is bound to be fun.</description></item><item><title>Selenium Conf Keynotes: Liz Keogh</title><link>https://www.selenium.dev/blog/2012/selenium-conf-keynotes-liz-keogh/</link><pubDate>Sun, 25 Mar 2012 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2012/selenium-conf-keynotes-liz-keogh/</guid><description>The tickets for Selenium Conf ’12 are still on sale for about another week, so there’s still time for you to buy your tickets. In case you’ve not already gone to the conference site to see the great line up, this week we’ll be letting you know what to expect!
I’m really pleased to announce that Liz Keogh, who is a core member of the Behaviour Driven Development (BDD) community and is one of the stalwarts of the London Agile community, as well as a haiku poet, is going to be one of our keynotes!</description></item><item><title>A Smattering of Selenium #83</title><link>https://www.selenium.dev/blog/2012/a-smattering-of-selenium-83/</link><pubDate>Wed, 14 Mar 2012 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2012/a-smattering-of-selenium-83/</guid><description>Well, might not be in Florida, but how about them juggernaut Blue Jays?
WebDriver: capture JS errors while running tests is a JS way of capturing JS errors on a page Selenium reports – our take is a pretty detailed report on one company’s drive for prettier report output Hmmm. How do we get a Selenium coderwall achievement? page-objects is A basic framework for running automated tests using WebDriver, TestNG &amp;amp; Gradle selenese-runner is a js runner of Selenese scripts including a JUnit style reporter.</description></item><item><title>A Smattering of Selenium #82</title><link>https://www.selenium.dev/blog/2012/a-smattering-of-selenium-82/</link><pubDate>Tue, 13 Mar 2012 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2012/a-smattering-of-selenium-82/</guid><description>Someone explain to me why I’m in Toronto and not Florida?
Couldn’t make it to Pycon last week? There are videos of the session! Release Histories for all Major Browsers is just interesting from a historical perspective Interacting with web pages using Selenium WebDriver for C# is pretty basic but does include the all-important security settings to make IE behave-ish page-object 0.6.2 released is not just a release announcement but has some nice examples of page objects in ruby autoenv is a magic hack for having auto-firing scripts at a directory level.</description></item><item><title>A Smattering of Selenium #81</title><link>https://www.selenium.dev/blog/2012/a-smattering-of-selenium-81/</link><pubDate>Mon, 12 Mar 2012 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2012/a-smattering-of-selenium-81/</guid><description>Its March Break (at least here) which means its also Catch Up Week. An extra long Smattering every day!
Generally I reccomend to people not to automate file uploads, but sometimes they are unavoidable. Selenium Tips: Uploading Files in Remote WebDriver explains how one might go about things in WebDriver HTTP Status Cats isn’t new, but is still funny. httpstatus.es has the same information, but organized slightly differently. Now for someone to make a mashup of the two Coypu appears to be a .</description></item><item><title>Selenium Conference 2012</title><link>https://www.selenium.dev/blog/2012/selenium-conference-2012/</link><pubDate>Fri, 24 Feb 2012 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2012/selenium-conference-2012/</guid><description>Good news, everybody! Selenium Conf ’12 is getting closer! We recently selected the speakers for the conference, and it’s going to be a great mix of talks, spanning the full range of subjects from the very practical to the deeply technical. I’m promised that there will be robots.
Selenium Conf isn’t just about the planned talks, it’s also about the community. On the final day, there will be an unconference, so if there’s something you feel passionately about and feel the world should know, now’s your chance.</description></item><item><title>Support for Ancient Browsers</title><link>https://www.selenium.dev/blog/2012/support-for-ancient-browsers/</link><pubDate>Fri, 24 Feb 2012 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2012/support-for-ancient-browsers/</guid><description>The first code checked into the Selenium project’s public repository was in November, 2004. We’re now in 2012. In the intervening years there have been many browsers released. The last browser we officially stopped supporting was Firefox 2.0, and it’s time to review the list of browsers again.
We periodically review the list of supported browsers as the more changes there are between the oldest version of a browser that we support and the most recent, the harder it is for us to add new features and maintain those that already exist.</description></item><item><title>A Note About the Cybervillains SSL Certificate</title><link>https://www.selenium.dev/blog/2012/a-note-about-the-cybervillains-ssl-certificate/</link><pubDate>Wed, 08 Feb 2012 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2012/a-note-about-the-cybervillains-ssl-certificate/</guid><description>If you&amp;#8217;re using Selenium RC to test websites hosted on a secure site (accessed using a URL starting with HTTPS), we strongly recommend that you upgrade to Selenium 2.19. This is because the Cybervillains certificate in previous versions will expire soon, and has been replaced in 2.19 with an updated one.
Our thanks to Patrick Lightbody, Ivan De Marino and Mark Watson and Neustar for taking providing the new certificate and the patch!</description></item><item><title>A Smattering of Selenium #80</title><link>https://www.selenium.dev/blog/2012/a-smattering-of-selenium-80/</link><pubDate>Wed, 08 Feb 2012 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2012/a-smattering-of-selenium-80/</guid><description>I should have learned not to boast about getting caught up with links.
Automating BrowserID with Selenium is pretty awesome. (As is BrowserID.) Now if this was only installable via pip or easy_install… Ruby Trick Shots – heed the disclaimer; not an exercise in Ruby best practices Keep It Functional – iPhone Test Automation talks about another automation framework for mobile. At some point Selenium is going to grow Objective-C bindings I fear.</description></item><item><title>Announcing Selenium 2.19: the Prancing Unicorn release</title><link>https://www.selenium.dev/blog/2012/announcing-selenium-2-19-the-prancing-unicorn-release/</link><pubDate>Wed, 08 Feb 2012 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2012/announcing-selenium-2-19-the-prancing-unicorn-release/</guid><description>You might be pleased to hear that Selenium 2.19 has been released (download it from here!). There’s one big user facing changing that we’d like to tell you about: the webdriver-backed selenium can now be used in supported languages.
By providing this capability, it’s possible to migrate from RC to the WebDriver APIs without rewriting all your tests in one fell swoop (which must be a Good Thing, right?) An example of how to use it in Python would be:</description></item><item><title>A Smattering of Selenium #79</title><link>https://www.selenium.dev/blog/2012/a-smattering-of-selenium-79/</link><pubDate>Thu, 02 Feb 2012 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2012/a-smattering-of-selenium-79/</guid><description>The only links left now are ones currently open in tabs right now. Hurray!
November’s SFSE was Continuous Deployment At Mozilla: slides, video Practical Web Test Automation is a book available in both a free and paid editions. I haven’t looked at it so can’t comment how good or bad it is. The Why, What and How of Software Test Automation isn’t too horrible, though I don’t like the word ‘guideline’ and of course the measurement section at the bottom is complete hokum.</description></item><item><title>A Smattering of Selenium #78</title><link>https://www.selenium.dev/blog/2012/a-smattering-of-selenium-78/</link><pubDate>Wed, 01 Feb 2012 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2012/a-smattering-of-selenium-78/</guid><description>Look! A light at the end of the tunnel!
ASP.NET MVC + Selenium + IISExpress – You don’t see too many Windows how-to’s. Not sure if they just don’t get tweeted about or is more a sign of that community. Write Logs for Machines, use JSON is a nice idea. I wonder if (when) the major CI containers will land on a pseudo-standard for consuming JSON Remote File Upload using Selenium 2’s FileDetectors shows yet another area I need to figure out in WebDriver (not Selenium 2 as Santi so stubbornly referred to it as 🙂 Janky is GitHub’s CI server.</description></item><item><title>A Smattering of Selenium #77</title><link>https://www.selenium.dev/blog/2012/a-smattering-of-selenium-77/</link><pubDate>Tue, 31 Jan 2012 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2012/a-smattering-of-selenium-77/</guid><description>No. Really. A Smattering every day this week and I’ll have the link queue cleared.
Go!
Mentioned in #74, Automating Web Performance data collection with BrowserMob Proxy and Selenium is more than just a link to GitHub Of course you are using the excellent Requests module rather than urllib2 which ships with Python; but are you using envoy instead of subprocess? Grabbing Screenshots of Failed Selenium Tests uses some JUnit magic.</description></item><item><title>A Smattering of Selenium #76</title><link>https://www.selenium.dev/blog/2012/a-smattering-of-selenium-76/</link><pubDate>Wed, 25 Jan 2012 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2012/a-smattering-of-selenium-76/</guid><description>Post ten links, find seven more to add to the queue.
Selenium Page Objects and Abstraction is one person’s attempt at writing down how they describe POs Running Geb specs using a separate driver profile to test mobile views in Grails shows how to create a custom Firefox profile in WebDriver Django and Selenium on Jenkins/Hudson (Headless) is yet another tutorial around xvfb but has a trick at the end I don’t think I’ve seen Python’s concurrent.</description></item><item><title>A Smattering of Selenium #75</title><link>https://www.selenium.dev/blog/2012/a-smattering-of-selenium-75/</link><pubDate>Mon, 23 Jan 2012 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2012/a-smattering-of-selenium-75/</guid><description>And home. Which mean 100% more internets! Or at least 98% more.
As things like native-driver become more prevalent, knowing how to do Continuous Integration for iOS projects with Jenkins CI will become more important Chocolatey seems like a nice and big step towards managing Windows build slaves SST (Selenium Simple Test) comes out of Ubuntu and has a quick introductory screencast.
Automate Salesforce Config Changes with Selenium is a contest.</description></item><item><title>A Smattering of Selenium #74</title><link>https://www.selenium.dev/blog/2012/a-smattering-of-selenium-74/</link><pubDate>Wed, 18 Jan 2012 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2012/a-smattering-of-selenium-74/</guid><description>It is kinda hard to do these without reliable internet… dear hotels, fix. your. internet.
Testing Facebook Login with Selenium has some nice Python helpers to dealing with Facebook auth VBS WebDriver – ummm, wtf?! Python Browsermob Proxy Library – the best code is code you don’t have to write yourself. (Thanks David!) I saw A Few of My Favorite (Python) Things at CodeMash last week and learned a few things def test = new BDDMadeEasy(Selenium,EasyB,Groovy) is a writeup from a recent presenter at the Greater Boston Selenium User Group Receive SMS alerts when a Selenium test fails seems like both a good idea and a bad one at the same time Have you always wanted to automate minesweeper?</description></item><item><title>A Smattering of Selenium #73</title><link>https://www.selenium.dev/blog/2012/a-smattering-of-selenium-73/</link><pubDate>Thu, 05 Jan 2012 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2012/a-smattering-of-selenium-73/</guid><description>Two Ruby gems
rwebspec-webdriver – Executable functional specification for web applications in RSpec syntax and Selenium-WebDriver loadable_component – Ruby implementation of LoadableComponent A three-parter on building a framework showing there is more than one way to skin the framework cat.
Testing Concepts Base Classes Putting it all together Another three-parter on Is the Cost of Continuous Integration Worth the Value on Your Program? – part 1, part 2, part 3</description></item><item><title>Selenium 2.16 Released: Welcome to 2012!</title><link>https://www.selenium.dev/blog/2012/selenium-2-16-released-welcome-to-2012/</link><pubDate>Thu, 05 Jan 2012 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2012/selenium-2-16-released-welcome-to-2012/</guid><description>It’s been a while since we last blogged about a Selenium release. Since the release of 2.0, we’ve been attempting to give you a fresh and shiny Selenium release every week (though, in reality, we’re managing to get you one every 10 days on average). This allows you to pick the version that’s most suitable for you and your teams, but provides a route for quick feedback on how we’re doing.</description></item><item><title>A Smattering of Selenium #72</title><link>https://www.selenium.dev/blog/2012/a-smattering-of-selenium-72/</link><pubDate>Tue, 03 Jan 2012 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2012/a-smattering-of-selenium-72/</guid><description>January means its time to escape from under the deadlines I found myself under during December so some of this stuff is a month old (or older!). Hopefully it is still interesting though.
Localizing automation well is something I’ve seen people struggle with. Creating Multi-Language Web Applications with Zend_Translate is a possible solution for PHP folks. Using Spinach with Selenium and of course Spinach seems to be a different implementation of Cucumber.</description></item><item><title>Announcing Selenium Conf ’12</title><link>https://www.selenium.dev/blog/2011/announcing-selenium-conf-12/</link><pubDate>Fri, 09 Dec 2011 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2011/announcing-selenium-conf-12/</guid><description>The community around Selenium is the thing that really makes the Selenium project special. Last year, we held the first official Selenium Conference in San Francisco, and it was both great fun and a huge success. It is therefore with great pleasure that we are announcing Selenium Conf ’12! It’ll be taking place in London from the 16th to the 18th April, and we’re really looking forward to seeing you all there!</description></item><item><title>A Smattering of Selenium #71</title><link>https://www.selenium.dev/blog/2011/a-smattering-of-selenium-71/</link><pubDate>Mon, 28 Nov 2011 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2011/a-smattering-of-selenium-71/</guid><description>Looking like there might also be one later in the week too…
As we start to transistion the web over the HTML5, I keep thinking about incorporating some ‘static’ checks into Se scripts. HTML5 Accessibility Chops: using nested figure elements explains some good (and bad) ways to use Jim took my nudging the organizing tests post I linked to last time and expanded on Organize Your Tests, Part II: Use Metadata!</description></item><item><title>A Smattering of Selenium #70</title><link>https://www.selenium.dev/blog/2011/a-smattering-of-selenium-70/</link><pubDate>Wed, 23 Nov 2011 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2011/a-smattering-of-selenium-70/</guid><description>That’s it for this week. 🙂
For TestMate / Java folks, TextMate-Bundle-Selenium-Java could be interesting. We’ve all made Oopses when writing / interpreting Se scripts, so it is important to remember that Mistakes: Transparency is Best Organizing scripts is one of those topics that gets both too much and not enough attention. Organizing Your Tests adds to the discussion — though completely omits using ‘tags’ (which his product supports…) Not sure how this will affect automation of Android or not, but still pretty cool.</description></item><item><title>A Smattering of Selenium #69</title><link>https://www.selenium.dev/blog/2011/a-smattering-of-selenium-69/</link><pubDate>Tue, 22 Nov 2011 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2011/a-smattering-of-selenium-69/</guid><description>In honor of this edition I provide…
…in which I also date myself.
CITCon is another one of those conferences I should go to but haven’t. Yet! 7 continuous integration ideas from CITCon is a quick list from the most recent iteration. Testing Facebook authentication with Rails 3 Cucumber, Capybara, Selenium has a nice little trick to get Facebook to authenticate back to your Rails stack. pennyworth is a ‘continuous packaging system’ which seems like an interesting description.</description></item><item><title>A Smattering of Selenium #68</title><link>https://www.selenium.dev/blog/2011/a-smattering-of-selenium-68/</link><pubDate>Mon, 21 Nov 2011 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2011/a-smattering-of-selenium-68/</guid><description>Its been almost a month, so time for a flurry of Smatterings.
Maven has a bad reputation in some circles (ignoring for a second that you are using Java…), but should you be using it the QuickStart Archetype looks interesting. Why Your Monitoring Is Lying To You talks about types of logging which are valuable both from a Continuous Delivery perspective and for checking the health of your application during long script runs.</description></item><item><title>A Smattering of Selenium #67</title><link>https://www.selenium.dev/blog/2011/a-smattering-of-selenium-67/</link><pubDate>Thu, 27 Oct 2011 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2011/a-smattering-of-selenium-67/</guid><description>Spinach is a Cucumber-esque BDD framework that was advertised on twitter as having ‘less regex magic’. Not sure if it has grown Se support yet, but I have no doubt that it will soon. Coping With Big C.I. is full of stuff that is useful for even Small C.I. Sane AJAX Testing in Selenium uses ‘reintroduced page loading’ for what I would call a ‘latch’ but describes it better I think.</description></item><item><title>Selenium 2.9 Released</title><link>https://www.selenium.dev/blog/2011/selenium-2-9-released/</link><pubDate>Thu, 20 Oct 2011 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2011/selenium-2-9-released/</guid><description>We’re pleased to announce the release of Selenium 2.9. As well as improving the stability of Grid under high loads, we’ve added an experimental (and temporary!) feature that allows the Firefox driver to use a different mechanism for determining when a page is loaded. This is designed to handle the case where the driver appears to hang, as it’s waiting for all incoming requests to complete before continuing. How to enable this mode is listed in the changelog.</description></item><item><title>A Smattering of Selenium #66</title><link>https://www.selenium.dev/blog/2011/a-smattering-of-selenium-66/</link><pubDate>Wed, 19 Oct 2011 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2011/a-smattering-of-selenium-66/</guid><description>Aside from one of the dog’s tummy making noises that imply a big mess to clean up later, this scheduling thing seems to be working out.
Heard someone talk about doing bitmap comparisons last week somewhere. Adaptive Images tricks I suspect are going to become more commonplace. Good luck with that. Se is best at interaction, structure and content checks; not does-it-look-the-way-some-human-intended. Robots where robots should be used. Humans where humans should be used.</description></item><item><title>A Smattering of Selenium #65</title><link>https://www.selenium.dev/blog/2011/a-smattering-of-selenium-65/</link><pubDate>Tue, 18 Oct 2011 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2011/a-smattering-of-selenium-65/</guid><description>Trying something new; queuing up the catch-up post while I have time to catch-up.
I’ve been lead to believe that Functional Testing with Arquillian is a Big Deal&amp;amp;tm;. Of course, I just see a lot of Java… If one thread raises an exception, why aren’t other threads’ finally blocks called? is an interesting question with a nice answer. If you start running scripts in parallel, this, and the GIL is something to keep in mind.</description></item><item><title>A Smattering of Selenium #64</title><link>https://www.selenium.dev/blog/2011/a-smattering-of-selenium-64/</link><pubDate>Mon, 17 Oct 2011 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2011/a-smattering-of-selenium-64/</guid><description>How did I fall behind again already?!?!
This is a pretty good deck. Automation Isn’t All Shiny Toys If your work is divided in time-based goals then providing videos of the end result is a fantastic idea. See Dave’s Q3/2011 in review. The last two screencasts directly relate to Se The training wheels came off is outstanding! I’ve been saying this around Se-IDE for years. If you have tried automation-in-anger with Python, then you have likely spent some time swearing at the GIL.</description></item><item><title>Selenium 2.8 Released</title><link>https://www.selenium.dev/blog/2011/selenium-2-8-released/</link><pubDate>Thu, 06 Oct 2011 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2011/selenium-2-8-released/</guid><description>In keeping with our (roughly) weekly releases, Selenium 2.8 was released today (and on Maven too), with a *huge* list of bug-fixes! As well as improved stability, if you’re using the Java API, this release adds the ability to upload files to a RemoteWebDriver server (see RemoteWebDriver.setFileDetector (http://selenium.googlecode.com/svn/trunk/docs/api/java/org/openqa/selenium/remote/RemoteWebDriver.html#setFileDetector(org.openqa.selenium.remote.FileDetector))).
Particular thanks have to go out to our two newest committers, Alexei Barancev and Ajay Kemparaj, for the copious bug-fixes they’ve contributed!</description></item><item><title>A Smattering of Selenium #63</title><link>https://www.selenium.dev/blog/2011/a-smattering-of-selenium-63/</link><pubDate>Mon, 03 Oct 2011 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2011/a-smattering-of-selenium-63/</guid><description>Watir to WebDriver: Unit Test Frameworks – Well, its ‘big’ news. Of course, Watir can use WebDriver so they didn’t have to port their scripts to a different API (I sure hope they have the API well abstracted away from their scripts). And of course the title of the post implies that Facebook thinks that Watir/Selenium scripts are ‘Unit’ tests which is suspect at best… Selenium tests for Jenkins — Yup; Jenkins now has a set of Se scripts for it.</description></item><item><title>A Smattering of Selenium #62</title><link>https://www.selenium.dev/blog/2011/a-smattering-of-selenium-62/</link><pubDate>Thu, 29 Sep 2011 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2011/a-smattering-of-selenium-62/</guid><description>All opinions, all the time…
It all began with Test Design for Automation which lead to Automated Test Design (riffing/ripping off Alan Page) And then through some weird Jedi mind control there was Design for *GUI* Automation which in turn led to more UI test design (once more from Alan Page) And heck, why have two articles from the same author when you can have three?! It’s (probably) a Design Problem — though I don’t think Chris has riffed off this one yet… Remember, Not Every Test Should be Automated!</description></item><item><title>A Smattering of Selenium #61</title><link>https://www.selenium.dev/blog/2011/a-smattering-of-selenium-61/</link><pubDate>Wed, 28 Sep 2011 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2011/a-smattering-of-selenium-61/</guid><description>‘These are the people in your neighbourhood…’
Like the power of WebDriver, but not the API? Watir WebDriver will get you going with the Watir API. Lots of useful stuff there. So does Alister Scott’s WatirMelon blog Sikuli Plays Angry Birds on Google Games — just because scripts that play games are fun. cukeforker is for ‘Forking cukes and VNC displays.’ First time I’ve seen a group of machines referred to as a ‘fleet’, but its appropriate.</description></item><item><title>A Smattering of Selenium #60</title><link>https://www.selenium.dev/blog/2011/a-smattering-of-selenium-60/</link><pubDate>Tue, 27 Sep 2011 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2011/a-smattering-of-selenium-60/</guid><description>This instalment of catch-up week is brought to you by the letters C and I.
The pre-scm-buildstep plugin for jenkins adds a useful step into the job workflow. Understanding your tools is important. Here is an explanation of Jenkings Action and its subtypes You think your CI setup is impressive? Check out the Apache Foundation’s Jenkins server The easiest way to get CI going is with the ubiquitious but completely unoffically Ant JUnit XML format.</description></item><item><title>A Smattering of Selenium #59</title><link>https://www.selenium.dev/blog/2011/a-smattering-of-selenium-59/</link><pubDate>Mon, 26 Sep 2011 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2011/a-smattering-of-selenium-59/</guid><description>Its been a month and a half since the last one of these, and the volume of links I have collected illustrates that. So this week is now a cleanup week.
How Browsers Work: Behind the Scenes of Modern Web Browsers seems to be one of those articles that people who automate browsers for a living should be familiar with.
100% Test Coverage is always the goal.
Continuous Deployment and Data Visualization reminds us that if some data is good, more is often better.</description></item><item><title>Selenium 2.6 Released</title><link>https://www.selenium.dev/blog/2011/selenium-2-6-released/</link><pubDate>Fri, 16 Sep 2011 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2011/selenium-2-6-released/</guid><description>If you’ve been watching this blog carefully you’ll have noticed that the last release announcement we made was for 2.3, so it may come as a surprise that we’re announcing that 2.6 has been released (even on Maven!). Don’t worry: 2.4 and 2.5 were released on time and without muss or fuss. 2.6, on the other hand has been almost three weeks brewing.
Selenium 2.6 introduces a raft of improvements and stability fixes.</description></item><item><title>A Smattering of Selenium #58</title><link>https://www.selenium.dev/blog/2011/a-smattering-of-selenium-58/</link><pubDate>Mon, 15 Aug 2011 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2011/a-smattering-of-selenium-58/</guid><description>And here we go again with more links than I thought I had collected…
There are a metric tonne of site on the internets which are on how to scam your way through a Se interview. Hiring Selenium QA people provides some fodder on how one could look for and hire Se folk.
Why I don’t use spork reminds us that pain is [sometimes] a good thing.
The Jenkins project is having a conference on October 2 in the same hotel that SeConf was held.</description></item><item><title>A Smattering of Selenium #57</title><link>https://www.selenium.dev/blog/2011/a-smattering-of-selenium-57/</link><pubDate>Mon, 08 Aug 2011 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2011/a-smattering-of-selenium-57/</guid><description>Phew. The links made it through the Lion installation.
Distributing the Same Test to Multiple Processes shows a technique for debugging flaky scripts Repeat after me: I will not automate GMail unless I am Google. Or if you will, you will do something like what is described in Verify email confirmation using Selenium. Notice that they are not using Se for it. Selenium and Nagios is something more teams should do I think.</description></item><item><title>A Quick Survey on Features</title><link>https://www.selenium.dev/blog/2011/a-quick-survey-on-features/</link><pubDate>Wed, 03 Aug 2011 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2011/a-quick-survey-on-features/</guid><description>Rather than surprising the general community in ways that we have become somewhat known for, I figured I would try something new. Actually asking about usage of things before changing them in fundamental ways.
To this end, I have created a quick(!) survey about changes that are under consideration regarding UI-Maps and how Se-IDE is opened.
The survey is only two questions, so I’m hoping for a large response. I’ll post the results next Monday (August 8, 2011).</description></item><item><title>Selenium 2.3 Released</title><link>https://www.selenium.dev/blog/2011/selenium-2-3-released/</link><pubDate>Tue, 02 Aug 2011 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2011/selenium-2-3-released/</guid><description>Continuing our new tradition of weekly releases, we’re very pleased to announce the release of Selenium 2.3. The release notes for this version are pretty slim:
Better detection of clickable areas in Firefox. Merge of Google-contributed code into the underlying javascript libraries used by the drivers. We’ve also fixed bugs, one of which was being a nuisance for users of IBM’s JRE. The complete changelog can be found in the zipped downloads or in our source tree (http://selenium.</description></item><item><title>A Smattering of Selenium #56</title><link>https://www.selenium.dev/blog/2011/a-smattering-of-selenium-56/</link><pubDate>Thu, 28 Jul 2011 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2011/a-smattering-of-selenium-56/</guid><description>Safari is starting to whinge about how many tabs I have open which means it is time for another post.
Ripple-UI is a cross-platform, mobile web application emulation environment. From RIM. Could be something interesting.
Tips From Our Codebase To Help You Write Reliable Selenium Tests has nothing I don’t violently disagree with. And makes me think we should just add Implicit Waits to the Se Server and be done with it.</description></item><item><title>Selenium 2.2 Released</title><link>https://www.selenium.dev/blog/2011/selenium-2-2-released/</link><pubDate>Tue, 26 Jul 2011 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2011/selenium-2-2-released/</guid><description>The feedback from the last release was heard loud and clear: little and often it is!
We’re proud to announce the release of Selenium 2.2. What’s new this time? For many users, this is simply a bug fix release as there are no new major features. One thing you might appreciate is better exceptions (http://selenium.googlecode.com/svn/trunk/docs/api/java/org/openqa/selenium/IllegalLocatorException.html) being thrown when xpath searches return something other than a web element when using the WebDriver APIs, and we’re continuing to tweak the emulation of user events.</description></item><item><title>A Smattering of Selenium #55</title><link>https://www.selenium.dev/blog/2011/a-smattering-of-selenium-55/</link><pubDate>Mon, 18 Jul 2011 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2011/a-smattering-of-selenium-55/</guid><description>Last week we released Se-IDE 1.1.0 which now features WebDriver formats and Se 2.1.0 was released about an hour ago. Simon will post something shortly-ish on what’s changed.
I haven’t messed around with HTML5 goodies yes, but fake-html5 seems like it could be interesting.
The Yii framework has grown WebDriver support. Now if only there were not two competing PHP implementations for them to have to choose from…
If you are using Python’s native packaging system to share your framework, then Lies, More Lies and Python Packaging Documentation on `package_data` could spare you some headache</description></item><item><title>Selenium 2.1 Released</title><link>https://www.selenium.dev/blog/2011/selenium-2-1-released/</link><pubDate>Mon, 18 Jul 2011 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2011/selenium-2-1-released/</guid><description>Now that Selenium 2 has been released, one of the goals of the project is to provide regular updates to our users and the community. The aim is for these updates to be small and manageable, incrementally addressing issues and problems raised by you. Selenium 2.1, which is launched today, marks the first of these regular, small releases.
Selenium 2.1 is largely focused on improving Grid with a host of minor improvements including better tracking of “orphaned” browser instances.</description></item><item><title>A Smattering of Selenium #54</title><link>https://www.selenium.dev/blog/2011/a-smattering-of-selenium-54/</link><pubDate>Fri, 15 Jul 2011 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2011/a-smattering-of-selenium-54/</guid><description>Two Smatterings in two days?!!? That never happens. Well, except when I get behind and have a metric tonne of links queued up.
Next week appears to be Meetup week with ones in London on Tuesday, Toronto on Wednesday and San Francisco on Thursday. It’s like we coordinated or something. (But didn’t.) Last month’s SFSE meetup was on framework design. Here is the slides and the video.
Selenium Smells goes on a bit of a rant (and provides solutions) to people putting sleeps in their code instead of proper synchronization.</description></item><item><title>A Smattering of Selenium #53</title><link>https://www.selenium.dev/blog/2011/a-smattering-of-selenium-53/</link><pubDate>Thu, 14 Jul 2011 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2011/a-smattering-of-selenium-53/</guid><description>Well, since the last Smattering there hasn’t been much in the community. Oh. Well, except for hitting the 2.0.0 milestone. Which seems like a good time to remind people that:
Selenium is the project name Selenium 1 is a project version Selenium 2 is a project version Selenium Remote Control (RC) is an API name Selenium WebDriver is an API name A person upgrades from Selenium 1 to Selenium 2 A person migrates from RC to WebDriver And with that soap boxing, here are some links for your consumption.</description></item><item><title>Selenium 2.0: Out Now!</title><link>https://www.selenium.dev/blog/2011/selenium-2-0/</link><pubDate>Fri, 08 Jul 2011 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2011/selenium-2-0/</guid><description>We are very, very pleased to announce the release of Selenium 2.0. If you’ve been waiting for a stable release since 1.0.3, now’s the chance to update. And if you do, what will you find?
For users of Selenium 1, this is a drop-in replacement. You’ll find support for modern browsers such as Firefox 5 and IE 9, as well as a wealth of bug fixes and stability improvements. That’s one reason to update, but what other reasons are there?</description></item><item><title>New ChromeDriver</title><link>https://www.selenium.dev/blog/2011/new-chromedriver/</link><pubDate>Thu, 07 Jul 2011 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2011/new-chromedriver/</guid><description>The ChromeDriver is composed of two major pieces. There are the client APIs, which you use in your tests, and there’s a server part, which the client APIs know how to start and run and which takes the form of an executable called “chromedriver”. The server piece is maintained by the Chromium team, and they’ve just released a new version, with support for Chrome 14 and with bug fixes. If you’re using Selenium 2.</description></item><item><title>Selenium IDE 1.0.12 – now with Firefox 5 support</title><link>https://www.selenium.dev/blog/2011/selenium-ide-1-0-12-firefox-5/</link><pubDate>Mon, 04 Jul 2011 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2011/selenium-ide-1-0-12-firefox-5/</guid><description>Last week we quietly released Selenium IDE 1.0.12 on the website. It has Firefox 5 support along with other improvements. See the release notes and unofficial announcement. Download it here or ask Firefox to check for plugins updates.
And for those who did not download 1.0.11 (it was not pushed through the update system) you will want to read about the formatter change that landed.</description></item><item><title>A Smattering of Selenium #52</title><link>https://www.selenium.dev/blog/2011/a-smattering-of-selenium-52/</link><pubDate>Fri, 01 Jul 2011 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2011/a-smattering-of-selenium-52/</guid><description>Welcome to the Canada Day edition of the less-than-weekly-now collection of Selenium / Automation links that is the Smattering of Selenium.
Selenium Advanced User Interactions illustrates how this new API (which is part of WebDriver) can use used to do things like drag-and-drop on Canvas elements. Things you (probably) didn’t know about xargs is one of those things to keep tucked away in your toolbox. Especially if you find yourself having to shell out in your scripts.</description></item><item><title>Selenium 2.0rc3: The “Next One’s The Big One” Release</title><link>https://www.selenium.dev/blog/2011/selenium-2-0rc3-the-next-ones-the-big-one-release/</link><pubDate>Mon, 27 Jun 2011 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2011/selenium-2-0rc3-the-next-ones-the-big-one-release/</guid><description>When we pushed the 2.0rc1 live, we really hoped that the next release would be 2.0 final. We very quickly got some feedback that encouraged us to push a 2.0rc2. Now, after just under three weeks, we’re launching a third and final release candidate. You can download it from the Selenium HQ site or directly from Google Code.
We think we’ve addressed many of the common issues, added some polish and added a host of bug fixes and minor changes, and we hope to hear your feedback!</description></item><item><title>A Smattering of Selenium #51</title><link>https://www.selenium.dev/blog/2011/a-smattering-of-selenium-51/</link><pubDate>Mon, 06 Jun 2011 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2011/a-smattering-of-selenium-51/</guid><description>Two big releases last week&amp;hellip;
Selenium IDE 1.0.11 was released — with Firefox 4 support. Finally. And just in time for people to start agitating for Firefox 5 support. official announcement, unofficial announcement Selenium 2 RC1 (and RC2) were released which marks the first official release of the new in-server grid behaviour. Even if you are not using the WebDriver API or grid functionality, you should be updating your environment to this.</description></item><item><title>Selenium 2.0rc2: The Better Working Release</title><link>https://www.selenium.dev/blog/2011/selenium-2-0rc2-the-better-working-release/</link><pubDate>Thu, 02 Jun 2011 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2011/selenium-2-0rc2-the-better-working-release/</guid><description>You win some and you lose some. We’d been really pleased to get Selenium 2.0rc1 out, so we were pretty disappointed to hear that some of you were running into problems with the Java version of the IE driver not launching IE sometimes. That’s definitely not good, so we fixed the problems and have released Selenium 2.0rc2. It’s the same as rc1, but with fewer problems 🙂
We’re still very keen to hear your feedback!</description></item><item><title>Selenium 2.0rc1: The Grid Release</title><link>https://www.selenium.dev/blog/2011/selenium-2-0rc1-the-grid-release/</link><pubDate>Wed, 01 Jun 2011 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2011/selenium-2-0rc1-the-grid-release/</guid><description>We’re very happy to announce the first Release Candidate for Selenium 2, available for Java, C#, Ruby and Python. The API has been stabilised and the functionality needed for the final 2.0 release is mostly in. We’re going to be working hard to get there as soon as possible, but now’s the perfect time to test the waters and provide us with any feedback you may have! Grab the downloads from the site!</description></item><item><title>Selenium IDE 1.0.11 – Now with Firefox 4 Support!</title><link>https://www.selenium.dev/blog/2011/selenium-ide-1-0-11-now-with-firefox-4-support/</link><pubDate>Mon, 30 May 2011 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2011/selenium-ide-1-0-11-now-with-firefox-4-support/</guid><description>We know that you have been waiting eagerly for this release and you have to wait no more. Selenium IDE 1.0.11 is now here and you can get it from the seleniumhq download site. The update will also be pushed to you automatically over the next couple days.
Other things of note around this release
•Release Notes
•Where to log bugs
•Welcome Selenium IDE 1.0.11 (with Firefox 4 support)</description></item><item><title>A Smattering of Selenium #50</title><link>https://www.selenium.dev/blog/2011/a-smattering-of-selenium-50/</link><pubDate>Tue, 24 May 2011 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2011/a-smattering-of-selenium-50/</guid><description>Half a century!
And because I am late doing this, the Selenium Test Day for Addons.Mozilla.org — which is today! gets top billing. Its actually going on Right Now. Looking to practice script writing and/or up your profile? This is a great way.
And now for the usual stuff.
.NET Headless browser options looks at various options that might be available to you if you want something like HTMLUnit but for .</description></item><item><title>A Smattering of Selenium #49</title><link>https://www.selenium.dev/blog/2011/a-smattering-of-selenium-49/</link><pubDate>Mon, 09 May 2011 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2011/a-smattering-of-selenium-49/</guid><description>Here is the next 10 links as I play catch-up.
First up is the Selenium Conf videos. There are only seven up currently, but as they are processed they will be posted Silicon Valley Continuous Integration Summit, April 7, 2011 Virtual Hudson Build Environments – Part One, Part Two The second last paragraph of So you think you know automation? Part One is extremely important if you re doing automation. Which you likely are if you are reading this.</description></item><item><title>A Smattering of Selenium #48</title><link>https://www.selenium.dev/blog/2011/a-smattering-of-selenium-48/</link><pubDate>Sat, 07 May 2011 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2011/a-smattering-of-selenium-48/</guid><description>It’s catch-up time again! Here is the first 10.
Automated tests for HTML5 offline web applications with Capybara and Selenium shows how a custom Firefox profile lets you automate Offline capabilities of HTML5 apps Robot Framework’s SeleniumLibrary 2.7 has been released primarily to pick up 2.0b3 of the Selenium Server. There was a series of posts about using Selenium with Drupal recently. Selenium testing in Drupal Run Selenium tests in Drupal on Debian headless Drupal Selenium tests API Using XPath Axes for locating elements in Selenium discusses some of the more advanced ways of finding elements via XPath I’ll follow that up with a link to the cssify project which will attempt to automatically convert XPath locators to CSS And since we’re now onto CSS… CSS Stress Testing and Performance Profiling discusses the stress-css bookmarklet.</description></item><item><title>A Smattering of Selenium #47</title><link>https://www.selenium.dev/blog/2011/a-smattering-of-selenium-47/</link><pubDate>Mon, 18 Apr 2011 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2011/a-smattering-of-selenium-47/</guid><description>Nothing says ‘Hello Monday!’ like a batch of links and a wife with a kidney stone.
Eradicating Non-Determinism in Tests is a nice essay by Martin Fowler and applies to Se as Left uncontrolled, non-deterministic tests can completely destroy the value of an automated regression suite. Reminds us to disable automated updates on your remote machines. Selenium Simple Automation Infrastructure is a framework built on top of Selenium using Python to make writing scalable, data driven, functional web tests easier with code.</description></item><item><title>A Smattering of Selenium #46</title><link>https://www.selenium.dev/blog/2011/a-smattering-of-selenium-46/</link><pubDate>Mon, 11 Apr 2011 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2011/a-smattering-of-selenium-46/</guid><description>Let’s put Selenium IDE on Firefox 4 is Available for Testing! Now! outside of the normal list. We have a ‘working’ version of Se-IDE for FF4, but don’t really have too too much faith in it (or at least I don’t). Please help test it.
Eight Techniques to Improve Your Tests is focused on unit tests, but I’m sure something can be gained from them Runners are great fun. How the play framework test runner works is therefor also great fun.</description></item><item><title>A Smattering of Selenium #45</title><link>https://www.selenium.dev/blog/2011/a-smattering-of-selenium-45/</link><pubDate>Mon, 28 Mar 2011 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2011/a-smattering-of-selenium-45/</guid><description>A Smattering of Selenium #45
So of course by now everyone has seen Selenium 2.0b3: The Next Gen Browser Release and upgraded their rigs. Expect Selenium IDE at some point in the next week with support for FF4 — if you just. can’t. wait. then you could try the bleeding edge for yourself. Logging any bugs you find; of course.
Oh, and there is the whole Selenium Conference next week.</description></item><item><title>Selenium 2.0b3: The Next Gen Browser Release</title><link>https://www.selenium.dev/blog/2011/selenium-2-0b3-the-next-gen-browser-release/</link><pubDate>Mon, 21 Mar 2011 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2011/selenium-2-0b3-the-next-gen-browser-release/</guid><description>It’s been about 5 weeks since the release of beta 2, so we’re very pleased to announce that Selenium 2.0b3 has just been released simultaneously for Java, .Net, Ruby and Python. You can download it from Selenium HQ or from the Google Code site. This release focused on providing excellent support for the next generation of browsers, particularly IE 9 and Firefox 4, and we think you’ll like what you’ll find.</description></item><item><title>A Smattering of Selenium #44</title><link>https://www.selenium.dev/blog/2011/a-smattering-of-selenium-44/</link><pubDate>Mon, 07 Mar 2011 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2011/a-smattering-of-selenium-44/</guid><description>What started out as the week of Capybara rounded itself out fairly nicely
I’m not a fan of using 3rd party abstraction layers (1st party are full win though) but Capybara has a large marketshare so Capybara (and Selenium) with RSpec &amp;amp; Rails 3: quick tutorial is likely going to be of interest to people.
And while on the subject of Capybara, here is a post on Checking Invisible Elements in it.</description></item><item><title>A Smattering of Selenium #43</title><link>https://www.selenium.dev/blog/2011/a-smattering-of-selenium-43/</link><pubDate>Mon, 28 Feb 2011 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2011/a-smattering-of-selenium-43/</guid><description>The big thing in the new last week was ColdFusion. Yes, ColdFusion. I was amazed how much mention it got on Twitter. Introducing CFSelenium – A Native ColdFusion Client Library for Selenium-RC Export Selenium-IDE Scripts in CFSelenium (ColdFusion) Format GitHub repo CFSelenium and VirtualBox SeleniumCamp happened over the weekend and from the looks of things was a success. And had almost an even number of women as men — which is almost unheard of at these sorts of things.</description></item><item><title>A Smattering of Selenium #42</title><link>https://www.selenium.dev/blog/2011/a-smattering-of-selenium-42/</link><pubDate>Mon, 21 Feb 2011 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2011/a-smattering-of-selenium-42/</guid><description>Is this week’s post the Answer to the Ultimate Question of Life, the Universe, and Everything Selenium?
Selenium 2 – Get Number of Rows in a Table illustrates what is advertised, though it feels like there has to be a shorter way to do this along the lines of getXpathCount() or getCssCount() Atlassian Plugin SDK – how to provide optional selenium tests explains how to wire up Se with the Atlassian toolkit and has a couple task specific tips as well.</description></item><item><title>Selenium 2.0b2 Released</title><link>https://www.selenium.dev/blog/2011/selenium-2-0b2-released/</link><pubDate>Tue, 15 Feb 2011 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2011/selenium-2-0b2-released/</guid><description>We’ve just released Selenium 2.0b2. If you’re the impatient sort who loves to have the latest and greatest, head over to the download site and get it while it’s hot. If you’re a Python user, then all you need to do is a simple “pip install -U selenium”. Ruby users can, as ever, simply run “gem install selenium-webdriver”. Maven users need to wait just a little bit longer: we’re going to be checking the release in ASAP.</description></item><item><title>A Smattering of Selenium #41</title><link>https://www.selenium.dev/blog/2011/a-smattering-of-selenium-41/</link><pubDate>Mon, 14 Feb 2011 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2011/a-smattering-of-selenium-41/</guid><description>There isn’t an official announcement anywhere (yet) but Selenium 2.0b2 was released a couple hours ago. Time to upgrade all your servers. Beta 3 is going to focus on IE9 and FF4 support.
Meanwhile…
A Webinar on Automated Selenium Testing with Maestro 3 could be interesting if you are considering the Maestro platform. And sticking with the webinar idea, Sauce Labs is hosting Selenium 2 Webinar: The Next Generation of Web and Mobile Application Testing After a bit of stagnation, the official Python drivers are starting to get updated again.</description></item><item><title>OperaDriver Released</title><link>https://www.selenium.dev/blog/2011/operadriver_released/</link><pubDate>Wed, 09 Feb 2011 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2011/operadriver_released/</guid><description>I think the word that I’m looking for is “wow”. Perhaps “Wow!” would express the concept a little more clearly. Perhaps “WOW!” would be even clearer. Yes, definitely. “WOW!” is a good way of describing this.
Before Christmas, Opera Software announced a pre-release of OperaWatir, an implementation of the Watir 2 API. What you may not know is that Watir 2 rests on the same WebDriver core as Selenium 2. Today, Opera made the source of the OperaDriver available on github: https://github.</description></item><item><title>A Smattering of Selenium #40</title><link>https://www.selenium.dev/blog/2011/a-smattering-of-selenium-40/</link><pubDate>Mon, 07 Feb 2011 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2011/a-smattering-of-selenium-40/</guid><description>You would think by now that I wouldn’t be surprised by the number of links I collect in a week.
The big news last week is that we (Selenium) have successfully avoided the whole Hudson/Jenkins drama by joining the Software Freedom Conservancy. Se Announcement Conservancy Announcement Speaking of Hudson/Jenkins, here is how to upgrade a Hudson install to Jenkinss I don’t like a lot of the messaging of the whole ‘Lean Startup’ scene, but they have some things to steal though.</description></item><item><title>Selenium Joins the Software Freedom Conservancy</title><link>https://www.selenium.dev/blog/2011/selenium-joins-the-software-freedom-conservancy/</link><pubDate>Wed, 02 Feb 2011 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2011/selenium-joins-the-software-freedom-conservancy/</guid><description>It doesn’t seem that long ago that we announced on the mailing list that the Selenium project planned to join the Software Freedom Conservancy. I’m very pleased to announce that as of Friday, 21st January, our application was approved. We’re now under the aegis of the SFC.
From most people’s perspective, this won’t make much difference: you’ll still be able to view the documentation and download the latest versions of Selenium from Selenium HQ.</description></item><item><title>A Smattering of Selenium #39</title><link>https://www.selenium.dev/blog/2011/a-smattering-of-selenium-39/</link><pubDate>Mon, 31 Jan 2011 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2011/a-smattering-of-selenium-39/</guid><description>Hey look! All caught up — only took a month…
My opinions on Continuous Deployment are pretty widely known, but the IMVU folks certainly have a lot of neat tricks to ‘borrow’. Such as Buildbot and Intermittent Tests Dealing with an API that returns XML? Your scripts don’t care about the readibility, but it helps you as the human if it is formatted pretty. xml formatter is a glorious time save in that case.</description></item><item><title>Bug Bash Aftermath</title><link>https://www.selenium.dev/blog/2011/bug-bash-aftermath/</link><pubDate>Mon, 31 Jan 2011 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2011/bug-bash-aftermath/</guid><description>What a week! I’m almost (almost!) sorry that the Bug Bash is over. I’d like to say thank you to everyone involved in the Bug Bash, from those reporting issues, through those brave souls (Dharani, Anthony, Jari!) who went through the issue tracker, applied labels and made sure the issues were still fresh, all the way to those contributing fixes. And the top five bug fixers were?
Jari Bakken (24 issues) Simon Stewart (21 issues) David Burns, aka: AutomatedTester (11 issues) Jim Evans (10 issues) Michael Tamm (6 issues) Some interesting nuggets of information:</description></item><item><title>2.0b1 and Maven</title><link>https://www.selenium.dev/blog/2011/2-0b1-and-maven/</link><pubDate>Tue, 25 Jan 2011 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2011/2-0b1-and-maven/</guid><description>If you’re using Maven and the 2.0b1 release of Selenium, you may be running into some problems getting maven to pick up your tests. The underlying problem is that selenium contains support classes for both JUnit and TestNG. The solution is to add this to your pom.xml
&amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.seleniumhq.selenium&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;selenium&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;2.0b1&amp;lt;/version&amp;gt; &amp;lt;exclusions&amp;gt; &amp;lt;exclusion&amp;gt; &amp;lt;groupId&amp;gt;org.testng&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;testng&amp;lt;/artifactId&amp;gt; &amp;lt;/exclusion&amp;gt; &amp;lt;/exclusions&amp;gt; &amp;lt;/dependency&amp;gt;</description></item><item><title>A Smattering of Selenium #38B</title><link>https://www.selenium.dev/blog/2011/a-smattering-of-selenium-38b/</link><pubDate>Tue, 25 Jan 2011 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2011/a-smattering-of-selenium-38b/</guid><description>Will today be the day I finish three weeks of catch-up? Well, no..
UI Tests – putting it all together summarizes the series of posts using Watir and Cucumber, but the ideas could be converted to Se pretty easily.
I haven’t read it, but Essential Software Testdesign is now available for free [legitimately] as a pdf. Test Design is something I expect to see more discussion around in 2011 when it comes to Se automation.</description></item><item><title>A Smattering of Selenium #38A</title><link>https://www.selenium.dev/blog/2011/a-smattering-of-selenium-38a/</link><pubDate>Mon, 24 Jan 2011 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2011/a-smattering-of-selenium-38a/</guid><description>No. Really. I’m almost caught up.
Want input in a non-english language but don’t want to convert your whole machine? InputKing might be able to help. And the fact it is in a browser means we can use it via Se. HAR (HTTP Archive) is the format the cool kids are talking about, and now there is a har gem so you can make use of HAR files in you [Ruby] scripts.</description></item><item><title>Bug Bash: 24-30 January</title><link>https://www.selenium.dev/blog/2011/bug-bash/</link><pubDate>Fri, 21 Jan 2011 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2011/bug-bash/</guid><description>When the Selenium (http://selenium.googlecode.com/) and WebDriver projects merged, all those moons ago, we moved the infrastructure from something we hosted to Google Code. One reason for doing this was to make it easier for people to file bugs and feature requests. And it looks like people have been filing a lot of bugs and feature requests.
In the run up for the 2.0b2 release, we’ll be running a Bug Bash. This will run from the 24th January all the way to the end of the 30th January.</description></item><item><title>A Smattering of Selenium #37B</title><link>https://www.selenium.dev/blog/2011/a-smattering-of-selenium-37b/</link><pubDate>Wed, 19 Jan 2011 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2011/a-smattering-of-selenium-37b/</guid><description>Let’s see how many announcements there were that didn’t get pushed out in a timely manner today shall we?
Well, there is of course Selenium Conf is coming and you have until Friday to get your proposals in. Last I heard we had 37 which is impressive, but I think 50 should be doable. On the meetup side of things there is Boston on January 25 NYC on January 26 (its not on the site yet, but I’m speaking, so trust me, it exists) London on March 23 SeleniumCamp (English) is coming to Kiev at the end of February.</description></item><item><title>A Smattering of Selenium #37A</title><link>https://www.selenium.dev/blog/2011/a-smattering-of-selenium-37a/</link><pubDate>Mon, 17 Jan 2011 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2011/a-smattering-of-selenium-37a/</guid><description>My scheme for catching up with links last week ran afoul of 900 geeks and their families melting the internets at CodeMash 2.0.1.1. So let’s try it again this week.
Capturing screenshots on script failure is a common trick and Capturing Web Page Screenshots with Selenium 2 is the first post I have seen that explains how to do with with Selenium WebDriver XPath marks the spot uses a treasure map analogy around how to create good XPath — but at the same time propagates the ‘XPath is Inherently Evil’ myth.</description></item><item><title>Selenium Conf is coming… get your proposals in!</title><link>https://www.selenium.dev/blog/2011/selenium-conf-is-coming-get-your-proposals-in/</link><pubDate>Mon, 17 Jan 2011 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2011/selenium-conf-is-coming-get-your-proposals-in/</guid><description>It has been mentioned at and hinted upon a couple times in the Smattering posts, but nothing has ‘officially’ been mentioned here, so it is time we fix that.
The first Selenium Conf is a go!
The logistics are set and we’re starting to sort out the program. Here is what you need to know. Right. Now.
When – Monday, April 4 – Wednesday, April 6 Where – Marines Memorial Club and Hotel Why – Its about darn time… This is a community driven event, though our friends at Sauce Labs are doing a lot of the leg work on the facilities (and food!</description></item><item><title>A Smattering of Selenium #36B</title><link>https://www.selenium.dev/blog/2011/a-smattering-of-selenium-36b/</link><pubDate>Tue, 11 Jan 2011 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2011/a-smattering-of-selenium-36b/</guid><description>Second in a week-long series of catch-up posts. But before I get to the next batch of links, don’t forget to submit your proposals to speak at the first Selenium Conference. I’m pretty sure we’re going to be trying to pick out the talks next week.
Can we please adopt this as the official poster for Selenium? Please? If you are a C# developer looking to get started with Selenium WebDriver, Automated Testing with Selenium 2 and NUnit seems like a good place to start Per the who ‘bringing order to the universe’, Watir-WebDriver: A detailed introduction shows how to drive Watir using Selenium WebDriver UI Automation: Tricks and Traps has, well, umm, tricks to try and traps to avoid.</description></item><item><title>A Smattering of Selenium #36A</title><link>https://www.selenium.dev/blog/2011/a-smattering-of-selenium-36a/</link><pubDate>Mon, 10 Jan 2011 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2011/a-smattering-of-selenium-36a/</guid><description>I have drastically fallen behind on the link reporting, but not the collecting, so this week’s Smattering will be multi-part.
The ‘big’ news falls for this edition is two fold –
We’re having a conference! Selenium Conference 2011 is April 4 – 6, 2011 in San Francisco. See the site for more information. (And I think our friends at Watir are going to be in the same space the day before.</description></item><item><title>Selenium 2.0 beta 1 Release</title><link>https://www.selenium.dev/blog/2010/selenium-2-0-beta-1-release/</link><pubDate>Fri, 24 Dec 2010 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2010/selenium-2-0-beta-1-release/</guid><description>We recently released the first of the betas for Selenium 2. It’s available for Java, C# and Ruby. If you’ve been holding off trying Selenium 2 because of the alpha label, then the biggest improvement you’ll see is with the new WebDriver APIs, but there’s a lot more!
A promise of relatively stable APIs For Firefox only right now, an API for dealing with alerts, prompts and confirms (http://selenium.googlecode.com/svn/trunk/docs/api/java/org/openqa/selenium/WebDriver.TargetLocator.html#alert()). A brand new IE driver.</description></item><item><title>Atoms have come to Selenium IDE</title><link>https://www.selenium.dev/blog/2010/atoms-have-come-to-selenium-ide/</link><pubDate>Thu, 09 Dec 2010 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2010/atoms-have-come-to-selenium-ide/</guid><description>As mentioned in Simon’s Going Atomic: Why? and Going Atomic: How, part of the merging of Selenium and WebDriver is to share common code between the two. And as of the 1.0.10 release of Selenium IDE, this merged code, ‘atoms’ is now included.
Some early users of this release are noticing that this the atom that drives assertAttribute and verifyAttribute is causing their scripts to break. This post explains the ‘why’ and suggests how to fix them as well.</description></item><item><title>A Smattering of Selenium #35</title><link>https://www.selenium.dev/blog/2010/a-smattering-of-selenium-35/</link><pubDate>Mon, 06 Dec 2010 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2010/a-smattering-of-selenium-35/</guid><description>(If I wasn’t still recovering from a cold there would be something witty here.)
We’ll start this week with a cartoon So I know I have linked to playing pacman with se 2, but here is a site that explains the ghost behavior. If Google implemented the algorithms properly-ish, then this should be the ticket to crazy high scores. There should be a contest for this… Cucumber + Cuke4Duke + Selenium (WebDriver) = Enlightenment is step-by-step instructions for using maven to wire all these things together.</description></item><item><title>Selenium Conference Survey</title><link>https://www.selenium.dev/blog/2010/selenium-conference-survey/</link><pubDate>Tue, 30 Nov 2010 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2010/selenium-conference-survey/</guid><description>Great news! Thanks to the initiative of our friends at Sauce Labs, we’re finally ready to host the first-ever Selenium Conference. We’re still working out a lot of the details, but so far we’ve decided this first conference will be sometime in April and hosted in San Francisco.
In order to figure out the rest of the details, we’re looking for feedback from the Selenium user community. Please take a moment to fill out the following survey.</description></item><item><title>A Smattering of Selenium #34</title><link>https://www.selenium.dev/blog/2010/a-smattering-of-selenium-34/</link><pubDate>Mon, 29 Nov 2010 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2010/a-smattering-of-selenium-34/</guid><description>We’ll start this week with the official announcement of ‘Selenium 1.0 Testing Tools: Beginner’s Guide’ being available. Congrats David! (Still waiting for my copy…)
There is now a DZone ‘refcard’ for Selenium 2. Of course, the reason Se2 is alpha is the API isn’t done with at least one major addition still left so it will be out of date in a month, but still… Here is another example of how to do Page Objects in Python Client-Side Profiling with Selenium 2 is David’s post about his recent London Selenium User Group talk Someone took the time to make a Selenium lens on Squidoo; which is going to get kinda circular once this post shows up on it.</description></item><item><title>A Smattering of Selenium #33</title><link>https://www.selenium.dev/blog/2010/a-smattering-of-selenium-33/</link><pubDate>Mon, 22 Nov 2010 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2010/a-smattering-of-selenium-33/</guid><description>…and here’s the links!
Henrik Skupin was one of the speakers at the London Selenium Meetup and has written about the night and his talk Speaking of which, videos of the talks are now up Part of good automation is knowing how to code. So here are some sites that crossed my path this week for that Rails for Zombies Dive into HTML 5 HTML5 Rocks Cheezy continues his UI series which takes a detour over to WATIR land, but things are transferable.</description></item><item><title>A Smattering of Selenium #32</title><link>https://www.selenium.dev/blog/2010/a-smattering-of-selenium-32/</link><pubDate>Mon, 15 Nov 2010 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2010/a-smattering-of-selenium-32/</guid><description>For those people paying attention to the goings-on in the Selenium world, yes, I am skipping something major until some of the details are worked out and announced. Until then, here are the links I accrued over the week.
Selenium uses Bamboo for its CI infrastructure. This week saw an upgrade to the latest version so if you want bleeding-edge code, get it here The only browser Se has no real traction on right now is the BlackBerry one.</description></item><item><title>A Smattering of Selenium #31</title><link>https://www.selenium.dev/blog/2010/a-smattering-of-selenium-31/</link><pubDate>Mon, 08 Nov 2010 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2010/a-smattering-of-selenium-31/</guid><description>The big news for last week was that I released Se-IDE 1.0.8 to very little fanfare. 1.0.9 should be a week or two and much more important a release.
Cheesecake! is isn’t nearly as impractical as Pacman, but still adds to the Se2 example bucket. The London Se Meetup stuff from last week are starting to appear… Client-side profiling with Se2 a summary How Mozilla uses Se Crowd-sourced Automated Firefox UI Testing Some notes from CITCON last week as well.</description></item><item><title>A Smattering of Selenium #30</title><link>https://www.selenium.dev/blog/2010/a-smattering-of-selenium-30/</link><pubDate>Mon, 01 Nov 2010 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2010/a-smattering-of-selenium-30/</guid><description>I’ve missed a couple weeks due to travel and a complete system lock which meant I lost all the links I had open but not saved. So these are the ones I have recovered.
I have written a series of posts on how to do parallel execution of tests in JUnit 4 up on the Sauce Labs blog. Part One, Part 2 and Part Three Quick start with FitNesse and Selenium is a beginners guide to wiring Selenium and FitNesse together.</description></item><item><title>Selenium 2.0a6 Released</title><link>https://www.selenium.dev/blog/2010/selenium-2-0a6-released/</link><pubDate>Fri, 08 Oct 2010 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2010/selenium-2-0a6-released/</guid><description>We are extremely pleased to announce the release of Selenium 2.0a6! Head over to the downloads page to get it while it’s hot, or wait just a little bit longer for it to appear in a maven repo near you. The .Net version will also be updated soon too, and the python and ruby libraries have been having smaller, more frequent releases all this time.
You’ll be pleased to hear that the Selenium 1.</description></item><item><title>A Smattering of Selenium #29</title><link>https://www.selenium.dev/blog/2010/a-smattering-of-selenium-29/</link><pubDate>Mon, 04 Oct 2010 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2010/a-smattering-of-selenium-29/</guid><description>A fair number of links this week. The vast majority of which were buried in annoying airport internet advertising frames…
This looks like it is Spanish which would normally mean it doesn’t get included but it Integração Selenium e Testlink explains how to integrate Se with TestLink. We, as a community, need to document this sort of thing more. JUnit 4 Vs TestNG is a somewhat biased comparison between JUnit 4 and TestNG; but useful none the less.</description></item><item><title>A Smattering of Selenium #28</title><link>https://www.selenium.dev/blog/2010/a-smattering-of-selenium-28/</link><pubDate>Mon, 27 Sep 2010 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2010/a-smattering-of-selenium-28/</guid><description>So we go from not-enough-stuff-to-do-one to wow-this-will-take-awhile. And we’re off..
Tellurium is one of the many frameworks that absorb Se and has an article on InfoQ called Introducing the Tellurium Automated Testing Framework which, well, introduces the framework. In the first of many Cucumber related posts this week is Sean Grove’s Cucumber Sauce for doing parallel Cucumber runs on the Sauce infrastructure. Might be general enough to use outside of it as well.</description></item><item><title>A Smattering of Selenium #27</title><link>https://www.selenium.dev/blog/2010/a-smattering-of-selenium-27/</link><pubDate>Mon, 20 Sep 2010 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2010/a-smattering-of-selenium-27/</guid><description>Seems I skipped a week, but that’s okay since there hasn’t been much in terms of volume (or maybe my clever search filter is a bit overly clever…).
The big news I think is that there is now a Se driver for Node.js called Soda. I’m not sure I like the syntax, but I also don’t claim to know Node so it could be idiomatically correct which is more important than my blessing.</description></item><item><title>A Smattering of Selenium #26</title><link>https://www.selenium.dev/blog/2010/a-smattering-of-selenium-26/</link><pubDate>Mon, 06 Sep 2010 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2010/a-smattering-of-selenium-26/</guid><description>It’s Labour Day here, so this post was written to backdrop of Sponge Bob. In case you were wondering.
selenium-java-evidence appears to be another logging framework, this time with an emphasis on auditability. Personally, the reports from a CI server should be all that are required, but to each their own… taza is an opinionated browser-based test framework webdry is a Python (jquery-inspired) wrapper for DRY:er access to the Selenium WebDriver Self-testing AppEngine apps with Saucelabs seems like a cool little (if very low level) trick to using Se inside AppEngine Sauce Labs released their Getting Started With Selenium guide and is looking for feedback on it Need to interact with a web service during a BrowserMob run?</description></item><item><title>Going Atomic: How</title><link>https://www.selenium.dev/blog/2010/going-atomic-how/</link><pubDate>Sun, 05 Sep 2010 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2010/going-atomic-how/</guid><description>This is the second of my technical posts. Again, if you’re interested in the internal workings of Selenium 2, then please skip straight to something else. If you’re interested in how and why we made some of the technical decisions on the project, keep reading….
We left our intrepid heroes in a tight spot: they’d decided to write a shared library of code, to be used by the various webdriver implementations and selenium core, but the requirements for doing this seemed to be at odds with it actually happening.</description></item><item><title>A Smattering of Selenium #25</title><link>https://www.selenium.dev/blog/2010/a-smattering-of-selenium-25/</link><pubDate>Tue, 31 Aug 2010 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2010/a-smattering-of-selenium-25/</guid><description>A day late, but that sort of thing happens when you have family.
I keep telling myself I will document how to incorporate Se launching and result recording in QC, but never seem to find the excuse. Looks like Aaron found the excuse: Finding the API for a DLL, Connecting to HP/Mercury Quality Center from a client side script Also from Aaron is a cool Credit Card Generator which has nice id tags which makes for easy Se parsing.</description></item><item><title>A Smattering of Selenium #24</title><link>https://www.selenium.dev/blog/2010/a-smattering-of-selenium-24/</link><pubDate>Tue, 24 Aug 2010 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2010/a-smattering-of-selenium-24/</guid><description>A bit late, but I’m in California for a Selenium Developers Meetup and my body doesn’t quite know where it is temporally.
Don’t forget that tomorrow is the next meeting of the San Francisco Selenium folks which seems to be running a crowd sourced “Let’s stump Jason with our problems” session. Most of the ‘main’ Se folk will be there. Test design theory is something that I have yet to really see covered much, so here are three articles on the similar idea of what to test and what to skip.</description></item><item><title>A Smattering of Selenium #23</title><link>https://www.selenium.dev/blog/2010/a-smattering-of-selenium-23/</link><pubDate>Mon, 16 Aug 2010 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2010/a-smattering-of-selenium-23/</guid><description>I was at Agile 2010 in Orlando last week so missed doing the Smattering, so here is two weeks worth of links.
There is crazy amounts of power hiding in that there JUnit 4 library – such as @Rule. One usage of them is described here. A useful pattern indeed when doing something like BDD or ATDD The next SFSE has been announced; August 24 at LinkedIn. Se creator Jason Huggins will be fielding questions in a Q&amp;amp;A session on steroids.</description></item><item><title>Going Atomic: Why?</title><link>https://www.selenium.dev/blog/2010/going-atomic-why/</link><pubDate>Mon, 16 Aug 2010 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2010/going-atomic-why/</guid><description>This is the first in a series of technical posts by me about the internals of Selenium WebDriver. If you’re not interested in technical nitty-gritty, then feel free to step away now.
Still here? Excellent.
Let’s take a step back to just before the Selenium and WebDriver projects merged. There were, very obviously, two separate codebases. Looking closer and with a slightly different perspective, there were more than this. We used the test suites for webdriver to define the behaviour for multiple, largely independent, driver codebases.</description></item><item><title>Selenium at Agile 2010</title><link>https://www.selenium.dev/blog/2010/selenium-at-agile-2010/</link><pubDate>Tue, 10 Aug 2010 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2010/selenium-at-agile-2010/</guid><description>The Selenium project does not have an ‘official’ presence here at Agile as it is seen as a ‘test after’ tool rather than ‘test first’ — even though it provides the magic of the ‘test first’ frameworks… But there is a small, unofficial contingent of recognizable faces around that can help people out and some sessions on it.
Sessions
Why your selenium tests are so dang brittle, and what to do about it – Wednesday, August 11 – 3:30 – 5:00</description></item><item><title>Selenium 2.0 backend for running IDE test suite via the Se2 Firefox</title><link>https://www.selenium.dev/blog/2010/selenium-2-0-backend-for-running-ide-test-suite-via-the-se2-firefox/</link><pubDate>Mon, 09 Aug 2010 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2010/selenium-2-0-backend-for-running-ide-test-suite-via-the-se2-firefox/</guid><description>The GSoC 2010, it’s a great adventure.
I’m Raynatou, I come from Burkina and do my internship at SERLI. Like all interns in this company the topic of my internship focuses on advanced topics like the integration of WebDriver as backend for Selenium IDE. Selenium IDE is currently built upon Selenium Core for interacting with web pages. Selenium Core has several major limitations, including the inability to fire native events. To avoid these limitations and produce more robust tests, I am investigating Selenium IDE to using WebDriver in place of Selenium Core.</description></item><item><title>A Smattering of Selenium #22</title><link>https://www.selenium.dev/blog/2010/a-smattering-of-selenium-22/</link><pubDate>Mon, 02 Aug 2010 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2010/a-smattering-of-selenium-22/</guid><description>Happy Simcoe Day. Only a handful of links this week to mention.
Kevin relaunched Mogotest – see your website the way your users do. In a much earlier Smattering I think I linked to an announcement about a Se talk at Boston.rb. Well, here are the slides While not directly related to Se, the W3C has released their Unified Validator called, wait for it, Unicorn. So who is going to create the integration that magically sends pages to be validated there?</description></item><item><title>How to use Selenium 2 with Maven</title><link>https://www.selenium.dev/blog/2010/how-to-use-selenium-2-with-maven/</link><pubDate>Fri, 30 Jul 2010 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2010/how-to-use-selenium-2-with-maven/</guid><description>There are several ways to use Selenium 2:
If you don’t have Selenium 1.x legacy code, you might want to directly use on of the new WebDriver implemenations like ChromeDriver, HtmlUnitDriver, FirefoxDriver, or InternetExplorerDriver which provide a nice, small and easy to learn API. If you have Selenium 1.x legacy code, you can still use the well known DefaultSelenium class or the new WebDriverBackedSelenium, which extends DefaultSelenium but uses one of the WebDriver implementations internally.</description></item><item><title>A Smattering of Selenium #21</title><link>https://www.selenium.dev/blog/2010/a-smattering-of-selenium-21/</link><pubDate>Mon, 26 Jul 2010 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2010/a-smattering-of-selenium-21/</guid><description>I thought it had been a slow week — until I looked at how many browser windows I had open. I wonder if that was why things were feeling a bit sluggish…
Some bits of history from Simon Stewart
First announcement of Selenium (outside of Thoughtworks) First announcement of WebDriver (again, outside of Thoughtworks) The ‘merger’ announcement (aka Selenium 2) More history lessons on Cloud Computing Show #35 where Jason recounts the origin of Se (and other stuff)</description></item><item><title>The Current Status of Selenium 1 and Selenium 2</title><link>https://www.selenium.dev/blog/2010/the-current-status-of-selenium-1-and-selenium-2/</link><pubDate>Wed, 21 Jul 2010 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2010/the-current-status-of-selenium-1-and-selenium-2/</guid><description>In the beginning there was Se1, and it was good. But it could have been better — in ways that WebDriver was starting to be good at. Thus the brilliant idea was hatched to merge the two projects.
And then the confusion began. Let’s see if I can start to address some of it via a ficticious conversation that consolidates the Se-user list and #selenium irc channel.
There are a couple annoying bugs in Se-RC 1.</description></item><item><title>A Smattering of Selenium #20</title><link>https://www.selenium.dev/blog/2010/a-smattering-of-selenium-20/</link><pubDate>Mon, 19 Jul 2010 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2010/a-smattering-of-selenium-20/</guid><description>12 hours late, but I was driving draft horses all day so that’s my excuse and I’m sticking with it. Enjoy. I’m going for a nap.
The big news this week was the next alpha of Se 2 came out. Time to update those automation machines. Like TestNG’s @BeforeClass and @AfterClass but using JUnit4? Using JUnit Nested Suites with Selenium RC to simulate TestNG suite and grouping annotations is a long titled post, but describes how to fake one out to act like the other.</description></item><item><title>GSoC 2010 – Remote Storage</title><link>https://www.selenium.dev/blog/2010/gsoc-2010-remote-storage/</link><pubDate>Thu, 15 Jul 2010 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2010/gsoc-2010-remote-storage/</guid><description>What’s new for Selenium this summer ? The GSoC of course !!!!
I’m Jérémy, a french engineer and I work at SERLI, a services company based in France.
I’m working on Selenium since a year and this summer I’m mentoring Aleksejs for the GSoC 2010. I’m helped by David Burns when I’m on vacation or offline. His experience is really useful to me, and David is involved on student supervising regularly.</description></item><item><title>Selenium 2.0a5 Released</title><link>https://www.selenium.dev/blog/2010/selenium-2-0a5-released/</link><pubDate>Wed, 14 Jul 2010 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2010/selenium-2-0a5-released/</guid><description>I’m pleased to announce the release of Selenium 2.0a5, available for immediate download. This release brings a host of changes under the hood, and represents the efforts of many contributors. Highlights include:
New interfaces (http://selenium.googlecode.com/svn/trunk/docs/api/java/org/openqa/selenium/html5/package-frame.html) for dealing with HTML 5 elements. An API for implicit waits (http://selenium.googlecode.com/svn/trunk/docs/api/java/org/openqa/selenium/WebDriver.Timeouts.html): quietly waiting until an element is present before continuing with a test. You can use them like this: driver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS) A revamped Firefox driver.</description></item><item><title>A Smattering of Selenium #19</title><link>https://www.selenium.dev/blog/2010/a-smattering-of-selenium-19/</link><pubDate>Mon, 12 Jul 2010 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2010/a-smattering-of-selenium-19/</guid><description>I’ve got a full day of driving ahead of me to go to a client so this is the early-morning (for me) edition of the Smattering post. That of course means there will be an absolute link explosion in about 20 minutes.
Dave talks about some of the stuff he is doing with Se-IDE in the post Improving Selenium IDE Another post on how to deal with file downloads in Se.</description></item><item><title>Selenium IDE – Looking back and looking forward</title><link>https://www.selenium.dev/blog/2010/selenium-ide-looking-back-and-looking-forward/</link><pubDate>Fri, 09 Jul 2010 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2010/selenium-ide-looking-back-and-looking-forward/</guid><description>Its been around six months and three releases since I took the reins of Selenium-IDE. The fundamental change in that time has been the adoption of a plugin model like the fine folks over that Firebug. (We’re also self-hosting it which is big from a project internals perspective.)
Right now, you can add custom user-extensions and formatters, but in the very near future you will be able to add location strategies as well.</description></item><item><title>A Smattering of Selenium #18</title><link>https://www.selenium.dev/blog/2010/a-smattering-of-selenium-18/</link><pubDate>Mon, 05 Jul 2010 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2010/a-smattering-of-selenium-18/</guid><description>Not too much this week with various holidays around the world, but still managed to dig some things up.
Sauce Labs has started a webinar series and recently had one on using Cucumber and OnDemand. Cucumber and Robot Framework like tools are the coming wave of testing tools. Another bit of Sauce-ish news is the folks at Rally put up a post on how to get Se 2 scripts in their OnDemand cloud If writing Se scripts is ‘programming’, then writing the controlling frameworks is real programming.</description></item><item><title>A Smattering of Selenium #17</title><link>https://www.selenium.dev/blog/2010/a-smattering-of-selenium-17/</link><pubDate>Mon, 28 Jun 2010 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2010/a-smattering-of-selenium-17/</guid><description>Here are the posts dealing with Se, and/or automation in general that caught my eye and interest.
Selenium Unit Test Reuse illustrates one way of iterating through environments and browsers in a script without using Se-Grid. I’ve done similar tricks to this to some success — the problem is usually reporting though, but you are all clever folks so I’m sure you could add it in. Adding a custom header is sometimes required when writing a script, but its not really that documented so Kevin wrote How to Perform Basic Authentication in Selenium which combines how to do basic auth and header injection.</description></item><item><title>A Smattering of Selenium #16</title><link>https://www.selenium.dev/blog/2010/a-smattering-of-selenium-16/</link><pubDate>Mon, 21 Jun 2010 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2010/a-smattering-of-selenium-16/</guid><description>I’m going to start posting the Smattering posts here on the main Selenium blog, hopefully each Monday. For past ones see my personal blog’s archive
Style Tests using Selenium and Robotframework – With those simple steps we are able to do regression testing on our user interfaces that have strict standards Export Selenium IDE scripts for Grails – A plugin which does exactly what the announcement says. Selenium XML Formatter – Hurray for plugins!</description></item><item><title>Selenium Grid 1.0.8 Released</title><link>https://www.selenium.dev/blog/2010/selenium-grid-1-0-8-released/</link><pubDate>Thu, 10 Jun 2010 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2010/selenium-grid-1-0-8-released/</guid><description>We’re pleased to announce the release of Selenium Grid 1.0.8. This release fixes multithreaded issues with the Selenium Grid hub that appeared randomly under heavy load. If you’ve ever seen a log message about HttpClient being accessed by multiple threads, you definitely want to upgrade. Even if you haven’t, this release is highly recommended for all.
You can download it now or view the changelog. The list of changes is:</description></item><item><title>Selenium IDE 1.0.7 – Now with Drag-and-Drop!</title><link>https://www.selenium.dev/blog/2010/selenium-ide-1-0-7-released/</link><pubDate>Thu, 27 May 2010 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2010/selenium-ide-1-0-7-released/</guid><description>So its a month later than planned, but Selenium IDE 1.0.7 is now available. The delay was due to some internal build changes and not code, but one of the code changes that is there more than makes up for the delay.
That’s right, drag-and-drop has finally arrived to Se-IDE — though credit lies with Jérémy Hérault for implementing it.
Oh, and if you are Swedish, there is now a localization for you.</description></item><item><title>Selenium Grid 1.0.7 Released</title><link>https://www.selenium.dev/blog/2010/selenium-grid-1-0-7-released/</link><pubDate>Tue, 11 May 2010 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2010/selenium-grid-1-0-7-released/</guid><description>Following up on the Selenium Grid 1.0.6 release, which was mostly a bug fix release, we’re pleased to announce the release of Selenium Grid 1.0.7. This is another bug fix release that focuses primarily on how Selenium Grid handles browser sessions.
You can download it now or view the changelog. The list of changes are:
Hub now instructs remote controls to shutdown a session if the hub is going to remove it due to being idle for too long Added ability to specify timeout period when waiting for remote controls to become available.</description></item><item><title>The Future of Selenium Grid</title><link>https://www.selenium.dev/blog/2010/the-future-of-selenium-grid/</link><pubDate>Tue, 27 Apr 2010 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2010/the-future-of-selenium-grid/</guid><description>As you likely know by now, after years of stewardship Philippe has stepped down as maintainer of Selenium Grid and has named me the new maintainer. In this post, I hope to address the most immediate questions about what this means for the future of Selenium Grid.
Background I realize many of you may not know who I am. I’ve been using Selenium in some capacity for close to five years now.</description></item><item><title>Selenium 2.0a3 Released</title><link>https://www.selenium.dev/blog/2010/selenium-2-0a3-released/</link><pubDate>Mon, 19 Apr 2010 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2010/selenium-2-0a3-released/</guid><description>Selenium 2.0a3 has been released and can be downloaded from the Selenium project site. This is a major update to 2.0 and all users are encouraged to update. The new features include:
An improved remote protocol. Updating the version of HtmlUnit used to 2.7. Improved support for simulating user interactions with the browser via native events on Linux. Better support for Firefox 3.6. Bug fixes The .Net, Python and Ruby bindings will be updated soon, as will the maven artefacts.</description></item><item><title>Selenium Grid 1.0.6 Released</title><link>https://www.selenium.dev/blog/2010/selenium-grid-1-0-6-released/</link><pubDate>Tue, 13 Apr 2010 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2010/selenium-grid-1-0-6-released/</guid><description>Following up on the Selenium Grid 1.0.5 release, which added self-healing features to ease grid management, we’re pleased to announce the release of Selenium Grid 1.0.6. This is a bug fix release for 1.0.5 with some minor new additions.
You can download it now or view the changelog. The summary of changes are:
Fixed some concurrent modification issues that may have resulted in NullPointerExceptions Fixed issue with shutting down workers with Rakefile Added PID file support for hub and worker started via Rakefile, making it easier to use a process monitor such as monit In case you missed the announcement, Philippe is no longer maintaining Selenium Grid.</description></item><item><title>Selenium 1.0.3 Released</title><link>https://www.selenium.dev/blog/2010/selenium-1-0-3-released/</link><pubDate>Wed, 24 Feb 2010 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2010/selenium-1-0-3-released/</guid><description>Hot off the heals of 1.0.2, we’re releasing Selenium Remote Control 1.0.3. You can download it now (http://selenium.googlecode.com/files/selenium-remote-control-1.0.3.zip).
There is no functional difference between this version and 1.0.2, other than it is packaged up a little nicer and we’ve clarified the relationship between selenium-server and the client drivers. That is: we are not releasing new client drivers with future 1.x releases. The reason is that we locked down the API in version 1.</description></item><item><title>Selenium 1.0.2 Released: Firefox 3.6 and Snow Leopard Support</title><link>https://www.selenium.dev/blog/2010/selenium-1-0-2-release-firefox-3-6-and-snow-leopard-support/</link><pubDate>Tue, 23 Feb 2010 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2010/selenium-1-0-2-release-firefox-3-6-and-snow-leopard-support/</guid><description>Today we’re happy to announce that Selenium Remote Control 1.0.2 has been released. While most of our efforts are on Selenium 2.0, we understand that there are millions of Selenium users that still need the 1.x line supported. That’s why we’ve said from the start that our goal is make 2.x 100% backwards compatible with 1.x. And that’s why we’re releasing a new version of Selenium RC today.
Download it here (http://selenium.</description></item><item><title>Welcome to the official Selenium blog!</title><link>https://www.selenium.dev/blog/2010/welcome-to-the-official-selenium-blog/</link><pubDate>Mon, 22 Feb 2010 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/blog/2010/welcome-to-the-official-selenium-blog/</guid><description>Since we moved away from Clearspace for our forums, it’s time we also did the same for our blogging platform. As such, the new location for the official Selenium blog will now be:
http://seleniumhq.wordpress.com
We hope to be much better about posting news, tips, and tricks here going forward.</description></item><item><title>Search Results</title><link>https://www.selenium.dev/search/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/search/</guid><description/></item></channel></rss>