<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Selenium</title><link>https://www.selenium.dev/pt-br/</link><description>Recent content on Selenium</description><generator>Hugo</generator><language>pt-br</language><atom:link href="https://www.selenium.dev/pt-br/index.xml" rel="self" type="application/rss+xml"/><item><title>Ajuda de configuração</title><link>https://www.selenium.dev/pt-br/documentation/grid/configuration/help/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/pt-br/documentation/grid/configuration/help/</guid><description>Os comandos de ajuda (help) mostram informação baseada na implementação de código em vigor. Desta forma, irá obter informação potencialmente mais actual do que esta documentação. Embora possa não ser a mais detalhada, é sempre a forma mais simples de aprender sobre as configurações da Grid 4 em qualquer nova versão.
Commando info O comando info fornece detalhes de documentação sobre os seguintes tópicos:
Configurar Selenium Segurança Setup Session Map Traceamento Ajuda sobre configuração Ajuda rápida e resumo pode ser obtida com:</description></item><item><title>Browsing Context</title><link>https://www.selenium.dev/pt-br/documentation/webdriver/bidi/w3c/browsing_context/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/pt-br/documentation/webdriver/bidi/w3c/browsing_context/</guid><description>Page being translated from English to Portuguese. Do you speak Portuguese? Help us to translate it by sending us pull requests! Commands This section contains the APIs related to browsing context commands.
Open a new window Creates a new browsing context in a new window.
Java Ruby JavaScript Kotlin Selenium v4.8
void testCreateAWindow() { BrowsingContext browsingContext = new BrowsingContext(driver, WindowType.WINDOW); Assertions.assertNotNull(browsingContext.getId()); } View full example on GitHub Add Example</description></item><item><title>Browsing Context</title><link>https://www.selenium.dev/pt-br/documentation/webdriver/bidi/w3c/input/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/pt-br/documentation/webdriver/bidi/w3c/input/</guid><description>Page being translated from English to Portuguese. Do you speak Portuguese? Help us to translate it by sending us pull requests! This section contains the APIs related to input commands.
Perform Actions Java Ruby JavaScript Kotlin Selenium v4.17
Actions selectThreeOptions = actions.click(options.get(1)).keyDown(Keys.SHIFT).click(options.get(3)).keyUp(Keys.SHIFT); input.perform(windowHandle, selectThreeOptions.getSequences()); View full example on GitHub Add Example
Selenium v4.17
const actions = driver.actions().click(options[1]).keyDown(Key.SHIFT).click(options[3]).keyUp(Key.SHIFT).getSequences() await input.perform(browsingContextId, actions) View full example on GitHub Add Example
Release Actions Java Ruby JavaScript Kotlin Selenium v4.</description></item><item><title>Captchas</title><link>https://www.selenium.dev/pt-br/documentation/test_practices/discouraged/captchas/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/pt-br/documentation/test_practices/discouraged/captchas/</guid><description>CAPTCHA, abreviação de Completely Automated Public Turing test to tell Computers and Humans Apart, foi projetado explicitamente para impedir a automação, portanto, não tente! Existem duas estratégias principais para contornar as verificações CAPTCHA:
Desative CAPTCHAs em seu ambiente de teste Adicione um hook para permitir que os testes ignorem o CAPTCHA</description></item><item><title>Design patterns and development strategies</title><link>https://www.selenium.dev/pt-br/documentation/test_practices/design_strategies/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/pt-br/documentation/test_practices/design_strategies/</guid><description>(previously located: https://github.com/SeleniumHQ/selenium/wiki/Bot-Style-Tests)
Overview Over time, projects tend to accumulate large numbers of tests. As the total number of tests increases, it becomes harder to make changes to the codebase &amp;mdash; a single &amp;ldquo;simple&amp;rdquo; change may cause numerous tests to fail, even though the application still works properly. Sometimes these problems are unavoidable, but when they do occur you want to be up and running again as quickly as possible. The following design patterns and strategies have been used before with WebDriver to help make tests easier to write and maintain.</description></item><item><title>Direitos autorais e atribuições</title><link>https://www.selenium.dev/pt-br/documentation/about/copyright/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/pt-br/documentation/about/copyright/</guid><description>A Documentação do Selenium Todo esforço foi feito para tornar esta documentação a mais completa e precisa possível, mas nenhuma garantia ou adequação está implícita. As informações fornecidas são &amp;ldquo;no estado em que se encontram&amp;rdquo;. Os autores e a editora não terão qualquer responsabilidade para com qualquer pessoa ou entidade com relação a quaisquer perdas ou danos decorrentes das informações contidas neste livro. Nenhuma responsabilidade de patente é assumida com relação ao uso das informações aqui contidas.</description></item><item><title>Entendendo os componentes</title><link>https://www.selenium.dev/pt-br/documentation/overview/components/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/pt-br/documentation/overview/components/</guid><description>Construir um conjunto de testes usando WebDriver exigirá que você entenda e use efetivamente uma série de componentes diferentes. Como com tudo em software, pessoas diferentes usam termos diferentes para a mesma ideia. Abaixo está uma análise de como os termos são usados nesta descrição.
Terminologia API: interface de programação de aplicativo. Este é o conjunto de &amp;ldquo;comandos&amp;rdquo; que você usa para manipular o WebDriver. Biblioteca: um módulo de código que contém as APIs e o código necessário para implementá-los.</description></item><item><title>File Upload</title><link>https://www.selenium.dev/pt-br/documentation/webdriver/elements/file_upload/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/pt-br/documentation/webdriver/elements/file_upload/</guid><description>Because Selenium cannot interact with the file upload dialog, it provides a way to upload files without opening the dialog. If the element is an input element with type file, you can use the send keys method to send the full path to the file that will be uploaded.
Java Python CSharp Ruby JavaScript Kotlin WebElement fileInput = driver.findElement(By.cssSelector(&amp;#34;input[type=file]&amp;#34;)); fileInput.sendKeys(uploadFile.getAbsolutePath()); driver.findElement(By.id(&amp;#34;file-submit&amp;#34;)).click(); View full example on GitHub file_input = driver.find_element(By.CSS_SELECTOR, &amp;#34;input[type=&amp;#39;file&amp;#39;]&amp;#34;) file_input.</description></item><item><title>WebDriver BiDi Logging Features</title><link>https://www.selenium.dev/pt-br/documentation/webdriver/bidi/logging/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/pt-br/documentation/webdriver/bidi/logging/</guid><description>Remember that to use WebDriver BiDi, you must enable it in Options. For more details, see Enabling BiDi
Console Message Handlers Record or take actions on console.log events.
Add Handler Java Python CSharp Ruby JavaScript Kotlin Implementation Missing
driver.script.add_console_message_handler(log_entries.append) View full example on GitHub Implementation Missing
driver.script.add_console_message_handler { |log| log_entries &amp;lt;&amp;lt; log } View full example on GitHub Implementation Missing
Implementation Missing
Remove Handler You need to store the ID returned when adding the handler to delete it.</description></item><item><title>Browser navigation</title><link>https://www.selenium.dev/pt-br/documentation/webdriver/interactions/navigation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/pt-br/documentation/webdriver/interactions/navigation/</guid><description>Navegar para A primeira coisa que você vai querer fazer depois de iniciar um navegador é abrir o seu site. Isso pode ser feito em uma única linha, utilize o seguinte comando:
Java Python CSharp Ruby JavaScript Kotlin //Convenient driver.get(&amp;#34;https://selenium.dev&amp;#34;); //Longer way driver.navigate().to(&amp;#34;https://selenium.dev&amp;#34;); View full example on GitHub driver.get(&amp;#34;https://www.selenium.dev/selenium/web/index.html&amp;#34;) View full example on GitHub //Convenient driver.Url = &amp;#34;https://selenium.dev&amp;#34;; //Longer driver.Navigate().GoToUrl(&amp;#34;https://selenium.dev&amp;#34;); View full example on GitHub driver.navigate.to &amp;#39;https://www.selenium.dev/&amp;#39; driver.get &amp;#39;https://www.selenium.dev/&amp;#39; expect(driver.current_url).to eq &amp;#39;https://www.</description></item><item><title>WebDriver BiDi Network Features</title><link>https://www.selenium.dev/pt-br/documentation/webdriver/bidi/network/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/pt-br/documentation/webdriver/bidi/network/</guid><description>The implementation of these features is being tracked here: #13993
Remember that to use WebDriver BiDi, you must enable it in Options. For more details, see Enabling BiDi
Authentication Handlers Request Handlers Response Handlers</description></item><item><title>Network</title><link>https://www.selenium.dev/pt-br/documentation/webdriver/bidi/w3c/network/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/pt-br/documentation/webdriver/bidi/w3c/network/</guid><description>Page being translated from English to Portuguese. Do you speak Portuguese? Help us to translate it by sending us pull requests! Commands This section contains the APIs related to network commands.
Add network intercept Java Ruby JavaScript Kotlin Selenium v4.18
try (Network network = new Network(driver)) { String intercept = network.addIntercept(new AddInterceptParameters(InterceptPhase.BEFORE_REQUEST_SENT)); View full example on GitHub Add Example
Selenium v4.18
const intercept = await network.addIntercept(new AddInterceptParameters(InterceptPhase.BEFORE_REQUEST_SENT)) View full example on GitHub Add Example</description></item><item><title>Observabilidade</title><link>https://www.selenium.dev/pt-br/documentation/grid/advanced_features/observability/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/pt-br/documentation/grid/advanced_features/observability/</guid><description>Índice Selenium Grid Observabilidade Rastreamento distribuído Registro de eventos Observabilidade da Grade Visualizando Traços Aproveitando logs de eventos Referências Selenium Grid O Grid auxilia na escalabilidade e distribuição de testes, executando testes em várias combinações de navegadores e sistemas operacionais.
Observabilidade A observabilidade tem três pilares: rastreamentos, métricas e registros. Como o Selenium Grid 4 foi projetado para ser totalmente distribuído, a observabilidade tornará mais fácil entender e depurar os detalhes internos.</description></item><item><title>WebDriver BiDi Script Features</title><link>https://www.selenium.dev/pt-br/documentation/webdriver/bidi/script/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/pt-br/documentation/webdriver/bidi/script/</guid><description>The implementation of these features is being tracked here: #13992
Remember that to use WebDriver BiDi, you must enable it in Options. For more details, see Enabling BiDi
Script Pinning Execute Script DOM Mutation Handlers</description></item><item><title>Script</title><link>https://www.selenium.dev/pt-br/documentation/webdriver/bidi/w3c/script/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/pt-br/documentation/webdriver/bidi/w3c/script/</guid><description>Page being translated from English to Portuguese. Do you speak Portuguese? Help us to translate it by sending us pull requests! Commands This section contains the APIs related to script commands.
Call function in a browsing context Java Ruby JavaScript Kotlin Selenium v4.15
try (Script script = new Script(id, driver)) { List&amp;lt;LocalValue&amp;gt; arguments = new ArrayList&amp;lt;&amp;gt;(); arguments.add(PrimitiveProtocolValue.numberValue(22)); Map&amp;lt;Object, LocalValue&amp;gt; value = new HashMap&amp;lt;&amp;gt;(); value.put(&amp;#34;some_property&amp;#34;, LocalValue.numberValue(42)); LocalValue thisParameter = LocalValue.objectValue(value); arguments.</description></item><item><title>Alertas, prompts e confirmações JavaScript</title><link>https://www.selenium.dev/pt-br/documentation/webdriver/interactions/alerts/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/pt-br/documentation/webdriver/interactions/alerts/</guid><description>WebDriver fornece uma API para trabalhar com os três tipos nativos de mensagens pop-up oferecidas pelo JavaScript. Esses pop-ups são estilizados pelo navegador e oferecem personalização limitada.
Alertas O mais simples deles é referido como um alerta, que mostra um mensagem personalizada e um único botão que dispensa o alerta, rotulado na maioria dos navegadores como OK. Ele também pode ser dispensado na maioria dos navegadores pressionando o botão Fechar, mas isso sempre fará a mesma coisa que o botão OK.</description></item><item><title>Configurando a sua</title><link>https://www.selenium.dev/pt-br/documentation/grid/getting_started/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/pt-br/documentation/grid/getting_started/</guid><description>Início rápido Pré-requisitos Java 11 ou superior instalado Navegador(es) instalados Drivers do(s) navegador(es) Selenium Manager will configure the drivers automatically if you add --selenium-manager true. Installed and on the PATH Obter o ficheiro Selenium Server Jar a partir da última release Iniciar a Grid java -jar selenium-server-&amp;lt;version&amp;gt;.jar standalone Aponte* os seus testes WebDriver para http://localhost:4444 (Opcional) Verifique os testes que estão em execução abrindo o navegador em http://localhost:4444 *Se quer saber como direcionar os seus testes para http://localhost:4444, veja a secção RemoteWebDriver.</description></item><item><title>Contribuindo com o Site e Documentação do Selenium</title><link>https://www.selenium.dev/pt-br/documentation/about/contributing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/pt-br/documentation/about/contributing/</guid><description>Selenium é um grande projeto de software, seu site e documentação são fundamentais para entender como as coisas funcionam e aprender maneiras eficazes de explorar seu potencial.
Este projeto contém o site e a documentação do Selenium. Isto é um esforço contínuo (não direcionado a nenhuma versão específica) para fornecer informações atualizadas sobre como usar o Selenium de forma eficaz, como se envolver e como contribuir para o Selenium.
As contribuições para o site e documentação seguem o processo descrito na seção abaixo sobre contribuições.</description></item><item><title>Detalhes</title><link>https://www.selenium.dev/pt-br/documentation/overview/details/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/pt-br/documentation/overview/details/</guid><description>Selenium controla navegadores Selenium é muitas coisas mas, em sua essência, é um conjunto de ferramentas para automação de navegador da web que usa as melhores técnicas disponíveis para controlar remotamente as instâncias do navegador e emular a interação do usuário com o navegador.
Ele permite que os usuários simulem atividades comuns realizadas por usuários finais; inserir texto em campos, selecionando valores suspensos e caixas de seleção, e clicar em links em documentos.</description></item><item><title>Downloads de arquivo</title><link>https://www.selenium.dev/pt-br/documentation/test_practices/discouraged/file_downloads/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/pt-br/documentation/test_practices/discouraged/file_downloads/</guid><description>Embora seja possível iniciar um download clicando em um link com um navegador sob o controle do Selenium, a API não expõe o progresso do download, tornando-o menos do que ideal para testar arquivos baixados. Isso ocorre porque o download de arquivos não é considerado um aspecto importante de emular a interação do usuário com a plataforma da web. Em vez disso, encontre o link usando Selenium (e todos os cookies necessários) e passe este cookie para uma biblioteca de solicitação HTTP como libcurl.</description></item><item><title>Encontrando Elementos Web</title><link>https://www.selenium.dev/pt-br/documentation/webdriver/elements/finders/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/pt-br/documentation/webdriver/elements/finders/</guid><description>Um dos aspectos mais fundamentais do uso do Selenium é obter referências de elementos para trabalhar. O Selenium oferece várias estratégias de localizador para identificar exclusivamente um elemento. Há muitas maneiras de usar os localizadores em cenários complexos. Para os propósitos desta documentação, vamos considerar este trecho de HTML:
&amp;lt;ol id=&amp;#34;vegetables&amp;#34;&amp;gt; &amp;lt;li class=&amp;#34;potatoes&amp;#34;&amp;gt;… &amp;lt;li class=&amp;#34;onions&amp;#34;&amp;gt;… &amp;lt;li class=&amp;#34;tomatoes&amp;#34;&amp;gt;&amp;lt;span&amp;gt;O tomate é um vegetal&amp;lt;/span&amp;gt;… &amp;lt;/ol&amp;gt; &amp;lt;ul id=&amp;#34;fruits&amp;#34;&amp;gt; &amp;lt;li class=&amp;#34;bananas&amp;#34;&amp;gt;… &amp;lt;li class=&amp;#34;apples&amp;#34;&amp;gt;… &amp;lt;li class=&amp;#34;tomatoes&amp;#34;&amp;gt;&amp;lt;span&amp;gt;O tomate é uma fruta&amp;lt;/span&amp;gt;… &amp;lt;/ul&amp;gt; Primeiro Elemento correspondente Muitos localizadores irão corresponder a vários elementos na página.</description></item><item><title>Grid 3</title><link>https://www.selenium.dev/pt-br/documentation/legacy/selenium_3/grid_3/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/pt-br/documentation/legacy/selenium_3/grid_3/</guid><description>Grid 4
Selenium Grid é um servidor proxy inteligente que permite que os testes Selenium encaminhem comandos para instâncias remotas do navegador da web. Seu objetivo é fornecer uma maneira fácil de executar testes em paralelo em várias máquinas.
Com Selenium Grid, um servidor atua como o hub que roteia comandos de teste formatados em JSON para um ou mais nós registrados. Os testes entram em contato com o hub para obter acesso a instâncias remotas do navegador.</description></item><item><title>HTML runner</title><link>https://www.selenium.dev/pt-br/documentation/legacy/selenium_ide/html_runner/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/pt-br/documentation/legacy/selenium_ide/html_runner/</guid><description>Selenium HTML-runner permite que você execute suítes de teste da linha de comando. Suítes de teste são exportações de HTML do Selenium IDE ou ferramentas compatíveis.
Informação comum Combinação de lançamentos de geckodriver / firefox / selenium-html-runner são importantes. Pode haver um software matriz de compatibilidade em algum lugar. selenium-html-runner executa apenas suítes de teste (não casos de teste - por exemplo, uma exportação do Monitis Transaction Monitor). Certifique-se de cumprir isso.</description></item><item><title>Instalando bibliotecas do Selenium</title><link>https://www.selenium.dev/pt-br/documentation/webdriver/getting_started/install_library/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/pt-br/documentation/webdriver/getting_started/install_library/</guid><description>Primeiro você precisa instalar as bibliotecas Selenium para seu projeto de automação. O processo de instalação de bibliotecas depende da linguagem que você escolher usar.
Requisitos por linguagem Java Python CSharp Ruby JavaScript Kotlin Veja a mínima versão do Java suportada aqui.
A instalação da biblioteca Selenium para Java é feita a partir de uma build tool.
Maven Especifique a dependência no pom.xml do seu projeto.
&amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.seleniumhq.selenium&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;selenium-java&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;${selenium.version}&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; View full example on GitHub Gradle Especifique a dependência no build.</description></item><item><title>Interacting with web elements</title><link>https://www.selenium.dev/pt-br/documentation/webdriver/elements/interactions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/pt-br/documentation/webdriver/elements/interactions/</guid><description>There are only 5 basic commands that can be executed on an element:
click (applies to any element) send keys (only applies to text fields and content editable elements) clear (only applies to text fields and content editable elements) submit (only applies to form elements) select (see Select List Elements) Additional validations These methods are designed to closely emulate a user&amp;rsquo;s experience, so, unlike the Actions API, it attempts to perform two things before attempting the specified action.</description></item><item><title>Internet Explorer Driver Internals</title><link>https://www.selenium.dev/pt-br/documentation/ie_driver_server/internals/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/pt-br/documentation/ie_driver_server/internals/</guid><description>Client Code Into the Driver We use the W3C WebDriver protocol to communicate with a local instance of an HTTP server. This greatly simplifies the implementation of the language-specific code, and minimzes the number of entry points into the C++ DLL that must be called using a native-code interop technology such as JNA, ctypes, pinvoke or DL.
Memory Management The IE driver utilizes the Active Template Library (ATL) to take advantage of its implementation of smart pointers to COM objects.</description></item><item><title>Command Listeners</title><link>https://www.selenium.dev/pt-br/documentation/webdriver/support_features/listeners/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/pt-br/documentation/webdriver/support_features/listeners/</guid><description>These allow you to execute custom actions in every time specific Selenium commands are sent
Java Python CSharp Ruby JavaScript Kotlin Add Example
Add Example
Add Example
Add Example
Add Example
Add Example</description></item><item><title>Chrome DevTools Logging Features</title><link>https://www.selenium.dev/pt-br/documentation/webdriver/bidi/cdp/logging/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/pt-br/documentation/webdriver/bidi/cdp/logging/</guid><description>Page being translated from English to Japanese. Do you speak Japanese? Help us to translate it by sending us pull requests! While Selenium 4 provides direct access to the Chrome DevTools Protocol, these methods will eventually be removed when WebDriver BiDi implemented.
Console Logs Java Python CSharp Ruby JavaScript Kotlin ((HasLogEvents) driver).onLogEvent(consoleEvent(e -&amp;gt; messages.add(e.getMessages().get(0)))); View full example on GitHub async with driver.bidi_connection() as session: async with Log(driver, session).add_listener(Console.ALL) as messages: View full example on GitHub using IJavaScriptEngine monitor = new JavaScriptEngine(driver); var messages = new List&amp;lt;string&amp;gt;(); monitor.</description></item><item><title>Migrando do RC para WebDriver</title><link>https://www.selenium.dev/pt-br/documentation/legacy/selenium_2/upgrading/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/pt-br/documentation/legacy/selenium_2/upgrading/</guid><description>Como migrar para o Selenium WebDriver Uma pergunta comum ao adotar o Selenium 2 é qual é a coisa certa a fazer ao adicionar novos testes a um conjunto existente de testes? Usuários que são novos no framework podem começar usando as novas APIs WebDriver para escrever seus testes. Mas e os usuários que já possuem suítes de testes existentes? Este guia é projetado para demonstrar como migrar seus testes existentes para as novas APIs, permitindo que todos os novos testes sejam escritos usando os novos recursos oferecidos pelo WebDriver.</description></item><item><title>Opções CLI</title><link>https://www.selenium.dev/pt-br/documentation/grid/configuration/cli_options/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/pt-br/documentation/grid/configuration/cli_options/</guid><description>Diferentes secções estão disponíveis para configurar uma Grid. Cada secção tem opções que podem ser configuradas através de opções CLI.
Pode ver abaixo um mapeamento entre o componente e a secção respectiva.
Note que esta documentação pode estar desactualizada se uma opção foi adicionada ou modificada, mas ainda não ter havido oportunidade de actualizar a documentação. Caso depare com esta situação, verifique a secção &amp;ldquo;ajuda de configuração&amp;rdquo; e esteja à vontade para nos enviar um pull request com alterações a esta página.</description></item><item><title>Opções do navegador</title><link>https://www.selenium.dev/pt-br/documentation/webdriver/drivers/options/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/pt-br/documentation/webdriver/drivers/options/</guid><description>Page being translated from English to Portuguese. Do you speak Portuguese? Help us to translate it by sending us pull requests! No Selenium 3, os recursos foram definidos em uma sessão usando classes de recursos desejados. A partir do Selenium 4, você deve usar as classes de opções do navegador. Para sessões remotas de driver, uma instância de opções do navegador é necessária, pois determina qual navegador será usado.</description></item><item><title>Selenium RC (Selenium 1)</title><link>https://www.selenium.dev/pt-br/documentation/legacy/selenium_1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/pt-br/documentation/legacy/selenium_1/</guid><description>Introdução Selenium RC foi o principal projeto da Selenium por muito tempo, antes da fusão WebDriver / Selenium trazer o Selenium 2, uma ferramenta mais poderosa. Vale ressaltar que não há mais suporte para Selenium 1.
Como o Selenium RC funciona Primeiro, vamos descrever como os componentes do Selenium RC operam e o papel que cada um desempenha na execução de seus scripts de teste.
Componentes do RC Os componentes do Selenium RC são:</description></item><item><title>Sobre automação de testes</title><link>https://www.selenium.dev/pt-br/documentation/test_practices/overview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/pt-br/documentation/test_practices/overview/</guid><description>Primeiro, comece perguntando a si mesmo se você realmente precisa ou não de um navegador. As probabilidades são de que, em algum ponto, se você estiver trabalhando em um aplicativo da web complexo, você precisará abrir um navegador e realmente testá-lo.
No entanto, os testes funcionais do usuário final, como os testes Selenium, são caros para executar. Além disso, eles normalmente exigem infraestrutura substancial para ser executado de forma eficaz. É uma boa regra sempre se perguntar se o que você deseja testar pode ser feito usando abordagens de teste mais leves, como testes de unidade ou com uma abordagem de nível inferior.</description></item><item><title>Suporte a buscas em GraphQL</title><link>https://www.selenium.dev/pt-br/documentation/grid/advanced_features/graphql_support/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/pt-br/documentation/grid/advanced_features/graphql_support/</guid><description>GraphQL é uma linguagem de consulta para APIs e um runtime para atender a essas consultas com seus dados existentes. Ele dá aos usuários o poder de pedir exatamente o que precisam e nada mais.
Enums Enums representam possíveis conjuntos de valores para um campo.
Por exemplo, o objeto Node possui um campo chamado status. O estado é um enum (especificamente, do tipo Status) porque pode ser UP, DRAINING ou UNAVAILABLE.</description></item><item><title>Ações de Teclado</title><link>https://www.selenium.dev/pt-br/documentation/webdriver/actions_api/keyboard/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/pt-br/documentation/webdriver/actions_api/keyboard/</guid><description>Existem apenas 2 ações que podem ser realizadas com um teclado: pressionar uma tecla e liberar uma tecla pressionada. Além de suportar caracteres ASCII, cada tecla do teclado possui uma representação que pode ser pressionada ou liberada em sequências designadas.
Chaves Além das teclas representadas pelo Unicode regular, valores Unicode foram atribuídos a outras teclas de teclado para uso com o Selenium. Cada linguagem tem sua própria maneira de fazer referência a essas teclas; a lista completa pode ser encontrada aqui.</description></item><item><title>Tipos de teste</title><link>https://www.selenium.dev/pt-br/documentation/test_practices/testing_types/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/pt-br/documentation/test_practices/testing_types/</guid><description>Teste de aceitação Este tipo de teste é feito para determinar se um recurso ou sistema atende às expectativas e requisitos do cliente. Este tipo de teste geralmente envolve cooperação ou feedback do cliente, sendo uma atividade de validação que responde a pergunta:
Estamos construindo o produto certo?.
Para aplicações web, a automação desse teste pode ser feita diretamente com o Selenium, simulando o comportamento esperado do usuário. Esta simulação pode ser feita por gravação / reprodução ou por meio dos diferentes idiomas suportados, conforme explicado nesta documentação.</description></item><item><title>Códigos de respostas HTTP</title><link>https://www.selenium.dev/pt-br/documentation/test_practices/discouraged/http_response_codes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/pt-br/documentation/test_practices/discouraged/http_response_codes/</guid><description>Para algumas configurações de navegador no Selenium RC, Selenium atuou como um proxy entre o navegador e o site sendo automatizado. Isso significa que todo o tráfego do navegador que passou pelo Selenium poderia ser capturado ou manipulado. O método captureNetworkTraffic() pretendia capturar todo o tráfego de rede entre o navegador e o site sendo automatizado, incluindo códigos de resposta HTTP.
Selenium WebDriver é uma abordagem completamente diferente para a automação do navegador, preferindo agir mais como um usuário.</description></item><item><title>HTTP Client Configuration</title><link>https://www.selenium.dev/pt-br/documentation/webdriver/drivers/http_client/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/pt-br/documentation/webdriver/drivers/http_client/</guid><description>These allow you to set various parameters for the HTTP library
Java Python CSharp Ruby JavaScript Kotlin Add Example
Add Example
Add Example
client = Selenium::WebDriver::Remote::Http::Default.new(open_timeout: 30, read_timeout: 30) expect(client.open_timeout).to eq 30 View full example on GitHub Add Example
Add Example</description></item><item><title>Modelos de objetos de página</title><link>https://www.selenium.dev/pt-br/documentation/test_practices/encouraged/page_object_models/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/pt-br/documentation/test_practices/encouraged/page_object_models/</guid><description>Nota: esta página reuniu conteúdos de várias fontes, incluindo o Selenium wiki
Visão geral Dentro da interface de usuário (UI) do seu aplicativo web, existem áreas com as quais seus testes interagem. O Page Object modela apenas essas áreas como objetos dentro do código de teste. Isso reduz a quantidade de código duplicado e significa que, se a UI mudar, a correção precisará ser aplicada apenas em um lugar.
Page Object é um padrão de design (Design Pattern) que se tornou popular na automação de testes para melhorar a manutenção de testes e reduzir a duplicação de código.</description></item><item><title>Rotas da Grid</title><link>https://www.selenium.dev/pt-br/documentation/grid/advanced_features/endpoints/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/pt-br/documentation/grid/advanced_features/endpoints/</guid><description>Grid Status da Grid O status da Grid fornece o estado atual da grid. Consiste em detalhes sobre cada nó registrado. Para cada nó, o status inclui informações sobre a disponibilidade, sessões e slots do nó.
cURL GET &amp;#39;http://localhost:4444/status&amp;#39; Deletar sessão A exclusão da sessão encerra a sessão do WebDriver, fecha o driver e o remove do mapa de sessões ativas. Qualquer solicitação usando o id de sessão removido ou reutilizando a instância do driver gerará um erro.</description></item><item><title>Selenium Manager (Beta)</title><link>https://www.selenium.dev/pt-br/documentation/selenium_manager/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/pt-br/documentation/selenium_manager/</guid><description>Motivation TL;DR: Selenium Manager is the official driver manager of the Selenium project, and it is shipped out of the box with every Selenium release.
Selenium uses the native support implemented by each browser to carry out the automation process. For this reason, Selenium users need to place a component called driver (chromedriver, geckodriver, msedgedriver, etc.) between the script using the Selenium API and the browser. For many years, managing these drivers was a manual process for Selenium users.</description></item><item><title>Driver Service Class</title><link>https://www.selenium.dev/pt-br/documentation/webdriver/drivers/service/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/pt-br/documentation/webdriver/drivers/service/</guid><description>The Service classes are for managing the starting and stopping of drivers. They can not be used with a Remote WebDriver session.
Service classes allow you to specify information about the driver, like location and which port to use. They also let you specify what arguments get passed to the command line. Most of the useful arguments are related to logging.
Default Service instance To start a driver with a default service instance:</description></item><item><title>Toml Options</title><link>https://www.selenium.dev/pt-br/documentation/grid/configuration/toml_options/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/pt-br/documentation/grid/configuration/toml_options/</guid><description>Page being translated from English to Portuguese. Do you speak Portuguese? Help us to translate it by sending us pull requests! All the options shown in CLI options can be configured through a TOML file. This page shows configuration examples for the different Grid components.
Note that this documentation could be outdated if an option was modified or added but has not been documented yet. In case you bump into this situation, please check the &amp;ldquo;Config help&amp;rdquo; section and feel free to send us a pull request updating this page.</description></item><item><title>Trabalhando com cores</title><link>https://www.selenium.dev/pt-br/documentation/webdriver/support_features/colors/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/pt-br/documentation/webdriver/support_features/colors/</guid><description>Ocasionalmente, você desejará validar a cor de algo como parte de seus testes; o problema é que as definições de cores na web não são constantes. Não seria bom se houvesse uma maneira fácil de comparar uma representação HEX de uma cor com uma representação RGB de uma cor, ou uma representação RGBA de uma cor com uma representação HSLA de uma cor?
Não se preocupe. Existe uma solução: a classe Color!</description></item><item><title>Funcionalidade específica do Chrome</title><link>https://www.selenium.dev/pt-br/documentation/webdriver/browsers/chrome/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/pt-br/documentation/webdriver/browsers/chrome/</guid><description>Por omissão, Selenium 4 é compatível com Chrome v75 e superiores. Note que a versão (maior) do navegador e do chromedriver devem ser idênticas.
Opções Capacidades comuns a todos os navegadores estão descritas na página Opções.
Capacidades únicas ao Chrome podem ser encontradas na página da Google para Capacidades e &amp;amp; ChromeOptions
Este é um exemplo de como iniciar uma sessão Chrome com um conjunto de opções básicas:
Java Python CSharp Ruby JavaScript Kotlin ChromeOptions options = new ChromeOptions(); driver = new ChromeDriver(options); View full example on GitHub options = webdriver.</description></item><item><title>Configurando a sua</title><link>https://www.selenium.dev/pt-br/documentation/legacy/selenium_3/grid_setup/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/pt-br/documentation/legacy/selenium_3/grid_setup/</guid><description>Para usar Selenium Grid, você precisa manter sua própria infraestrutura para os nós. Como isso pode ser um esforço pesado e intenso, muitas organizações usam provedores IaaS como Amazon EC2 e Google Compute para fornecer essa infraestrutura.
Outras opções incluem o uso de provedores como Sauce Labs ou Testing Bot que fornecem uma Selenium Grid como um serviço na nuvem. Certamente também é possível executar nós em seu próprio hardware. Este capítulo entrará em detalhes sobre a opção de executar sua própria Grid, completo com sua própria infraestrutura de nós.</description></item><item><title>Unable to Locate Driver Error</title><link>https://www.selenium.dev/pt-br/documentation/webdriver/troubleshooting/errors/driver_location/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/pt-br/documentation/webdriver/troubleshooting/errors/driver_location/</guid><description>Historically, this is the most common error beginning Selenium users get when trying to run code for the first time:
Java Python CSharp Ruby The path to the driver executable must be set by the webdriver.chrome.driver system property; for more information, see https://chromedriver.chromium.org/. The latest version can be downloaded from https://chromedriver.chromium.org/downloads The executable chromedriver needs to be available in the path. The file geckodriver does not exist. The driver can be downloaded at https://github.</description></item><item><title>Information about web elements</title><link>https://www.selenium.dev/pt-br/documentation/webdriver/elements/information/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/pt-br/documentation/webdriver/elements/information/</guid><description>There are a number of details you can query about a specific element.
Is Displayed This method is used to check if the connected Element is displayed on a webpage. Returns a Boolean value, True if the connected element is displayed in the current browsing context else returns false.
This functionality is mentioned in, but not defined by the w3c specification due to the impossibility of covering all potential conditions. As such, Selenium cannot expect drivers to implement this functionality directly, and now relies on executing a large JavaScript function directly.</description></item><item><title>Linguagem específica de domínio (DSL)</title><link>https://www.selenium.dev/pt-br/documentation/test_practices/encouraged/domain_specific_language/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/pt-br/documentation/test_practices/encouraged/domain_specific_language/</guid><description>Uma linguagem específica de domínio (DSL) é um sistema que fornece ao usuário um meio expressivo de resolver um problema. Ele permite a um usuário interagir com o sistema em seus termos - não apenas na linguagem do programador.
Seus usuários, em geral, não se importam com a aparência do seu site. Eles não preocupam-se com a decoração, animações ou gráficos. Eles deseja usar seu sistema para empurrar seus novos funcionários através do processo com dificuldade mínima; eles querem reservar uma viagem para o Alasca; eles querem configurar e comprar unicórnios com desconto.</description></item><item><title>Localizando elementos</title><link>https://www.selenium.dev/pt-br/documentation/webdriver/elements/locators/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/pt-br/documentation/webdriver/elements/locators/</guid><description>Um localizador é uma forma de identificar elementos numa página. São os argumentos passados aos métodos Finders .
Visite os nossas directrizes e recomendações para dicas sobre locators, incluindo quais usar e quando, e também porque é que deve declarar localizadores separadamente dos finders.
Estratégias de seleção de elemento Existem oito estratégias diferentes de localização de elementos embutidas no WebDriver:
Localizador Descrição class name Localiza elementos cujo nome de classe contém o valor de pesquisa (nomes de classes compostas não são permitidos) css selector Localiza elementos que correspondem a um seletor CSS id Localiza elementos cujo atributo de ID corresponde ao valor de pesquisa name Localiza elementos cujo atributo NAME corresponde ao valor de pesquisa link text Localiza elementos âncora cujo texto visível corresponde ao valor de pesquisa partial link text Localiza elementos âncora cujo texto visível contém o valor da pesquisa.</description></item><item><title>Logging Selenium commands</title><link>https://www.selenium.dev/pt-br/documentation/webdriver/troubleshooting/logging/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/pt-br/documentation/webdriver/troubleshooting/logging/</guid><description>Turning on logging is a valuable way to get extra information that might help you determine why you might be having a problem.
Getting a logger Java Python CSharp Ruby JavaScript Kotlin Java logs are typically created per class. You can work with the default logger to work with all loggers. To filter out specific classes, see Filtering
Get the root logger:
Logger logger = Logger.getLogger(&amp;#34;&amp;#34;); View full example on GitHub Java Logging is not exactly straightforward, and if you are just looking for an easy way to look at the important Selenium logs, take a look at the Selenium Logger project</description></item><item><title>Login via Gmail, email e Facebook</title><link>https://www.selenium.dev/pt-br/documentation/test_practices/discouraged/gmail_email_and_facebook_logins/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/pt-br/documentation/test_practices/discouraged/gmail_email_and_facebook_logins/</guid><description>Por vários motivos, fazer login em sites como Gmail e Facebook usando do WebDriver não é recomendado. Além de ser contra os termos de uso desses sites (onde você corre o risco de ter a conta encerrada), é lento e não confiável.
A prática ideal é usar as APIs que os provedores de e-mail oferecem, ou no caso do Facebook, o serviço de ferramentas para desenvolvedores que expõe uma API para criar contas de teste, amigos e assim por diante.</description></item><item><title>Ações do Mouse</title><link>https://www.selenium.dev/pt-br/documentation/webdriver/actions_api/mouse/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/pt-br/documentation/webdriver/actions_api/mouse/</guid><description>Existem apenas 3 ações que podem ser realizadas com um mouse: pressionar um botão, liberar um botão pressionado e mover o mouse. O Selenium fornece métodos de conveniência que combinam essas ações da maneira mais comum.
Clicar e Manter Pressionado Este método combina mover o mouse para o centro de um elemento com a pressão do botão esquerdo do mouse. Isso é útil para focar em um elemento específico:
Java Python CSharp Ruby JavaScript Kotlin WebElement clickable = driver.</description></item><item><title>Chrome DevTools Network Features</title><link>https://www.selenium.dev/pt-br/documentation/webdriver/bidi/cdp/network/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/pt-br/documentation/webdriver/bidi/cdp/network/</guid><description>Page being translated from English to Japanese. Do you speak Japanese? Help us to translate it by sending us pull requests! While Selenium 4 provides direct access to the Chrome DevTools Protocol, these methods will eventually be removed when WebDriver BiDi implemented.
Basic authentication Some applications make use of browser authentication to secure pages. It used to be common to handle them in the URL, but browsers stopped supporting this.</description></item><item><title>Personalizando um Nó</title><link>https://www.selenium.dev/pt-br/documentation/grid/advanced_features/customize_node/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/pt-br/documentation/grid/advanced_features/customize_node/</guid><description>Como personalizar um Nó Há momentos em que gostaríamos de personalizar um Nó de acordo com nossas necessidades.
Por exemplo, podemos desejar fazer alguma configuração adicional antes que uma sessão comece a ser executada e executar alguma limpeza após o término de uma sessão.
Os seguintes passos podem ser seguidos para isso:
Crie uma classe que estenda org.openqa.selenium.grid.node.Node.
Adicione um método estático (este será nosso método de fábrica) à classe recém-criada, cuja assinatura se parece com esta:</description></item><item><title>Quando usar a Grid</title><link>https://www.selenium.dev/pt-br/documentation/grid/applicability/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/pt-br/documentation/grid/applicability/</guid><description>Quando deve usar a Selenium Grid?
Para executar testes em paralelo, com vários tipos e versões de navegador e sistemas operativos Para reduzir o tempo necessário a executar uma bateria de testes A Selenium Grid executa baterias de testes em paralelo contra várias máquinas (chamadas Nodes). Para testes longos, isto poderá poupar minutos, horas e talvez dias. Isto encurta o tempo de espera para obter resultados dos testes de cada vez que sobre a aplicação em testes é alterada.</description></item><item><title>Trabalhando com cookies</title><link>https://www.selenium.dev/pt-br/documentation/webdriver/interactions/cookies/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/pt-br/documentation/webdriver/interactions/cookies/</guid><description>Um cookie é um pequeno pedaço de dado enviado de um site e armazenado no seu computador. Os cookies são usados principalmente para reconhecer o usuário e carregar as informações armazenadas.
A API WebDriver fornece uma maneira de interagir com cookies com métodos integrados:
Add Cookie É usado para adicionar um cookie ao contexto de navegação atual. Add Cookie aceita apenas um conjunto de objetos JSON serializáveis definidos. Aqui é o link para a lista de valores-chave JSON aceitos.</description></item><item><title>Ações de Caneta</title><link>https://www.selenium.dev/pt-br/documentation/webdriver/actions_api/pen/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/pt-br/documentation/webdriver/actions_api/pen/</guid><description>Chromium Only
Uma caneta é um tipo de entrada de ponteiro que possui a maior parte do mesmo comportamento que um mouse, mas também pode ter propriedades de evento únicas para uma caneta stylus. Além disso, enquanto um mouse possui 5 botões, uma caneta possui 3 estados equivalentes de botão:
0 — Contato por Toque (o padrão; equivalente a um clique com o botão esquerdo) 2 — Botão do Barril (equivalente a um clique com o botão direito) 5 — Botão de Borracha (atualmente não suportado pelos drivers) Usando uma Caneta Java Python CSharp Ruby JavaScript Kotlin Selenium v4.</description></item><item><title>Dependência entre testes</title><link>https://www.selenium.dev/pt-br/documentation/test_practices/discouraged/test_dependency/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/pt-br/documentation/test_practices/discouraged/test_dependency/</guid><description>Uma ideia comum e um equívoco sobre o teste automatizado é sobre uma ordem de testes específica. Seus testes devem ser executados em qualquer ordem, e não depender da conclusão de outros testes para ter sucesso.</description></item><item><title>Funcionalidade específica do Edge</title><link>https://www.selenium.dev/pt-br/documentation/webdriver/browsers/edge/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/pt-br/documentation/webdriver/browsers/edge/</guid><description>Microsoft Edge foi criado com recurso ao Chromium, cuja versão mais antiga suportada é a v79. Tal como o Chrome, a versão (maior) do edgedriver deve ser igual à do navegador Edge.
Todas as capacidades e opções encontradas na página Chrome page irão funcionar de igual forma para o Edge.
Opções Capabilities common to all browsers are described on the Options page.
Capabilities unique to Chromium are documented at Google&amp;rsquo;s page for Capabilities &amp;amp; ChromeOptions</description></item><item><title>External datastore</title><link>https://www.selenium.dev/pt-br/documentation/grid/advanced_features/external_datastore/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/pt-br/documentation/grid/advanced_features/external_datastore/</guid><description>Page being translated from English to Portuguese. Do you speak Portuguese? Help us to translate it by sending us pull requests! Table of Contents Introduction Setup Database backed Session Map Steps Redis backed Session Map Steps Introduction Selenium Grid allows you to persist information related to currently running sessions into an external data store. The external data store could be backed by your favourite database (or) Redis Cache system.</description></item><item><title>Gerando estado da aplicação</title><link>https://www.selenium.dev/pt-br/documentation/test_practices/encouraged/generating_application_state/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/pt-br/documentation/test_practices/encouraged/generating_application_state/</guid><description>Selenium não deve ser usado para preparar um caso de teste. Tudo as ações repetitivas e preparações para um caso de teste devem ser feitas por meio de outros métodos. Por exemplo, a maioria das IUs da web tem autenticação (por exemplo, um formulário de login). Eliminar o login via navegador da web antes de cada teste irá melhorar a velocidade e estabilidade do teste. Um método deve ser criado para obter acesso à AUT* (por exemplo, usando uma API para fazer login e definir um cookie).</description></item><item><title>Componentes</title><link>https://www.selenium.dev/pt-br/documentation/grid/components/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/pt-br/documentation/grid/components/</guid><description>A Selenium Grid 4 é uma re-escrita completa das versões anteriores. Além dos melhoramentos ao desempenho e aos cumprimentos dos standards, várias funcionalidades da Grid foram separadas para reflectir uma nova era de computação e desenvolvimento de software. Criada de raíz para containerização e escalabilidade cloud, Selenium Grid 4 é uma nova solução para a era moderna.
Router O Router é o ponto de entrada da Grid, recebendo todos os pedidos externos, reenviando para o componente correcto.</description></item><item><title>Esperas</title><link>https://www.selenium.dev/pt-br/documentation/webdriver/waits/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/pt-br/documentation/webdriver/waits/</guid><description>Perhaps the most common challenge for browser automation is ensuring that the web application is in a state to execute a particular Selenium command as desired. The processes often end up in a race condition where sometimes the browser gets into the right state first (things work as intended) and sometimes the Selenium code executes first (things do not work as intended). This is one of the primary causes of flaky tests.</description></item><item><title>Funcionalidade específica do Firefox</title><link>https://www.selenium.dev/pt-br/documentation/webdriver/browsers/firefox/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/pt-br/documentation/webdriver/browsers/firefox/</guid><description>Por omissão, Selenium 4 é compatível com Firefox 78 ou superior. Recomendamos que use sempre a versão mais recente do geckodriver.
Opções Capacidades comuns a todos os navegadores estão descritas na página Opções.
Capacidades únicas ao Firefox podem ser encontradas na página da Mozilla para firefoxOptions
Este é um exemplo de como iniciar uma sessão Firefox com um conjunto de opções básicas:
Java Python CSharp Ruby JavaScript Kotlin FirefoxOptions options = new FirefoxOptions(); driver = new FirefoxDriver(options); View full example on GitHub options = webdriver.</description></item><item><title>Working with IFrames and frames</title><link>https://www.selenium.dev/pt-br/documentation/webdriver/interactions/frames/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/pt-br/documentation/webdriver/interactions/frames/</guid><description>Frames são um meio obsoleto de construir um layout de site a partir de vários documentos no mesmo domínio. É improvável que você trabalhe com eles a menos que você esteja trabalhando com um webapp pré-HTML5. Iframes permitem a inserção de um documento de um domínio totalmente diferente, e são ainda comumente usado.
Se você precisa trabalhar com frames ou iframes, o WebDriver permite que você trabalhe com eles da mesma maneira.</description></item><item><title>Componentes</title><link>https://www.selenium.dev/pt-br/documentation/legacy/selenium_3/grid_components/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/pt-br/documentation/legacy/selenium_3/grid_components/</guid><description>Hub Intermediário e gerente Aceita solicitações para executar testes Recebe instruções do cliente e as executa remotamente nos nós Gerencia tópicos Um Hub é um ponto central para onde todos os seus testes são enviados. Cada Selenium Grid consiste em exatamente um hub. O hub precisa estar acessível dos respectivos clientes (ou seja, servidor de CI, máquina do desenvolvedor etc.) O hub irá conectar um ou mais nós aos quais os testes serão delegados.</description></item><item><title>Ações de Roda de Rolagem</title><link>https://www.selenium.dev/pt-br/documentation/webdriver/actions_api/wheel/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/pt-br/documentation/webdriver/actions_api/wheel/</guid><description>Selenium v4.2
Chromium Only
Existem 5 cenários para rolagem em uma página.
Rolagem até o Elemento Este é o cenário mais comum. Diferentemente dos métodos tradicionais de clique e envio de teclas, a classe de ações não rolará automaticamente o elemento de destino para a visualização, portanto, este método precisará ser usado se os elementos não estiverem dentro da janela de visualização.
Este método recebe um elemento da web como único argumento.</description></item><item><title>Chrome DevTools Script Features</title><link>https://www.selenium.dev/pt-br/documentation/webdriver/bidi/cdp/script/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/pt-br/documentation/webdriver/bidi/cdp/script/</guid><description>Page being translated from English to Japanese. Do you speak Japanese? Help us to translate it by sending us pull requests! While Selenium 4 provides direct access to the Chrome DevTools Protocol, these methods will eventually be removed when WebDriver BiDi implemented.
Script Pinning Java Python CSharp Ruby JavaScript Kotlin ScriptKey key = ((JavascriptExecutor) driver).pin(&amp;#34;return arguments;&amp;#34;); List&amp;lt;Object&amp;gt; arguments = (List&amp;lt;Object&amp;gt;) ((JavascriptExecutor) driver).executeScript(key, 1, true, element); View full example on GitHub Implementation Missing</description></item><item><title>Servidor do WebDriver remoto</title><link>https://www.selenium.dev/pt-br/documentation/legacy/selenium_2/remote_server/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/pt-br/documentation/legacy/selenium_2/remote_server/</guid><description>O servidor sempre será executado na máquina com o navegador que você deseja testar. O servidor pode ser usado a partir da linha de comando ou por meio de configuração de código.
Iniciando o servidor a partir da linha de comando Depois de fazer o download do selenium-server-standalone-{VERSION}.jar, coloque-o no computador com o navegador que deseja testar. Então, a partir do diretório com o jar, execute o seguinte:
java -jar selenium-server-standalone-{VERSION}.</description></item><item><title>Simulação de serviços externos</title><link>https://www.selenium.dev/pt-br/documentation/test_practices/encouraged/mock_external_services/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/pt-br/documentation/test_practices/encouraged/mock_external_services/</guid><description>Eliminar as dependências de serviços externos melhorará muito a velocidade e estabilidade de seus testes.</description></item><item><title>Style guide for Selenium documentation</title><link>https://www.selenium.dev/pt-br/documentation/about/style/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/pt-br/documentation/about/style/</guid><description>Read our contributing documentation for complete instructions on how to add content to this documentation.
Alerts Alerts have been added to direct potential contributors to where specific content is missing.
{{&amp;lt; alert-content /&amp;gt;}} or
{{&amp;lt; alert-content &amp;gt;}} Additional information about what specific content is needed {{&amp;lt; /alert-content &amp;gt;}} Which gets displayed like this: Content Help Note: This section needs additional and/or updated content Additional information about what specific content is needed Check our contribution guidelines if you&amp;rsquo;d like to help.</description></item><item><title>Teste de performance/desempenho</title><link>https://www.selenium.dev/pt-br/documentation/test_practices/discouraged/performance_testing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/pt-br/documentation/test_practices/discouraged/performance_testing/</guid><description>Teste de desempenho usando Selenium e WebDriver geralmente não é recomendado. Não porque é incapaz, mas porque não é otimizado para o trabalho e é improvável que você obtenha bons resultados.
Pode parecer ideal para teste de desempenho no contexto do usuário, mas um conjunto de testes WebDriver estão sujeitos a muitos pontos de fragilidade externa e interna que estão além do seu controle; por exemplo, velocidade de inicialização do navegador, velocidade dos servidores HTTP, resposta de servidores de terceiros que hospedam JavaScript ou CSS, e a penalidade de instrumentação da própria implementação do WebDriver.</description></item><item><title>ThreadGuard</title><link>https://www.selenium.dev/pt-br/documentation/webdriver/support_features/thread_guard/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/pt-br/documentation/webdriver/support_features/thread_guard/</guid><description>Esta classe está disponível apenas no Java Binding ThreadGuard verifica se um driver é chamado apenas da mesma thread que o criou. Problemas de threading, especialmente durante a execução de testes em paralelo, podem ter erros misteriosos e difíceis de diagnosticar. Usar este wrapper evita esta categoria de erros e gerará uma exceção quando isso acontecer.
O exemplo a seguir simula um conflito de threads:
public class DriverClash { //thread main (id 1) criou este driver private WebDriver protectedDriver = ThreadGuard.</description></item><item><title>Navegação por links</title><link>https://www.selenium.dev/pt-br/documentation/test_practices/discouraged/link_spidering/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/pt-br/documentation/test_practices/discouraged/link_spidering/</guid><description>Usar o WebDriver para navegar por links não é uma prática recomendada. Não porque não pode ser feito, mas porque WebDriver definitivamente não é a ferramenta ideal para isso. O WebDriver precisa de tempo para inicializar, e pode levar vários segundos, até um minuto dependendo de como seu teste é escrito, apenas para chegar à página e atravessar o DOM.
Em vez de usar o WebDriver para isso, você poderia economizar muito tempo executando um comando curl, ou usando uma biblioteca como BeautifulSoup uma vez que esses métodos não dependem em criar um navegador e navegar para uma página.</description></item><item><title>Print Page</title><link>https://www.selenium.dev/pt-br/documentation/webdriver/interactions/print_page/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/pt-br/documentation/webdriver/interactions/print_page/</guid><description>Printing a webpage is a common task, whether for sharing information or maintaining archives. Selenium simplifies this process through its PrintOptions, PrintsPage, and browsingContext classes, which provide a flexible and intuitive interface for automating the printing of web pages. These classes enable you to configure printing preferences, such as page layout, margins, and scaling, ensuring that the output meets your specific requirements.
Configuring Orientation Using the getOrientation() and setOrientation() methods, you can get/set the page orientation &amp;mdash; either PORTRAIT or LANDSCAPE.</description></item><item><title>Relatórios melhorados</title><link>https://www.selenium.dev/pt-br/documentation/test_practices/encouraged/improved_reporting/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/pt-br/documentation/test_practices/encouraged/improved_reporting/</guid><description>O Selenium não foi projetado para relatar sobre o status de casos de teste. Aproveitar os recursos de relatórios integrados de frameworks de teste unitários é um bom começo. A maioria dos frameworks de teste unitários podem gerar relatórios formatados em xUnit ou HTML. Relatórios xUnit são populares para importar resultados para um servidor de integração contínua (CI) como Jenkins, Travis, Bamboo, etc. Aqui estão alguns links para obter mais informações sobre resultados de relatórios em vários idiomas.</description></item><item><title>Autenticação de Dois Fatores (2FA)</title><link>https://www.selenium.dev/pt-br/documentation/test_practices/discouraged/two_factor_authentication/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/pt-br/documentation/test_practices/discouraged/two_factor_authentication/</guid><description>A autenticação de dois fatores, conhecida como 2FA, é um mecanismo de autorização onde a senha de uso único (OTP) é gerada usando aplicativos móveis &amp;ldquo;Autenticadores&amp;rdquo;, como &amp;ldquo;Google Authenticator&amp;rdquo;, &amp;ldquo;Microsoft Authenticator&amp;rdquo; etc., ou por SMS, e-mail para autenticação. Automatizar isso perfeitamente e consistentemente é um grande desafio no Selenium. Existem algumas maneiras para automatizar este processo. Mas essa será outra camada em cima de nossos testes Selenium e não protegidos também.</description></item><item><title>Evite compartilhamento de estado</title><link>https://www.selenium.dev/pt-br/documentation/test_practices/encouraged/avoid_sharing_state/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/pt-br/documentation/test_practices/encouraged/avoid_sharing_state/</guid><description>Embora mencionado em vários lugares, vale a pena mencionar novamente. Garanta que os testes são isolados uns dos outros.
Não compartilhe dados de teste. Imagine vários testes em que cada um consulta o banco de dados para pedidos válidos antes de escolher um para executar uma ação. Caso dois testes peguem a mesma ordem, provavelmente você obterá um comportamento inesperado.
Limpe dados desatualizados no aplicativo que podem ser obtidos por outro teste, por exemplo registros de pedidos inválidos.</description></item><item><title>Funcionalidade específica do IE</title><link>https://www.selenium.dev/pt-br/documentation/webdriver/browsers/internet_explorer/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/pt-br/documentation/webdriver/browsers/internet_explorer/</guid><description>Desde Junho de 2022, o Projecto Selenium deixou de suportar oficialmente o navegador Internet Explorer. O driver Internet Explorer continua a suportar a execução do Microsoft Edge no modo &amp;ldquo;IE Compatibility Mode.&amp;rdquo;
Considerações especiais O IE Driver é o único driver mantido directamente pelo Projecto Selenium. Embora existam binários para as versões de 32 e 64 bits, existem algumas limitações conhecidas com o driver de 64 bits. Desta forma, recomenda-se a utilização do driver de 32 bits.</description></item><item><title>Tips on working with locators</title><link>https://www.selenium.dev/pt-br/documentation/test_practices/encouraged/locators/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/pt-br/documentation/test_practices/encouraged/locators/</guid><description>Take a look at examples of the supported locator strategies.
No geral, se os IDs de HTML estiverem disponíveis, únicos e consistentemente previsíveis, eles são o método preferido para localizar um elemento uma página. Eles tendem a trabalhar muito rapidamente e dispensar muito processamento que vem com travessias de DOM complicadas.
Se IDs exclusivos não estiverem disponíveis, um seletor CSS bem escrito é o método preferido de localização de um elemento.</description></item><item><title>Programe o seu primeiro script Selenium</title><link>https://www.selenium.dev/pt-br/documentation/webdriver/getting_started/first_script/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/pt-br/documentation/webdriver/getting_started/first_script/</guid><description>Assim que você tiver o Selenium instalado, você estará pronto para programar códigos Selenium.
Oito Componentes Básicos Tudo que o Selenium faz é enviar comandos ao navegador de internet para fazer algo ou solicitar informações dele. A maior parte do que você irá fazer com o Selenium é uma combinação desses comandos básicos.
Click on the link to &amp;ldquo;View full example on GitHub&amp;rdquo; to see the code in context.
1. Iniciando uma sessão Para ter mais detalhes sobre como iniciar uma sessão, leia nossa documentação em driver sessions</description></item><item><title>Working with windows and tabs</title><link>https://www.selenium.dev/pt-br/documentation/webdriver/interactions/windows/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/pt-br/documentation/webdriver/interactions/windows/</guid><description>Janelas e guias Pegue o idenficador da janela O WebDriver não faz distinção entre janelas e guias. E se seu site abre uma nova guia ou janela, o Selenium permitirá que você trabalhe usando um identificador. Cada janela tem um identificador único que permanece persistente em uma única sessão. Você pode pegar o identificador atual usando:
Java Python CSharp Ruby JavaScript Kotlin // Navigate to Url driver.get(&amp;#34;https://www.selenium.dev/selenium/web/window_switching_tests/page_with_frame.html&amp;#34;); //fetch handle of this String currHandle=driver.</description></item><item><title>Independência de Testes</title><link>https://www.selenium.dev/pt-br/documentation/test_practices/encouraged/test_independency/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/pt-br/documentation/test_practices/encouraged/test_independency/</guid><description>Escreva cada teste como sua própria unidade. Escreva os testes de uma forma que não seja dependente de outros testes para concluir:
Digamos que existe um sistema de gerenciamento de conteúdo com o qual você pode criar algum conteúdo personalizado que então aparece em seu site como um módulo após publicação, e pode levar algum tempo para sincronizar entre o CMS e a aplicação.
Uma maneira errada de testar seu módulo é que o conteúdo seja criado e publicado em um teste e, em seguida, verificar o módulo em outro teste.</description></item><item><title>Arquitectura da Grid</title><link>https://www.selenium.dev/pt-br/documentation/grid/architecture/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/pt-br/documentation/grid/architecture/</guid><description>A Grid está desenhada como um conjunto de componentes, em que cada tem o seu papel crucial em manter a Grid. Isto pode parecer um pouco complicado, mas esperamos que este documento ajude a esclarecer alguma confusão.
Os componentes chave Os componentes principais da Grid são:
Event Bus Usado para enviar mensagens que podem ser recebidas de forma assíncrona entre os outros componentes. New Session Queue Mantém uma lista de pedidos de sessão que serão assignadas a um Node pelo Distributor.</description></item><item><title>Como atualizar para Selenium 4</title><link>https://www.selenium.dev/pt-br/documentation/webdriver/troubleshooting/upgrade_to_selenium_4/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/pt-br/documentation/webdriver/troubleshooting/upgrade_to_selenium_4/</guid><description>Atualizar para o Selenium 4 deve ser um processo sem dificuldades se você estiver usando uma das linguagens oficialmente suportadas (Ruby, JavaScript, C#, Python, and Java). Pode haver alguns casos em que alguns problemas podem acontecer, este guia irá ajudar você a resolvê-los. Vamos passar as etapas para atualizar as dependências do seu projeto e entender as depreciações e também as mudanças trazidas pela versão atualizada.
Estas são as etapas que seguiremos para atualizar para o Selenium 4:</description></item><item><title>Considere usar uma API fluente</title><link>https://www.selenium.dev/pt-br/documentation/test_practices/encouraged/consider_using_a_fluent_api/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/pt-br/documentation/test_practices/encouraged/consider_using_a_fluent_api/</guid><description>Martin Fowler cunhou o termo &amp;ldquo;API Fluent&amp;rdquo;. Selenium já implementa algo assim em sua classe FluentWait, que é pretende ser uma alternativa à classe padrão Wait. Você pode habilitar o padrão de design de API fluente em seu objeto de página e, em seguida, consulte a página de pesquisa do Google com um snippet de código como este:
driver.get( &amp;#34;http://www.google.com/webhp?hl=en&amp;amp;amp;tab=ww&amp;#34; ); GoogleSearchPage gsp = new GoogleSearchPage(driver); gsp.setSearchString().clickSearchButton(); A classe de objeto da página do Google com este comportamento fluente pode ser assim:</description></item><item><title>Selenium IDE</title><link>https://www.selenium.dev/pt-br/documentation/ide/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/pt-br/documentation/ide/</guid><description>Selenium&amp;rsquo;s Integrated Development Environment (Selenium IDE) é uma ferramenta de utilização simples que grava as acções de um utilizador usando comandos Selenium com parametros definidos conforme o contexto de cada elemento. Esta é uma forma excelente de aprender todo o sintaxe Selenium. Está disponível para os navegadores Google Chrome, Mozilla Firefox, e Microsoft Edge.
Para mais informações, visite a Documentação Selenium IDE.</description></item><item><title>Remote WebDriver</title><link>https://www.selenium.dev/pt-br/documentation/webdriver/drivers/remote_webdriver/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/pt-br/documentation/webdriver/drivers/remote_webdriver/</guid><description>Page being translated from English to Portuguese. Do you speak Portuguese? Help us to translate it by sending us pull requests! Selenium lets you automate browsers on remote computers if there is a Selenium Grid running on them. The computer that executes the code is referred to as the client computer, and the computer with the browser and driver is referred to as the remote computer or sometimes as an end-node.</description></item><item><title>Funcionalidade específica do Safari</title><link>https://www.selenium.dev/pt-br/documentation/webdriver/browsers/safari/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/pt-br/documentation/webdriver/browsers/safari/</guid><description>Ao invés dos drivers para Chromium e Firefox, o safaridriver faz parte to sistema Operativo. Para activar a automação no Safari, execute o seguinte comando no terminal:
safaridriver --enable Opções Capacidades comuns a todos os navegadores estão descritas na página Opções.
Capacidades únicas ao Safari podem ser encontradas na página da Apple WebDriver para Safari
Este é um exemplo de como iniciar uma sessão Safari com um conjunto de opções básicas::</description></item><item><title>Trabalhando com elementos select</title><link>https://www.selenium.dev/pt-br/documentation/webdriver/support_features/select_lists/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/pt-br/documentation/webdriver/support_features/select_lists/</guid><description>The Select object will now give you a series of commands that allow you to interact with a &amp;lt;select&amp;gt; element.
If you are using Java or .NET make sure that you&amp;rsquo;ve properly required the support package in your code. See the full code from GitHub in any of the examples below.
Note that this class only works for HTML elements select and option. It is possible to design drop-downs with JavaScript overlays using div or li, and this class will not work for those.</description></item><item><title>Organizando e executando o código Selenium</title><link>https://www.selenium.dev/pt-br/documentation/webdriver/getting_started/using_selenium/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/pt-br/documentation/webdriver/getting_started/using_selenium/</guid><description>Se quiser executar mais do que um punhado de scripts pontuais, precisa de ser capaz de organizar e trabalhar com seu código. Esta página deve dar a você ideias de como fazer coisas produtivas com seu código Selenium.
Usos comuns A maioria das pessoas usa o Selenium para executar testes automatizados para aplicações web, mas o Selenium suporta qualquer caso de uso de automação de navegador.
Tarefas Repetitivas Talvez seja necessário fazer login em um site e baixar algo ou enviar um formulário.</description></item><item><title>Navegador novo por teste</title><link>https://www.selenium.dev/pt-br/documentation/test_practices/encouraged/fresh_browser_per_test/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/pt-br/documentation/test_practices/encouraged/fresh_browser_per_test/</guid><description>Comece cada teste a partir de um estado limpo conhecido. Idealmente, ligue uma nova máquina virtual para cada teste. Se ligar uma nova máquina virtual não for prático, pelo menos inicie um novo WebDriver para cada teste. Most browser drivers like GeckoDriver and ChromeDriver will start with a clean known state with a new user profile, by default.
WebDriver driver = new FirefoxDriver();</description></item><item><title>BiDirectional API (W3C compliant)</title><link>https://www.selenium.dev/pt-br/documentation/webdriver/bidi/w3c/log/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/pt-br/documentation/webdriver/bidi/w3c/log/</guid><description>Page being translated from English to Portuguese. Do you speak Portuguese? Help us to translate it by sending us pull requests! This section contains the APIs related to logging.
Console logs Listen to the console.log events and register callbacks to process the event.
Java Ruby JavaScript Kotlin Selenium v4.8
public void jsErrors() { CopyOnWriteArrayList&amp;lt;ConsoleLogEntry&amp;gt; logs = new CopyOnWriteArrayList&amp;lt;&amp;gt;(); try (LogInspector logInspector = new LogInspector(driver)) { logInspector.onConsoleEntry(logs::add); } driver.get(&amp;#34;https://www.selenium.dev/selenium/web/bidi/logEntryAdded.html&amp;#34;); View full example on GitHub Add Example</description></item><item><title>Virtual Authenticator</title><link>https://www.selenium.dev/pt-br/documentation/webdriver/interactions/virtual_authenticator/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/pt-br/documentation/webdriver/interactions/virtual_authenticator/</guid><description>Aplicações web podem habilitar um mecanismo de autenticação baseado em chaves públicas conhecido como Web Authentication para autenticar usuários sem usar uma senha. Web Authentication define APIs que permitem ao usuário criar uma credencial e registra-la com um autenticador. Um autenticador pode ser um dispositivo ou um software que guarde as chaves públicas do usuário e as acesse caso seja pedido.
Como o nome sugere, Virtual Authenticator emula esses autenticadores para testes.</description></item><item><title/><link>https://www.selenium.dev/pt-br/documentation/webdriver/support_features/expected_conditions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.selenium.dev/pt-br/documentation/webdriver/support_features/expected_conditions/</guid><description>expected_conditions.ja.md&amp;mdash; title: &amp;ldquo;Waiting with Expected Conditions&amp;rdquo; linkTitle: &amp;ldquo;Expected Conditions&amp;rdquo; weight: 1 description: &amp;gt; These are classes used to describe what needs to be waited for. Expected Conditions are used with Explicit Waits. Instead of defining the block of code to be executed with a lambda, an expected conditions method can be created to represent common things that get waited on. Some methods take locators as arguments, others take elements as arguments.</description></item></channel></rss>